<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Data.v17.1</name>
    </assembly>
    <members>
        <member name="T:DevExpress.Services.IProgressIndicationService">

            <summary>
                <para>Exposes functionality that enables you to display a progress indicator for time-consuming operations.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.IProgressIndicationService.Begin(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Initializes and displays a progress indicator.
</para>
            </summary>
            <param name="displayName">
		A string indicating what action is currently performed

            </param>
            <param name="minProgress">
		An integer specifying the minimum indicator value.

            </param>
            <param name="maxProgress">
		An integer specifying the maximum indicator value.

            </param>
            <param name="currentProgress">
		An integer specifying the current indicator value.

            </param>


        </member>
        <member name="M:DevExpress.Services.IProgressIndicationService.End">
            <summary>
                <para>Finalizes progress indication.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Services.IProgressIndicationService.SetProgress(System.Int32)">
            <summary>
                <para>Modifies the indicator value to track progress.

</para>
            </summary>
            <param name="currentProgress">
		An integer that is the value indicating the current progress.


            </param>


        </member>
        <member name="T:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore">

            <summary>
                <para>Provides methods for transferring data between cached data store elements.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.ModifyData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])">
            <summary>
                <para>When implemented by a class, executes specified modification statements against a cached data store, notifies about affected tables and returns the operation result.
</para>
            </summary>
            <param name="cookie">
		A Root element's state stored by a specific cache Node.

            </param>
            <param name="dmlStatements">
		An array of data modification statements.

            </param>
            <returns>A <see cref="DataCacheModificationResult"/> denoting the result of the data modifications.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.NotifyDirtyTables(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])">
            <summary>
                <para>When implemented by a class, informs a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>) about specific modified tables.
</para>
            </summary>
            <param name="cookie">
		A Root element's state stored by a specific cache Node.

            </param>
            <param name="dirtyTablesNames">
		An array of table names specifying modified tables.

            </param>
            <returns>A <see cref="DataCacheResult"/> object specifying a Root element's state.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.ProcessCookie(DevExpress.Xpo.DB.Helpers.DataCacheCookie)">
            <summary>
                <para>When implemented by a class, synchronizes table update information with a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).
</para>
            </summary>
            <param name="cookie">
		A Root element's state stored by a specific cache Node.

            </param>
            <returns>A <see cref="DataCacheResult"/> object specifying a Root element's state.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.SelectData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
            <summary>
                <para>When implemented by a class, fetches data from a cached data store using specified query statements and returns the operation result.
</para>
            </summary>
            <param name="cookie">
		A Root element's state stored by a specific cache Node.

            </param>
            <param name="selects">
		An array of query statements.

            </param>
            <returns>A <see cref="DataCacheSelectDataResult"/> object denoting the result of the data fetch.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.UpdateSchema(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)">
            <summary>
                <para>When implemented by a class, updates a cached data store's schema according to specified settings and returns the operation result.
</para>
            </summary>
            <param name="cookie">
		A Root element's state stored by a specific cache Node.

            </param>
            <param name="tables">
		An array of tables whose structure should be saved in the cached data store.

            </param>
            <param name="dontCreateIfFirstTableNotExist">
		<b>true</b> if the schema should not be created if the table that corresponds to the first item in the <i>tables</i> array doesn't exist in the cached data store; otherwise, <b>false</b>.

            </param>
            <returns>An <see cref="DataCacheUpdateSchemaResult"/> denoting the result of the update operation.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.ICachedDataStore">

            <summary>
                <para>The interface for objects that need to interact with a cached data store.

</para>
            </summary>

        </member>
        <member name="T:DevExpress.Xpo.DB.DataStoreBase">

            <summary>
                <para>The base class for data store providers (the objects providing access to specific data stores).
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpo.DB.DataStoreBase.AutoCreateOption">
            <summary>
                <para>Returns which operations are performed when a data store is accessed for the first time.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value that specifies the action which is performed when a data store is accessed for the first time.
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataStoreBase.Factories">
            <summary>
                <para>Returns registered provider factories.
</para>
            </summary>
            <value>An array of provider factories that are registered for the current data store.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.QueryDataStore(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
            <summary>
                <para>Creates a data store based on specified settings.
</para>
            </summary>
            <param name="connection">
		An object which implements the <see cref="T:System.Data.IDbConnection"/> interface.

            </param>
            <param name="autoCreateOption">
		An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when connecting to the created data store. The specified value initializes the data store's <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.

            </param>
            <returns>A data store implementing the <see cref="IDataStore"/> interface, which uses the <i>connection</i> to access a database.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.QueryDataStore(System.String,System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
            <summary>
                <para>Creates a data store based on specified settings.
</para>
            </summary>
            <param name="providerType">
		A <see cref="T:System.String"/> specifying the provider type. Normally, each provider returns its type via the <b>XpoProviderTypeString</b> property.

            </param>
            <param name="connectionString">
		The connection string which is used to instantiate a connection provider.

            </param>
            <param name="defaultAutoCreateOption">
		An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when connecting to the created data store. The specified value initializes the data store's <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.

            </param>
            <param name="objectsToDisposeOnDisconnect">
		An array of objects that implement the System.IDisposable interface. These objects are automatically disposed of when the created data store is disconnected.

            </param>
            <returns>A data store implementing the <see cref="IDataStore"/> interface, which uses the <i>connection</i> to access a database.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.RegisterDataStoreProvider(System.String,DevExpress.Xpo.DB.Helpers.DataStoreCreationFromStringDelegate)">
            <summary>
                <para>Registers a data store provider using a specified name and a procedure that establishes a connection for the provider.
</para>
            </summary>
            <param name="providerKey">
		A <see cref="T:System.String"/> that uniquely identifies a data store provider.

            </param>
            <param name="createFromStringDelegate">
		A <b>DataStoreCreationFromStringDelegate</b> delegate to be called when the data store provider is created and connected to a database using a connection string.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.RegisterDataStoreProvider(System.String,DevExpress.Xpo.DB.Helpers.DataStoreCreationFromConnectionDelegate)">
            <summary>
                <para>Registers a data store provider using a specified connection type name and a procedure that establishes a connection for the provider.
</para>
            </summary>
            <param name="connectionTypeShortName">
		A <see cref="T:System.String"/> specifying a connection type name, including a namespace. For instance, the <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> defines this parameter as "System.Data.SqlClient.SqlConnection".

            </param>
            <param name="createFromConnectionDelegate">
		A <b>DataStoreCreationFromConnectionDelegate</b> delegate to be called when the data store provider is created and connected to a database using a connection of the specified type.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.RegisterFactory(DevExpress.Xpo.DB.ProviderFactory)">
            <summary>
                <para>Registers a specified data store provider factory.
</para>
            </summary>
            <param name="providerFactory">
		A <b>ProviderFactory</b> object exposing members required to create a data store provider.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreBase.UpdateSchema(DevExpress.Xpo.DB.DBTable[])">
            <summary>
                <para>Updates a data store's schema according to specified settings.
</para>
            </summary>
            <param name="tables">
		An array of tables whose structure should be saved in the data store.

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataStoreBase.XpoProviderTypeParameterName">
            <summary>
                <para>Returns a parameter name used to denote a provider type in a connection string. The default value is "XpoProvider".
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DataCacheRoot">

            <summary>
                <para>The Root element that is used to connect Node elements to a cached data store.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheRoot.#ctor(DevExpress.Xpo.DB.IDataStore)">
            <summary>
                <para>Initializes a new instance of the DataCacheRoot class with a specified data store provider connected to a data store to be cached.
</para>
            </summary>
            <param name="subjectForCache">
		A  object which provides connection to a data store to be cached.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataCacheRoot.AutoCreateOption">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheRoot.Configure(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration)">
            <summary>
                <para>Applies specified configuration settings to a cached data store.
</para>
            </summary>
            <param name="configuration">
		A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object containing cache configuration settings.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheRoot.GetStorageTables(System.String[])">
            <summary>
                <para>Returns information that describes the structure of specified tables in a cached data store.
</para>
            </summary>
            <param name="tables">
		An array of table names whose information should be retrieved.

            </param>
            <returns>An array of <see cref="T:DevExpress.Xpo.DB.DBTable"/> objects that describe the structure of the requested <i>tables</i>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheRoot.GetStorageTablesList(System.Boolean)">
            <summary>
                <para>Returns a list of all the tables available in a cached data store.
</para>
            </summary>
            <param name="includeViews">
		<b>true</b>, to include views; otherwise, <b>false</b>

            </param>
            <returns>An array of the table names in the cached data store.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DataCacheNodeLocal">

            <summary>
                <para>The Node element that is used to connect to a cached data store's Root or Node element located on the local host.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNodeLocal.#ctor(DevExpress.Xpo.DB.ICacheToCacheCommunicationCore)">
            <summary>
                <para>Initializes a new instance of the DataCacheNodeLocal class with default settings and a specified parent cache element.
</para>
            </summary>
            <param name="parentCache">
		A parent Root or Node element specifying the element (located on the same computer) to which the current Node is connected.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNodeLocal.IsProbablyGroupByStatement(DevExpress.Xpo.DB.SelectStatement)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="stmt">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DataCacheNode">

            <summary>
                <para>The Node element that is used to connect to a cached data store's Root or Node element.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNode.#ctor(DevExpress.Xpo.DB.ICacheToCacheCommunicationCore)">
            <summary>
                <para>Initializes a new instance of the DataCacheNode class with default settings and a specified parent cache element.
</para>
            </summary>
            <param name="parentCache">
		A parent Root or Node element specifying the element to which the current Node is connected.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataCacheNode.AutoCreateOption">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNode.CatchUp">
            <summary>
                <para>Synchronizes the Node's table update information with the Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNode.Configure(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration)">
            <summary>
                <para>Applies specified configuration settings to a cached data store.
</para>
            </summary>
            <param name="configuration">
		A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object containing cache configuration settings.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNode.GetStorageTables(System.String[])">
            <summary>
                <para>Returns information that describes the structure of specified tables in a cached data store.
</para>
            </summary>
            <param name="tables">
		An array of table names whose information should be retrieved.

            </param>
            <returns>An array of <see cref="T:DevExpress.Xpo.DB.DBTable"/> objects that describe the structure of the requested <i>tables</i>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DataCacheNode.GetStorageTablesList(System.Boolean)">
            <summary>
                <para>Returns a list of all the tables available in a cached data store.
</para>
            </summary>
            <param name="includeViews">
		<b>true</b>, to include views; otherwise, <b>false</b>.

            </param>
            <returns>An array of the table names in the cached data store.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataCacheNode.GlobalTotalMemoryPurgeThreshold">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataCacheNode.GlobalTotalMemoryPurgeTreshhold">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataCacheNode.MaxCacheLatency">
            <summary>
                <para>Specifies the time period (also known as latency) between regular contacts that the current Node makes to its parent element for up-to-date table update information. The default value is 30 seconds.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataCacheNode.MinCachedRequestsAfterPurge">
            <summary>
                <para>Specifies the minimum number of query results to retain within the current Node's cache during its automatic purge. The default value is 16.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryNotPurgeThreshold">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryNotPurgeTreshhold">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryPurgeThreshold">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryPurgeTreshhold">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.TableAge">

            <summary>
                <para>Information on the age of tables cached via a <see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.TableAge.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.TableAge.#ctor(System.String,System.Int64)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="name">
		 

            </param>
            <param name="age">
		 

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.TableAge.Age">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.TableAge.Name">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult">

            <summary>
                <para>Information on the last state of a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>), including schema update results.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult.UpdateSchemaResult">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult">

            <summary>
                <para>Information on the last state of a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>), including query results.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult.SelectedData">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult.SelectingCookie">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheResult">

            <summary>
                <para>Information on the last state of a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheResult.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheResult.CacheConfig">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheResult.Cookie">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheResult.UpdatedTableAges">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheCookie">

            <summary>
                <para>A cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>) state information stored in a Node element (<see cref="T:DevExpress.Xpo.DB.DataCacheNode"/> or <see cref="T:DevExpress.Xpo.DB.DataCacheNodeLocal"/>).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheCookie.#ctor(System.Guid,System.Int64)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="guid">
		 

            </param>
            <param name="age">
		 

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheCookie.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheCookie.Age">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheCookie.Empty">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheCookie.Guid">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult">

            <summary>
                <para>Information on the last state of a cached data store's Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>), including data modification results.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult.#ctor">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult.ModificationResult">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration">

            <summary>
                <para>Contains configuration settings for cached data stores.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.#ctor(DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching,System.String[])">
            <summary>
                <para>Initializes a new instance of the DataCacheConfiguration class with specified caching scope settings.
</para>
            </summary>
            <param name="caching">
		A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching"/> enumeration value specifying the scope of <i>tables</i>. The specified value is used to initialize the <see cref="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Caching"/> property.

            </param>
            <param name="tables">
		An array of table names used to determine the caching scope. The specified value is used to initialize the <see cref="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Tables"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.#ctor">
            <summary>
                <para>Initializes a new instance of the DataCacheConfiguration class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Caching">
            <summary>
                <para>Specifies the scope of table settings in the current configuration.
</para>
            </summary>
            <value>A <see cref="DataCacheConfigurationCaching"/> enumeration value which identifies if tables specified via the <see cref="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Tables"/> property are included in or excluded from the caching scope.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.CreateTableDictionary(System.String[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="tableList">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Empty">
            <summary>
                <para>Returns a shallow DataCacheConfiguration instance.
</para>
            </summary>
            <value>A <see cref="DataCacheConfiguration"/> object instance with no configuration settings specified.
</value>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.SuppressExplicitTransactionExceptions">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.TableDictionary">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Tables">
            <summary>
                <para>Specifies tables to be used to determine the caching scope of the current configuration.
</para>
            </summary>
            <value>An array of table names specifying the tables to be included in or excluded from the caching scope.

</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching">

            <summary>
                <para>Lists the values that specify the scope of cache configuration settings in cached data stores.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching.All">
            <summary>
                <para>All tables will be cached, regardless of their inclusion in the configuration settings.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching.InList">
            <summary>
                <para>Only tables specified in configuration settings will be cached.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching.NotInList">
            <summary>
                <para>All tables except for the tables specified in configuration settings will be cached.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheBase">

            <summary>
                <para>Base class for classes that implement data store caching.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheBase.AutoCreateOption">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.Configure(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration)">
            <summary>
                <para>When implemented by a descendant class, applies specified configuration settings to a cached data store.
</para>
            </summary>
            <param name="configuration">
		A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object containing cache configuration settings.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.GetStorageTables(System.String[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="tables">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.GetStorageTablesList(System.Boolean)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="includeViews">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.IsBadForCache(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,DevExpress.Xpo.DB.JoinNode)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="config">
		 

            </param>
            <param name="node">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.IsBadForCache(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,System.String)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="config">
		 

            </param>
            <param name="tableName">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheBase.LogCategory">
            <summary>
                <para>The name of a category used to tag data cache operations in XPO logs. The default category name is "DataCache".
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="dmlStatements">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.ModifyData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cookie">
		 

            </param>
            <param name="statements">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.NotifyDirtyTables(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cookie">
		 

            </param>
            <param name="dirtyTablesNames">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.NotifyDirtyTables(System.String[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="dirtyTablesNames">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.ProcessCookie(DevExpress.Xpo.DB.Helpers.DataCacheCookie)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cookie">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.Reset">
            <summary>
                <para>When implemented by a descendant class, resets or clears any cached information on data store tables (such as table update information and cached query results).
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.SelectData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cookie">
		 

            </param>
            <param name="selects">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="selects">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.UpdateSchema(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="cookie">
		 

            </param>
            <param name="tables">
		 

            </param>
            <param name="dontCreateIfFirstTableNotExist">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="dontCreateIfFirstTableNotExist">
		 

            </param>
            <param name="tables">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.FunctionCategory">

            <summary>
                <para>Lists the values that specify categories for functions available in Expression Editors.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionCategory.All">
            <summary>
                <para>Identifies functions that fall into any of the other categories.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionCategory.DateTime">
            <summary>
                <para>Identifies functions that work with date-time values.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionCategory.Logical">
            <summary>
                <para>Identifies functions that perform logical operations.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionCategory.Math">
            <summary>
                <para>Identifies functions that perform math operations.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionCategory.Text">
            <summary>
                <para>Identifies functions that work with strings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable">

            <summary>
                <para>Defines server-side processing for custom functions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable.Format(System.Type,System.String[])">
            <summary>
                <para>When implemented by a custom function, formats a database-specific SQL command that corresponds to this function.
</para>
            </summary>
            <param name="providerType">
		A <see cref="T:System.Type"/> object specifying a data store (database) provider. For example, <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/>.

            </param>
            <param name="operands">
		An array of operands (parameters) passed to a custom function.

            </param>
            <returns>A <see cref="String"/> specifying a SQL command, which will substitute a custom function's calls in query statements.
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable">

            <summary>
                <para>Provides additional information (a function category, function description, parameter count, etc.) on custom functions for Expression Editors.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.Category">
            <summary>
                <para>When implemented by a custom function, designates its functional category.
</para>
            </summary>
            <value>A <see cref="FunctionCategory"/> value specifying a custom function's category.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.Description">
            <summary>
                <para>When implemented by a custom function, returns its description.
</para>
            </summary>
            <value>A text describing a custom function's syntax and purpose.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.IsValidOperandCount(System.Int32)">
            <summary>
                <para>When implemented by a custom function, determines if it accepts a specified number of operands (parameters).
</para>
            </summary>
            <param name="count">
		An integer value specifying the number of operands (parameters) passed to a custom function.

            </param>
            <returns><b>true</b> if the number of operands (parameters) passed as the <i>count</i> is valid for a custom function; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.IsValidOperandType(System.Int32,System.Int32,System.Type)">
            <summary>
                <para>When implemented by a custom function, determines if a certain type can be passed as a specified operand.
</para>
            </summary>
            <param name="operandIndex">
		A zero-based integer value specifying an operand's index among a custom function's operands.

            </param>
            <param name="operandCount">
		An integer value specifying the total number of operands passed to a custom function.

            </param>
            <param name="type">
		A <see cref="T:System.Type"/> object specifying an operand's type.

            </param>
            <returns><b>true</b> if a custom function accepts the <i>type</i>; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.MaxOperandCount">
            <summary>
                <para>When implemented by a custom function, returns the maximum number of operands (parameters) this function can accept.
</para>
            </summary>
            <value>An integer value specifying the maximum number of function operands (parameters) a custom function can accept. <b>-1</b> indicates that a custom function accepts an infinite number of operands.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.MinOperandCount">
            <summary>
                <para>When implemented by a custom function, returns the minimum number of operands (parameters) required by this function.
</para>
            </summary>
            <value>An integer value specifying the least possible number of function operands (parameters) required by a custom function. <b>0</b> indicates that operands can be omitted.
</value>


        </member>
        <member name="T:DevExpress.Utils.LayoutAllowEventArgs">

            <summary>
                <para>Provides data for events raised when upgrading a control's layout, allowing you to cancel the upgrade (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.BeforeLoadLayout"/>, <see cref="E:DevExpress.XtraBars.BarManager.BeforeLoadLayout"/>, etc.).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.LayoutAllowEventArgs.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the LayoutAllowEventArgs class with the specified previous version.
</para>
            </summary>
            <param name="previousVersion">
		A <see cref="T:System.String"/> specifying the previous version number. This value is assigned to the <see cref="P:DevExpress.Utils.LayoutUpgradeEventArgs.PreviousVersion"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.LayoutAllowEventArgs.Allow">
            <summary>
                <para>Gets or sets whether to allow upgrading the control layout.
</para>
            </summary>
            <value><b>true</b> to allow the operation; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Data.UnboundSourceProperty">

            <summary>
                <para>Supplies information on a column of the <see cref="T:DevExpress.Data.UnboundSource"/>'s list.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.UnboundSourceProperty.#ctor(System.String,System.Type)">
            <summary>
                <para>Initializes a new instance of the UnboundSourceProperty class.
</para>
            </summary>
            <param name="name">
		A string that is the property name.

            </param>
            <param name="propertyType">
		A <see cref="T:System.Type"/> object specifying the property type.

            </param>


        </member>
        <member name="M:DevExpress.Data.UnboundSourceProperty.#ctor">
            <summary>
                <para>Initializes a new instance of the UnboundSourceProperty class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.UnboundSourceProperty.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the UnboundSourceProperty class.
</para>
            </summary>
            <param name="name">
		A string that is the property name.

            </param>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceProperty.DisplayName">
            <summary>
                <para>Specifies the display name of the property.
</para>
            </summary>
            <value>A string that is the property display name.
</value>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceProperty.Name">
            <summary>
                <para>Specifies the name of the property.
</para>
            </summary>
            <value>A string that is the property name.
</value>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceProperty.PropertyType">
            <summary>
                <para>Specifies the property type
</para>
            </summary>
            <value>A <see cref="Type"/> object specifying the property type.
</value>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceProperty.UserTag">
            <summary>
                <para>Specifies an object that contains data associated with the property.
</para>
            </summary>
            <value>An object that contains data associated with the property.
</value>


        </member>
        <member name="T:DevExpress.Data.UnboundSource">

            <summary>
                <para>A data source used to supply and obtain a <a href="https://msdn.microsoft.com/en-us/library/system.componentmodel.itypedlist.aspx">typed list of objects</a> to data-aware controls in unbound mode.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.UnboundSource.#ctor(System.ComponentModel.IContainer)">
            <summary>
                <para>Initializes a new instance of the UnboundSource class.
</para>
            </summary>
            <param name="container">
		An <see cref="T:System.ComponentModel.IContainer"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.UnboundSource.#ctor">
            <summary>
                <para>Initializes a new instance of the UnboundSource class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.UnboundSource.Add">
            <summary>
                <para>Adds a new row to the end of the UnboundSource list.
</para>
            </summary>
            <returns>An integer index of the new row.

</returns>


        </member>
        <member name="M:DevExpress.Data.UnboundSource.Change(System.Int32,System.String)">
            <summary>
                <para>Changes the specified value.
</para>
            </summary>
            <param name="row">
		An integer row number containing the value to be changed.

            </param>
            <param name="propertyName">
		A string which is the name of the property whose value should be changed.

            </param>


        </member>
        <member name="M:DevExpress.Data.UnboundSource.Clear">
            <summary>
                <para>Clears the UnboundSource's list.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.UnboundSource.Count">
            <summary>
                <para>Specifies the item count in the UnboundSource's list.

</para>
            </summary>
            <value>An integer which is the item count.

</value>


        </member>
        <member name="M:DevExpress.Data.UnboundSource.InsertAt(System.Int32)">
            <summary>
                <para>Inserts a new row at the specified position.
</para>
            </summary>
            <param name="position">
		The integer index of the new row.


            </param>


        </member>
        <member name="P:DevExpress.Data.UnboundSource.Item(System.Int32,System.String)">
            <summary>
                <para>Specifies a value within the UnboundSource list at a specific row index and with the specific property name.

</para>
            </summary>
            <param name="rowIndex">
		The zero-based index of the value.

            </param>
            <param name="propertyName">
		A string which is the list property name.

            </param>
            <value>An object at the specific row index and with the specific property name.
</value>


        </member>
        <member name="M:DevExpress.Data.UnboundSource.Move(System.Int32,System.Int32)">
            <summary>
                <para>Moves the row to another position.
</para>
            </summary>
            <param name="from">
		The integer specifying the current row index.


            </param>
            <param name="to">
		The integer specifying the new row index.


            </param>


        </member>
        <member name="P:DevExpress.Data.UnboundSource.Properties">
            <summary>
                <para>Gets the collection of the UnboundSource's properties.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> object specifying the properties collection.
</value>


        </member>
        <member name="M:DevExpress.Data.UnboundSource.RemoveAt(System.Int32)">
            <summary>
                <para>Removes the specified row.
</para>
            </summary>
            <param name="index">
		The integer index of the row to be removed.


            </param>


        </member>
        <member name="M:DevExpress.Data.UnboundSource.Reset(System.Int32)">
            <summary>
                <para>Changes the capacity of the UnboundSource's list.
</para>
            </summary>
            <param name="countAfterReset">
		An integer specifying the new row count.

            </param>


        </member>
        <member name="M:DevExpress.Data.UnboundSource.SetRowCount(System.Int32)">
            <summary>
                <para>Changes the row count in the UnboundSource's list.
</para>
            </summary>
            <param name="count">
		An integer which is the new row count.

            </param>


        </member>
        <member name="E:DevExpress.Data.UnboundSource.UnboundSourceListChanged">
            <summary>
                <para>Occurs when the UnboundSource's list is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.UnboundSource.UnboundSourceListChanging">
            <summary>
                <para>Occurs when the UnboundSource's list is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.UnboundSource.ValueNeeded">
            <summary>
                <para>Occurs when a value is requested from the UnboundSource.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.UnboundSource.ValuePushed">
            <summary>
                <para>Occurs when a value is set in the UnboundSource.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Core.ApplicationThemeHelper">

            <summary>
                <para>An abstract class that provides access to an application's theme settings.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpf.Core.ApplicationThemeHelper.ApplicationThemeName">
            <summary>
                <para>Gets or sets the name of the theme applied to the entire application.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the theme name.
</value>


        </member>
        <member name="M:DevExpress.Xpf.Core.ApplicationThemeHelper.SaveApplicationThemeName">
            <summary>
                <para>Saves the current theme name to the application configuration file.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Core.ApplicationThemeHelper.UpdateApplicationThemeName">
            <summary>
                <para>Loads the theme name from the application configuration file.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Core.ApplicationThemeHelper.UseLegacyDefaultTheme">
            <summary>
                <para>Specifies whether the application should use the legacy default theme ("DeepBlue").
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.Helpers.ClauseType">

            <summary>
                <para>Lists the values that define the types of filter criteria used in the Automatic Filter Row.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.AnyOf">
            <summary>
                <para>Specifies the <b>Any Of</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.BeginsWith">
            <summary>
                <para>Specifies the <b>Begins With</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Between">
            <summary>
                <para>Specifies the <b>Between</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Contains">
            <summary>
                <para>Specifies the <b>Contains</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.DoesNotContain">
            <summary>
                <para>Specifies the <b>Does Not Contain</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.DoesNotEqual">
            <summary>
                <para>Specifies the <b>Does Not Equal</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.EndsWith">
            <summary>
                <para>Specifies the <b>Ends With</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Equals">
            <summary>
                <para>Specifies the <b>Equals</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Greater">
            <summary>
                <para>Specifies the <b>Greater</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.GreaterOrEqual">
            <summary>
                <para>Specifies the <b>Greater Or Equal</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsBeyondThisYear">
            <summary>
                <para>Specifies the <b>Is Beyond This Year</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsEarlierThisMonth">
            <summary>
                <para>Specifies the <b>Is Earlier This Month</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsEarlierThisWeek">
            <summary>
                <para>Specifies the <b>Is Earlier This Week</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsEarlierThisYear">
            <summary>
                <para>Specifies the <b>Is Earlier This Year</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsLastWeek">
            <summary>
                <para>Specifies the <b>Is Last Week</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsLaterThisMonth">
            <summary>
                <para>Specifies the <b>Is Later This Month</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsLaterThisWeek">
            <summary>
                <para>Specifies the <b>Is Later This Week</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsLaterThisYear">
            <summary>
                <para>Specifies the <b>Is Later This Year</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsNextWeek">
            <summary>
                <para>Specifies the <b>Is Next Week</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsNotNull">
            <summary>
                <para>Specifies the <b>Is Not Null</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsNotNullOrEmpty">
            <summary>
                <para>Specifies the <b>Is Not Null Or Empty</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsNull">
            <summary>
                <para>Specifies the <b>Is Null</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsNullOrEmpty">
            <summary>
                <para>Specifies the <b>Is Null Or Empty</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsPriorThisYear">
            <summary>
                <para>Specifies the <b>Is Prior This Year</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsToday">
            <summary>
                <para>Specifies the <b>Is Today</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsTomorrow">
            <summary>
                <para>Specifies the <b>Is Tomorrow</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsYesterday">
            <summary>
                <para>Specifies the <b>Is Yesterday</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Less">
            <summary>
                <para>Specifies the <b>Less</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.LessOrEqual">
            <summary>
                <para>Specifies the <b>Less Or Equal</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Like">
            <summary>
                <para>Specifies the <b>Like</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.NoneOf">
            <summary>
                <para>Specifies the <b>None Of</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.NotBetween">
            <summary>
                <para>Specifies the <b>Not Between</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.NotLike">
            <summary>
                <para>Specifies the <b>Not Like</b> filter criteria.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo">

            <summary>
                <para>Provides information about a data column listed in the Expression Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the ColumnInfo class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the ColumnInfo class with the specified category.
</para>
            </summary>
            <param name="category">
		A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo.#ctor(DevExpress.Data.Controls.ExpressionEditor.ColumnInfo)">
            <summary>
                <para>Initializes a new instance of the ColumnInfo class with the specified prototype.
</para>
            </summary>
            <param name="other">
		A ColumnInfo object, specifying a prototype for a new ColumnInfo instance.

            </param>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo.Type">
            <summary>
                <para>Specifies the type declaration of a data column.
</para>
            </summary>
            <value>A <see cref="T:System.Type"/> object.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.GroupOperatorType">

            <summary>
                <para>Enumerates group operator types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.GroupOperatorType.And">
            <summary>
                <para>Groups operands with logical AND.
<para>
To create the <b>logical AND</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 &gt; 100 AND Field2 &lt; 150")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.GroupOperatorType.Or">
            <summary>
                <para>Groups operands with logical OR.
<para>
To create the <b>logical OR</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>
<b>CriteriaOperator.Parse("Field1 &gt; 100 OR Field2 &lt; 150")</b>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter">

            <summary>
                <para>When implemented, specifies a converter used to serialize/deserialize arbitrary objects in a custom manner.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.CanConvert(System.Type)">
            <summary>
                <para>When implemented, returns whether the converter can serialize/deserialize objects of the specified type.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> that specifies the type to check.

            </param>
            <returns><b>true</b> if the converter can serialize/deserialize objects of the specified type; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.FromString(System.Type,System.String)">
            <summary>
                <para>When implemented, deserializes an object of the specified type from the specified string.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> that specifies the type of object to deserialize.

            </param>
            <param name="str">
		A <see cref="T:System.String"/> that represents the serialized object.

            </param>
            <returns>A deserialized object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.GetType(System.String)">
            <summary>
                <para>When implemented, returns the type by its full name.
</para>
            </summary>
            <param name="typeName">
		A <see cref="T:System.String"/> that specifies the full name of the type to return.

            </param>
            <returns>A <see cref="T:System.Type"/> that identifies the type whose full name is specified by the <i>typeName</i> parameter.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.ToString(System.Type,System.Object)">
            <summary>
                <para>When implemented, serializes the specified object of the specified type.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> that specifies the type of the object to serialize.

            </param>
            <param name="obj">
		The object to serialize.

            </param>
            <returns>A <see cref="T:System.String"/> that represents the serialized object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.ParameterValue">

            <summary>
                <para>This class supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.ParameterValue.#ctor(System.Int32)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="tag">
		 

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ParameterValue.#ctor">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.ParameterValue.Equals(System.Object)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="obj">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ParameterValue.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current ParameterValue object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.ParameterValue.Tag">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.OperandParameter">

            <summary>
                <para>This class supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.#ctor(System.String)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="parameterName">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.#ctor(System.String,System.Object)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="parameterName">
		 

            </param>
            <param name="value">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.#ctor">
            <summary>
                <para>For internal use only.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.Clone">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.Equals(System.Object)">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <param name="obj">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandParameter.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current OperandParameter object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.OperandParameter.ParameterName">
            <summary>
                <para>For internal use only.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="T:DevExpress.Data.Linq.GetQueryableEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable"/> and <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.DismissQueryable"/> events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Linq.GetQueryableEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the GetQueryableEventArgs class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Linq.GetQueryableEventArgs.AreSourceRowsThreadSafe">
            <summary>
                <para>Specifies whether elements retrieved by the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/>'s queryable source are thread-safe.
</para>
            </summary>
            <value><b>true</b>, if elements retrieved by the queryable source are thread-safe; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.Linq.GetQueryableEventArgs.KeyExpression">
            <summary>
                <para>Gets or sets the name of the key property.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value indicating the key property name.
</value>


        </member>
        <member name="P:DevExpress.Data.Linq.GetQueryableEventArgs.QueryableSource">
            <summary>
                <para>Gets or sets the queryable data source.
</para>
            </summary>
            <value>An object that implements the <see cref="T:System.Linq.IQueryable"/> interface.
</value>


        </member>
        <member name="P:DevExpress.Data.Linq.GetQueryableEventArgs.Tag">
            <summary>
                <para>Gets or sets an arbitrary object associated with a queryable source.
</para>
            </summary>
            <value>An object associated with a queryable source.
</value>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorColorProvider">

            <summary>
                <para>If implemented, provides a color scheme for painting expression elements in the Expression Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorColorProvider.GetColorForElement(DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind)">
            <summary>
                <para>Returns a color used for painting a specific expression element kind.
</para>
            </summary>
            <param name="elementKind">
		An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind"/> enumeration value.

            </param>
            <returns>A <see cref="T:System.Drawing.Color"/> structure.
</returns>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.CheckSpellingResultType">

            <summary>
                <para>Lists result types of spelling check.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraSpellChecker.CheckSpellingResultType.Misspelling">
            <summary>
                <para>A misspelled word is found.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.CheckSpellingResultType.Repeating">
            <summary>
                <para>A repeating word is found.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.CheckSpellingResultType.Success">
            <summary>
                <para>No errors are found
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.IOptionsSpellings">

            <summary>
                <para>The options used for the spelling check. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.IOptionsSpellings.BeginUpdate">
            <summary>
                <para>Locks the IOptionsSpellings object by preventing visual updates until the <b>EndUpdate</b> method is called.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.CheckFromCursorPos">
            <summary>
                <para>Start spelling check from the cursor position.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the spell checker should start checking from the cursor position.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.CheckSelectedTextFirst">
            <summary>
                <para>Spell check the selected text first.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether the spell checker should start checking the selected text first.
</value>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IOptionsSpellings.EndUpdate">
            <summary>
                <para>Unlocks the IOptionsSpellings object after a call to the <b>BeginUpdate</b> method and causes an immediate visual update.


</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreEmails">
            <summary>
                <para>Gets or sets whether e-mail addresses should be excluded from the check.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether words that are e-mail addresses should be checked.

</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreMarkupTags">
            <summary>
                <para>Gets or sets whether text enclosed with specific markup tags should be checked.

</para>
            </summary>
            <value><b>true</b> to exclude text within tags from the check; otherwise, <b>false</b>.


</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreMixedCaseWords">
            <summary>
                <para>Gets or sets whether the spell checker ignores words containing different case letters in positions other than the first.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether mixed case words should be checked.

</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreRepeatedWords">
            <summary>
                <para>Gets or sets whether the spell checker ignores repeated words.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether the text should be checked for repeated words.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreUpperCaseWords">
            <summary>
                <para>Gets or sets whether the spell checker ignores words in which all letters are uppercase.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the words in which all letters are uppercase should be checked.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreUrls">
            <summary>
                <para>Gets or sets whether the spell checker ignores the URLs in text.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the words which are URLs should be checked.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreWordsWithNumbers">
            <summary>
                <para>Gets or sets whether the spell checker ignores words that contain numbers.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the words which contain numbers should be checked.
</value>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.IOptionsSpellings.OptionChanged">
            <summary>
                <para>Occurs when any of the spelling check options are changed.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.ICheckSpellingResult">

            <summary>
                <para>Represents the result of the spelling check.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.HasError">
            <summary>
                <para>Gets whether the spelling error is found during a spelling check.
</para>
            </summary>
            <value><b>true</b> if a spelling error is found; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Index">
            <summary>
                <para>Gets the index of a checked word in a text.

</para>
            </summary>
            <value>An integer representing the index of a word in a text.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Length">
            <summary>
                <para>Gets the length of a checked word.
</para>
            </summary>
            <value>An integer representing the number of positions the checked word occupies.


</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Result">
            <summary>
                <para>Indicates the result of checking a word.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.CheckSpellingResultType"/> enumeration member.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Text">
            <summary>
                <para>Gets the text being checked.
</para>
            </summary>
            <value>A string containing the text being checked.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Value">
            <summary>
                <para>Gets the checked word.
</para>
            </summary>
            <value>A string representing the checked word.
</value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.ISpellChecker">

            <summary>
                <para>The base interface of a spell checker.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.AddToDictionary(System.String)">
            <summary>
                <para>Add a word to a custom dictionary.
</para>
            </summary>
            <param name="word">
		A word to add.

            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.AddToDictionary(System.String,System.Globalization.CultureInfo)">
            <summary>
                <para>Add a word to a custom dictionary.
</para>
            </summary>
            <param name="word">
		A word to add.

            </param>
            <param name="culture">
		A <see cref="T:System.Globalization.CultureInfo"/> object used to select a dictionary for the specified word.

            </param>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.AfterCheckWord">
            <summary>
                <para>Occurs after a word is checked.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.CanAddToDictionary">
            <summary>
                <para>Determines whether a word can be added to a custom dictionary.
</para>
            </summary>
            <returns><b>true</b> if a word can be added to the dictionary; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.CanAddToDictionary(System.Globalization.CultureInfo)">
            <summary>
                <para>Determines whether words of the specified language can be added to the dictionary.
</para>
            </summary>
            <param name="culture">
		A <see cref="T:System.Globalization.CultureInfo"/> object that specifies the language of the required dictionary.

            </param>
            <returns><b>true</b>, if the words can be added to the dictionary; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.Check(System.Object)">
            <summary>
                <para>Checks the specified control for spelling mistakes.
</para>
            </summary>
            <param name="control">
		A <see cref="T:System.Windows.Forms.Control"/> object, representing a control to be checked for spelling mistakes.

            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.Check(System.Object,DevExpress.XtraSpellChecker.Parser.ISpellCheckTextController,DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position)">
            <summary>
                <para>Checks the spelling of the text available through the controller interface in the specified range and returns on the first error that occurrs.

</para>
            </summary>
            <param name="control">
		An object that is a control to be checked for spelling mistakes.

            </param>
            <param name="controller">
		An object implementing the <see cref="T:DevExpress.XtraSpellChecker.Parser.ISpellCheckTextController"/> interface providing text to check.


            </param>
            <param name="from">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object containing information on the position where the check statrs.


            </param>
            <param name="to">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object containing information on the position where the check finishes.

            </param>
            <returns>An object with the <see cref="T:DevExpress.XtraSpellChecker.ISpellingErrorInfo"/> interface providing information on the error type and position.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.CheckText(System.Object,System.String,System.Int32,System.Globalization.CultureInfo)">
            <summary>
                <para>Checks the specified text in the specified control with the specified culture. 
</para>
            </summary>
            <param name="control">
		A control to check. 

            </param>
            <param name="text">
		A string that is a text to check. 


            </param>
            <param name="index">
		An integer specifying the start position within the string.


            </param>
            <param name="culture">
		The <see cref="T:System.Globalization.CultureInfo"/> object that specifies the culture settings (the symbols encoding, language and phonetic specifics).

            </param>
            <returns>An object exposing the <see cref="T:DevExpress.XtraSpellChecker.ICheckSpellingResult"/> interface. 
</returns>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ISpellChecker.Culture">
            <summary>
                <para>Gets or sets the culture-specific settings of the spell checker.
</para>
            </summary>
            <value>A <see cref="T:System.Globalization.CultureInfo"/> object that specifies culture settings (the symbols encoding, language and phonetic specifics).


</value>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.CultureChanged">
            <summary>
                <para>Occurs when the current culture setting of a spell checker is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.CustomDictionaryChanged">
            <summary>
                <para>Occurs when a custom dictionary is modified by an end-user.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.GetOptions(System.Object)">
            <summary>
                <para>Provides access to spell checking options for a specified control.
</para>
            </summary>
            <param name="control">
		A control for which spelling options are set.

            </param>
            <returns>An object exposing the <see cref="T:DevExpress.XtraSpellChecker.IOptionsSpellings"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.GetSuggestions(System.String,System.Globalization.CultureInfo)">
            <summary>
                <para>Constructs an ordered list of suggestions for a given word.
</para>
            </summary>
            <param name="word">
		A System.String representing a word for which the suggestions should be calculated. 

            </param>
            <param name="culture">
		A <see cref="T:System.Globalization.CultureInfo"/> object specifying the culture, ensuring that the proper dictionaries are loaded.


            </param>
            <returns>A <see cref="T:DevExpress.XtraSpellChecker.SuggestionCollection"/> object representing a sorted list of suggested words.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.Ignore(System.Object,System.String,DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position)">
            <summary>
                <para>Disregards a word in a text.
</para>
            </summary>
            <param name="control">
		A control whose content is checked.


            </param>
            <param name="word">
		A word to ignore while checking.

            </param>
            <param name="start">
		The position from which to start ignoring the word.


            </param>
            <param name="end">
		Position to finish ignoring the word.

            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.IgnoreAll(System.Object,System.String)">
            <summary>
                <para>Skips the specified word throughout the entire content of the specified control.
</para>
            </summary>
            <param name="control">
		A control whose content is checked.

            </param>
            <param name="word">
		A word to ignore.

            </param>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ISpellChecker.IsChecking">
            <summary>
                <para>Gets whether the spell checker is checking the content. 
</para>
            </summary>
            <value><b>true</b> if a spell checker is checking the content; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.RegisterIgnoreList(System.Object,DevExpress.XtraSpellChecker.IIgnoreList)">
            <summary>
                <para>Registers a list of words as the words to ignore while checking.
</para>
            </summary>
            <param name="control">
		A control whose content is checked.


            </param>
            <param name="ignoreList">
		An object exposing the <see cref="T:DevExpress.XtraSpellChecker.IIgnoreList"/> interface and representing a list of words to skip.

            </param>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ISpellChecker.SpellCheckMode">
            <summary>
                <para>Gets or sets the spell check mode.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckMode"/> enumeration member.
</value>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.SpellCheckModeChanged">
            <summary>
                <para>Occurs when the <b>SpellCheckMode</b> is changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.UnregisterIgnoreList(System.Object)">
            <summary>
                <para>Unregisters the previously registered list of words which should be skipped while checking.
</para>
            </summary>
            <param name="control">
		A control whose content is checked.

            </param>


        </member>
        <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded">
            <summary>
                <para>Occurs after a word is added to a custom dictionary.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Linq.LinqInstantFeedbackSource">

            <summary>
                <para>The data source for the GridControl and SearchLookUpEdit that binds these controls to any queryable source ('LINQ to SQL Classes') in Instant Feedback Mode.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.#ctor(System.EventHandler`1)">
            <summary>
                <para>Initializes a new instance of the LinqInstantFeedbackSource with the specified settings.
</para>
            </summary>
            <param name="getQueryable">
		An <see cref="T:System.EventHandler`1[[DevExpress.Data.Linq.GetQueryableEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.

            </param>


        </member>
        <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.#ctor(System.Action`1,System.Action`1)">
            <summary>
                <para>Initializes a new instance of the LinqInstantFeedbackSource with the specified settings.
</para>
            </summary>
            <param name="getQueryable">
		An <see cref="T:System.Action`1[[DevExpress.Data.Linq.GetQueryableEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.

            </param>
            <param name="freeQueryable">
		An <see cref="T:System.Action`1[[DevExpress.Data.Linq.GetQueryableEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.DismissQueryable"/> event. The specified delegate is attached to this event.

            </param>


        </member>
        <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.#ctor(System.Action`1)">
            <summary>
                <para>Initializes a new instance of the LinqInstantFeedbackSource with the specified settings.
</para>
            </summary>
            <param name="getQueryable">
		An <see cref="T:System.Action`1[[DevExpress.Data.Linq.GetQueryableEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.

            </param>


        </member>
        <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.#ctor">
            <summary>
                <para>Creates a new instance of the LinqInstantFeedbackSource.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.#ctor(System.EventHandler`1,System.EventHandler`1)">
            <summary>
                <para>Initializes a new instance of the LinqInstantFeedbackSource with the specified settings.
</para>
            </summary>
            <param name="getQueryable">
		An <see cref="T:System.EventHandler`1[[DevExpress.Data.Linq.GetQueryableEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.

            </param>
            <param name="freeQueryable">
		An <see cref="T:System.EventHandler`1[[DevExpress.Data.Linq.GetQueryableEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.DismissQueryable"/> event. The specified delegate is attached to this event.

            </param>


        </member>
        <member name="P:DevExpress.Data.Linq.LinqInstantFeedbackSource.AreSourceRowsThreadSafe">
            <summary>
                <para>Specifies whether elements retrieved by the LinqInstantFeedbackSource's queryable source are thread-safe.
</para>
            </summary>
            <value><b>true</b>, if elements retrieved by the queryable source are thread-safe; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.Linq.LinqInstantFeedbackSource.DefaultSorting">
            <summary>
                <para>Specifies how data source contents are sorted by default, when sort order is not specified by the bound control.
</para>
            </summary>
            <value>A <see cref="String"/> object which contains the names of the columns against which data source contents are sorted.
</value>


        </member>
        <member name="P:DevExpress.Data.Linq.LinqInstantFeedbackSource.DesignTimeElementType">
            <summary>
                <para>Specifies the type of objects that will be retrieved from a data source, at design time.
</para>
            </summary>
            <value>A type of objects that will be retrieved from a data source.

</value>


        </member>
        <member name="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.DismissQueryable">
            <summary>
                <para>Occurs when the LinqInstantFeedbackSource no longer needs the queryable source it used to retrieve objects from the data store.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.ExtractOriginalRow(System.Object)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="uiThreadRow">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable">
            <summary>
                <para>Occurs when the LinqInstantFeedbackSource needs a queryable source, to retrieve objects from the data store.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Linq.LinqInstantFeedbackSource.KeyExpression">
            <summary>
                <para>Specifies the name of the key property.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the key property name.
</value>


        </member>
        <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.Refresh">
            <summary>
                <para>Refreshes the LinqInstantFeedbackSource.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Schedule.WorkDayType">

            <summary>
                <para>Lists day types by the working activity.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Schedule.WorkDayType.ExactWorkDay">
            <summary>
                <para>Indicates that a particular, exact date is a work day.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Schedule.WorkDayType.Holiday">
            <summary>
                <para>Indicates that this day is a holiday.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Schedule.WorkDayType.WeekDay">
            <summary>
                <para>Indicates a weekday.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.BorderDashStyle">

            <summary>
                <para>Lists the values used to specify the border's dash style for an <see cref="T:DevExpress.XtraReports.UI.XRControl"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Dash">
            <summary>
                <para>Specifies a line consisting of dashes.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.DashDot">
            <summary>
                <para>Specifies a line consisting of a repeating dash-dot pattern. Not supported in HTML (becomes visible as <b>Dash</b>)

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.DashDotDot">
            <summary>
                <para>Specifies a line consisting of a repeating dash-dot-dot pattern. Not supported in HTML (becomes visible as <b>Dash</b>)

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Dot">
            <summary>
                <para>Specifies a line consisting of dots.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Double">
            <summary>
                <para>Specifies a double solid line.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Solid">
            <summary>
                <para>Specifies a solid line.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.TextRenderingMode">

            <summary>
                <para>Lists the values indicating the available text rendering modes.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.TextRenderingMode.AntiAlias">
            <summary>
                <para>Antialiased glyph bitmaps without hinting is used.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextRenderingMode.AntiAliasGridFit">
            <summary>
                <para>Antialiased glyph bitmaps and hinting are used.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextRenderingMode.ClearTypeGridFit">
            <summary>
                <para>ClearType glyph bitmaps and hinting are used.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextRenderingMode.SingleBitPerPixel">
            <summary>
                <para>Glyph bitmaps without hinting are used.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextRenderingMode.SingleBitPerPixelGridFit">
            <summary>
                <para>Glyph bitmaps and hinting are used.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextRenderingMode.SystemDefault">
            <summary>
                <para>The system default rendering is used.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Labels.LabelWizardCustomization">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.LabelWizardCustomization"/> class instead.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelWizardCustomization.ExternalLabelProductRepository">
            <summary>
                <para>Specifies a path to an XML file containing custom label product definitions.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value, specifying the path to an XML file.
</value>


        </member>
        <member name="T:DevExpress.Data.WizardFramework.Wizard`1">

            <summary>
                <para>A Data Source Wizard instance associated with a specific View.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.WizardFramework.Wizard`1.#ctor(DevExpress.Data.WizardFramework.IWizardView,DevExpress.Data.WizardFramework.TWizardModel,DevExpress.Data.WizardFramework.IWizardPageFactory`1)">
            <summary>
                <para>Initializes a new instance of the Wizard&lt;TWizardModel&gt; class with the specified settings.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardView"/> interface.

            </param>
            <param name="model">
		An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardModel"/> interface.

            </param>
            <param name="pageFactory">
		An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardPageFactory`1"/> interface.

            </param>


        </member>
        <member name="E:DevExpress.Data.WizardFramework.Wizard`1.Cancelled">
            <summary>
                <para>Occurs when a wizard execution has been cancelled.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.WizardFramework.Wizard`1.Completed">
            <summary>
                <para>Occurs when a wizard execution has been completed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.WizardFramework.Wizard`1.CurrentPage">
            <summary>
                <para>Returns the current wizard page.
</para>
            </summary>
            <value>An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardPage`1"/> interface.
</value>


        </member>
        <member name="M:DevExpress.Data.WizardFramework.Wizard`1.GetResultModel">
            <summary>
                <para>Returns the resulting wizard model.
</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardModel"/> interface.
</returns>


        </member>
        <member name="E:DevExpress.Data.WizardFramework.Wizard`1.NextPageShowing">
            <summary>
                <para>Occurs when a wizard has been navigated to the next page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.WizardFramework.Wizard`1.SetStartPage(System.Type)">
            <summary>
                <para>Specifies the starting wizard page.
</para>
            </summary>
            <param name="pageType">
		A <see cref="T:System.Type"/> enumeration value.

            </param>


        </member>
        <member name="P:DevExpress.Data.WizardFramework.Wizard`1.View">
            <summary>
                <para>Provides access to an object that provides the view functionality to a Data Source Wizard.
</para>
            </summary>
            <value>An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardView"/> interface.
</value>


        </member>
        <member name="T:DevExpress.Data.WizardFramework.IWizardView">

            <summary>
                <para>If implemented, provides the View functionality to the Data Source Wizard.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.Data.WizardFramework.IWizardView.Cancel">
            <summary>
                <para>Occurs after clicking the <b>Cancel</b> button in a wizard.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.WizardFramework.IWizardView.EnableFinish(System.Boolean)">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is available in a wizard.
</para>
            </summary>
            <param name="enable">
		<b>true</b>, if the <b>Finish</b> button is available; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Data.WizardFramework.IWizardView.EnableNext(System.Boolean)">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is available in a wizard.
</para>
            </summary>
            <param name="enable">
		<b>true</b>, if the <b>Next</b> button is available; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Data.WizardFramework.IWizardView.EnablePrevious(System.Boolean)">
            <summary>
                <para>Specifies whether or not the <b>Previous</b> button is available in a wizard.
</para>
            </summary>
            <param name="enable">
		<b>true</b>, if the <b>Previous</b> button is available; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="E:DevExpress.Data.WizardFramework.IWizardView.Finish">
            <summary>
                <para>Occurs after clicking the <b>Finish</b> button in a wizard.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.WizardFramework.IWizardView.Next">
            <summary>
                <para>Occurs after clicking the <b>Next</b> button in a wizard.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.WizardFramework.IWizardView.Previous">
            <summary>
                <para>Occurs after clicking the <b>Previous</b> button in a wizard.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.WizardFramework.IWizardView.SetPageContent(System.Object)">
            <summary>
                <para>Specifies the content of a wizard page.
</para>
            </summary>
            <param name="content">
		A <see cref="T:System.Object"/> value.

            </param>


        </member>
        <member name="M:DevExpress.Data.WizardFramework.IWizardView.ShowError(System.String)">
            <summary>
                <para>Displays an error message with a specified text.
</para>
            </summary>
            <param name="error">
		A <see cref="T:System.String"/> value.

            </param>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.WordAddedEventHandler">

            <summary>
                <para>Methods that will handle the <b>WordAdded</b> event.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.WordAddedEventHandler.Invoke(System.Object,DevExpress.XtraSpellChecker.WordAddedEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> event.
</para>
            </summary>
            <param name="sender">
		An object of any type that triggers the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraSpellChecker.WordAddedEventArgs"/> object that provides data for the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> event.

            </param>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.WordAddedEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> and <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.WordAdded"/> events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.WordAddedEventArgs.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the WordAddedEventArgs class with the specified settings. 


</para>
            </summary>
            <param name="word">
		A word that has been added to the custom dictionary.

            </param>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.WordAddedEventArgs.Word">
            <summary>
                <para>Gets a word added to the dictionary.
</para>
            </summary>
            <value>A string representing a word added to the dictionary.
</value>


        </member>
        <member name="T:DevExpress.Schedule.OutlookHolidaysLoader">

            <summary>
                <para>Represents a class implemented to load holidays from the Outlook.hol file.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.#ctor">
            <summary>
                <para>Initializes a new instance of the OutlookHolidaysLoader class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.ExtractLocations(System.IO.Stream)">
            <summary>
                <para>Retrieves locations for which holidays are present.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> containing holidays, as they are specified for MS Outlook.


            </param>
            <returns>An array of strings containing location names.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.ExtractLocations(System.String)">
            <summary>
                <para>Retrieves locations for which holidays are present.
</para>
            </summary>
            <param name="fileName">
		A string representing the location of the file containing holidays in MS Outlook format.

            </param>
            <returns>An array of strings containing location names.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromFile(System.String)">
            <summary>
                <para>Loads holidays from the specified file.
</para>
            </summary>
            <param name="fileName">
		A string that is the location of the holidays file. For MS Office 2013 US English you can find it at C:\Program Files\Microsoft Office\Office15\1033\outlook.hol.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromFile(System.String,System.Text.Encoding,System.String[])">
            <summary>
                <para>Loads holidays for specified locations from the specified file, using the specified encoding.
</para>
            </summary>
            <param name="fileName">
		A string that is the location of the holidays file. For MS Office 2013 US English you can find it at C:\Program Files\Microsoft Office\Office15\1033\outlook.hol.

            </param>
            <param name="encoding">
		A <see cref="T:System.Text.Encoding"/> class representing a character encoding.

            </param>
            <param name="locations">
		An array of strings containing location names.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromFile(System.String,System.String[])">
            <summary>
                <para>Loads holidays for specified locations from the specified file.
</para>
            </summary>
            <param name="fileName">
		A string that is the location of the holidays file. For MS Office 2013 US English you can find it at C:\Program Files\Microsoft Office\Office15\1033\outlook.hol.

            </param>
            <param name="locations">
		An array of strings containing location names.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromStream(System.IO.Stream,System.Text.Encoding,System.String[])">
            <summary>
                <para>Loads holidays for specified locations from the specified stream, using the specified encoding.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> containing holidays as they are represented for MS Outlook.

            </param>
            <param name="encoding">
		A <see cref="T:System.Text.Encoding"/> class representing a character encoding.

            </param>
            <param name="locations">
		An array of strings containing location names.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromStream(System.IO.Stream,System.String[])">
            <summary>
                <para>Loads holidays for specified locations from the specified stream.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> containing holidays as they are represented for MS Outlook.

            </param>
            <param name="locations">
		An array of strings containing location names.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromStream(System.IO.Stream)">
            <summary>
                <para>Loads holidays from the specified stream.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> containing holidays as they are represented for MS Outlook.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.
</returns>


        </member>
        <member name="T:DevExpress.Schedule.ExactWorkDay">

            <summary>
                <para>Represents a day that is recognized as a work day. 


</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.#ctor(System.DateTime,System.String)">
            <summary>
                <para>Initializes a new instance of the ExactWorkDay class with the specified date and display name.

</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value that specifies the date of the working day. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.Date"/> property.

            </param>
            <param name="displayName">
		A <see cref="T:System.String"/> which specifies the display name of the working day. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.DisplayName"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.CheckDate(System.DateTime)">
            <summary>
                <para>Determines whether the specified date is treated as a working day for the current ExactWorkDay.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value representing the date to check.

            </param>
            <returns>A <see cref="F:DevExpress.Schedule.DateCheckResult.WorkDay"/> enumeration value if the date is a work day; otherwise the <see cref="F:DevExpress.Schedule.DateCheckResult.Unknown"/> value.
 
</returns>


        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.Clone">
            <summary>
                <para>Creates a copy of the current ExactWorkDay object.
</para>
            </summary>
            <returns>An ExactWorkDay object which is a copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current ExactWorkDay instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object. 

            </param>
            <returns><b>true</b> if the specified object is equal to the current ExactWorkDay instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current ExactWorkDay object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.ExactWorkDay.IsWorkDay(System.DateTime)">
            <summary>
                <para>Determines whether the specified date is treated as a working day.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value representing the date to be identified.

            </param>
            <returns><b>true</b> if the specified day is a working day; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Schedule.ExactWorkDay.Type">
            <summary>
                <para>Gets the day type associated with this class.
</para>
            </summary>
            <value>An <see cref="F:DevExpress.Schedule.WorkDayType.ExactWorkDay"/> enumeration value.
</value>


        </member>
        <member name="T:DevExpress.Schedule.DateCheckResult">

            <summary>
                <para>Lists the day types regarding the recognized working activity. 

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Schedule.DateCheckResult.Holiday">
            <summary>
                <para>This date is treated as a holiday.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Schedule.DateCheckResult.Unknown">
            <summary>
                <para>This date cannot be attributed to a working day or holiday.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Schedule.DateCheckResult.WorkDay">
            <summary>
                <para>This date is treated as a working day.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Schedule.WorkDay">

            <summary>
                <para>Serves as a base class for classes that represent a day, regarding the working activity recognized for the specific date. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.WorkDay.CheckDate(System.DateTime)">
            <summary>
                <para>Determines how to treat the specified date in terms of the work day and a holiday.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value, representing the date to check.

            </param>
            <returns>A <see cref="T:DevExpress.Schedule.DateCheckResult"/> enumeration member.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.WorkDay.IsWorkDay(System.DateTime)">
            <summary>
                <para>Determines whether the specified date is treated as a working day for the current working day.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value representing the date to be identified.

            </param>
            <returns><b>true</b> if the specified date is a working day; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Schedule.WorkDay.Type">
            <summary>
                <para>Gets the type of the day that the current instance of the WorkDay class descendant represents.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Schedule.WorkDayType"/> enumeration member specifying the day type.
</value>


        </member>
        <member name="T:DevExpress.Schedule.KnownDateDay">

            <summary>
                <para>Serves as a base class to represent a day corresponding to the particular date. 

</para>
            </summary>

        </member>
        <member name="P:DevExpress.Schedule.KnownDateDay.Date">
            <summary>
                <para>Returns a date, associated with the current <b>KnownDateDay</b> object or its descendant.
</para>
            </summary>
            <value>A <see cref="T:System.DateTime"/> value.
</value>


        </member>
        <member name="P:DevExpress.Schedule.KnownDateDay.DisplayName">
            <summary>
                <para>Gets or sets the name of the day to display, associated with the current <b>KnownDateDay</b> object or its descendant.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> representing a name of the day.
</value>


        </member>
        <member name="M:DevExpress.Schedule.KnownDateDay.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current KnownDateDay instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object. 

            </param>
            <returns><b>true</b> if the specified object is equal to the current KnownDateDay instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.KnownDateDay.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current KnownDateDay object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.Schedule.Holiday">

            <summary>
                <para>Represents a day that is recognized as a holiday. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.Holiday.#ctor(System.DateTime,System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the Holiday class with the specified date, display name and location.

</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value that specifies the date of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.Date"/> property.

            </param>
            <param name="displayName">
		A <see cref="T:System.String"/> which specifies the display name of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.DisplayName"/> property.

            </param>
            <param name="location">
		A <see cref="T:System.String"/> which specifies the location of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.Holiday.Location"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.#ctor(System.DateTime,System.String)">
            <summary>
                <para>Initializes a new instance of the Holiday class with the specified date and display name.

</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value that specifies the date of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.Date"/> property.

            </param>
            <param name="displayName">
		A <see cref="T:System.String"/> which specifies the display name of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.DisplayName"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.CheckDate(System.DateTime)">
            <summary>
                <para>Determines whether the specified date is treated as a working day for the current holiday.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value representing the date to check.

            </param>
            <returns>A <see cref="F:DevExpress.Schedule.DateCheckResult.Holiday"/> enumeration value if the date is a holiday; otherwise the <see cref="F:DevExpress.Schedule.DateCheckResult.Unknown"/> value.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.Clone">
            <summary>
                <para>Creates a copy of the current Holiday object.
</para>
            </summary>
            <returns>A Holiday object which is a copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current Holiday instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object. 

            </param>
            <returns><b>true</b> if the specified object is equal to the current Holiday instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current Holiday object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Schedule.Holiday.IsWorkDay(System.DateTime)">
            <summary>
                <para>Determines whether the specified date is treated as a working day for the current holiday.
</para>
            </summary>
            <param name="date">
		A <see cref="T:System.DateTime"/> value representing the date to be identified.

            </param>
            <returns>Always <b>false</b>.

</returns>


        </member>
        <member name="P:DevExpress.Schedule.Holiday.Location">
            <summary>
                <para>Gets or sets the location attribute of the holiday.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the holiday's location.
</value>


        </member>
        <member name="P:DevExpress.Schedule.Holiday.Type">
            <summary>
                <para>Gets the day type associated with this class.
</para>
            </summary>
            <value>A <see cref="F:DevExpress.Schedule.WorkDayType.Holiday"/> enumeration value.
</value>


        </member>
        <member name="T:DevExpress.Schedule.HolidayBaseCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Schedule.Holiday"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Schedule.HolidayBaseCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the HolidayBaseCollection class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.LayoutUpgradeEventHandler">

            <summary>
                <para>A method that will handle events raised when upgrading a control's layout (e.g., <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.LayoutUpgrade"/>, <see cref="E:DevExpress.XtraBars.BarManager.LayoutUpgrade"/>, etc.). 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.LayoutUpgradeEventHandler.Invoke(System.Object,DevExpress.Utils.LayoutUpgradeEventArgs)">
            <summary>
                <para>A method that will handle events raised when upgrading a control's layout (e.g., <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.LayoutUpgrade"/>, <see cref="E:DevExpress.XtraBars.BarManager.LayoutUpgrade"/>, etc.).
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.LayoutUpgradeEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Utils.AzureCompatibility">

            <summary>
                <para>Provides an option to fix issues with unexpected output content (such as red crosses X, distorted fonts, etc.) for Printing, Reporting, RichEditDocumentServer and PDF libraries used on the Microsoft Azure Web Sites.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.AzureCompatibility.Enable">
            <summary>
                <para>Specifies whether or not the PDF export mode is Azure-compatible.
</para>
            </summary>
            <value><b>true</b> if the PDF export is Azure-compatible; otherwise <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Data.SubstituteFilterEventArgs">

            <summary>
                <para> </para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.SubstituteFilterEventArgs.#ctor">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.SubstituteFilterEventArgs.#ctor(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para> </para>
            </summary>
            <param name="filter">
		 
            </param>


        </member>
        <member name="P:DevExpress.Data.SubstituteFilterEventArgs.Filter">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.IIgnoreList">

            <summary>
                <para>Represents a list of words ignored during spell check. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Add(System.String)">
            <summary>
                <para>Adds a specified word to a list of ignored words.
</para>
            </summary>
            <param name="word">
		A string representing a word to be ignored.

            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Add(DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position,System.String)">
            <summary>
                <para>Adds a specified word to a list of ignored words, so that it is ignored only in the specified location.
</para>
            </summary>
            <param name="start">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text.

            </param>
            <param name="end">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text.

            </param>
            <param name="word">
		A string representing a word to be ignored if located between the start and the end positions.

            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Clear">
            <summary>
                <para>Removes all items from the ignore list. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Contains(System.String)">
            <summary>
                <para>Determines whether a word is in the list of ignored words.
</para>
            </summary>
            <param name="word">
		A string to locate in the list of ignored words.

            </param>
            <returns><b>true</b> if the word is found within the list; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Contains(DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position,System.String)">
            <summary>
                <para>Determines whether a word is in the list of ignored words, ignored in the specified location.

</para>
            </summary>
            <param name="start">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text being checked.

            </param>
            <param name="end">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text being checked.

            </param>
            <param name="word">
		A string to locate in the list of ignored words.

            </param>
            <returns><b>true</b> if the word is found within the list and marked as effective in the specified location; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Remove(DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position,System.String)">
            <summary>
                <para>Removes a word from the list of words ignored only once.
</para>
            </summary>
            <param name="start">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text being checked.

            </param>
            <param name="end">
		A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object representing a position in the text being checked.

            </param>
            <param name="word">
		A string representing a word to remove from the list.


            </param>


        </member>
        <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Remove(System.String)">
            <summary>
                <para>Removes a word from the list.
</para>
            </summary>
            <param name="word">
		A string representing a word to remove form the list.

            </param>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.ConstraintViolationException">

            <summary>
                <para>An exception that is thrown when a key or index constraint fails.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.ConstraintViolationException.#ctor(System.String,System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the ConstraintViolationException class with the specified settings.
</para>
            </summary>
            <param name="sql">
		A string that specifies the SQL statement that raised the exception.

            </param>
            <param name="parameters">
		A string that specifies the parameters for the SQL statement.

            </param>
            <param name="innerException">
		An <see cref="T:System.Exception"/> object that represents the inner error.

            </param>


        </member>
        <member name="T:DevExpress.Data.Camera.CameraDeviceBase">

            <summary>
                <para>The base class for classes that describe video capture devices.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.#ctor(DevExpress.Data.Camera.CameraDeviceInfo)">
            <summary>
                <para>Initializes a new instance of the CameraDeviceBase class with the specified settings.
</para>
            </summary>
            <param name="deviceInfo">
		An object that comprises system information about the video capture device. 

            </param>


        </member>
        <member name="P:DevExpress.Data.Camera.CameraDeviceBase.DeviceMoniker">
            <summary>
                <para>Gets the string representation of the moniker for the current device. 

</para>
            </summary>
            <value>A String value that specifies the string representation of the moniker for the current device.
</value>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.Dispose">
            <summary>
                <para>Disposes of the current object and releases all the allocated resources. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current object. 

</para>
            </summary>
            <param name="obj">
		The object to compare with the current object. 

            </param>
            <returns><b>true</b> if the specified object is equal to the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.GetAvailableResolutions">
            <summary>
                <para>Returns the list of video resolutions available on the current device.
</para>
            </summary>
            <returns>The list of video resolutions available on the current device.
</returns>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.GetAvailiableResolutions">
            <summary>
                <para>Returns the list of video resolutions available on the current device.
</para>
            </summary>
            <returns>The list of video resolutions available on the current device.
</returns>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.GetHashCode">
            <summary>
                <para>Returns the hash code for the current CameraDeviceBase object.
</para>
            </summary>
            <returns>The hash code for the current CameraDeviceBase object.

</returns>


        </member>
        <member name="P:DevExpress.Data.Camera.CameraDeviceBase.IsBusy">
            <summary>
                <para>Gets whether the video capture device is already in use in another application.
</para>
            </summary>
            <value><b>true</b>, the video capture device is already in use in another application; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.CameraDeviceBase.IsRunning">
            <summary>
                <para>Gets whether the device is currently capturing video.
</para>
            </summary>
            <value><b>true</b>, if the device is currently capturing video; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.CameraDeviceBase.Name">
            <summary>
                <para>Gets the UI display name of the video capture device.
</para>
            </summary>
            <value>A String value that specifies the UI display name of the video capture device.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.CameraDeviceBase.Resolution">
            <summary>
                <para>Gets or sets the resolution of a video stream captured by the current device.

</para>
            </summary>
            <value>A <see cref="Size"/> structure that specifies the resolution of a video stream captured by the current device.

</value>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.SetClient(DevExpress.Data.Camera.Interfaces.ICameraDeviceClient)">
            <summary>
                <para>Sets the ICameraDeviceClient object that processes the video from the current capture device.
</para>
            </summary>
            <param name="client">
		An ICameraDeviceClient object that processes the video from the current capture device.

            </param>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.Start">
            <summary>
                <para>Starts capturing video from the current device.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.Stop">
            <summary>
                <para>Stops capturing video from the current device.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.TakeSnapshot">
            <summary>
                <para>Returns the video frame currently captured by the device.
</para>
            </summary>
            <returns>A <see cref="Bitmap"/> object that is the video frame currently captured by the device.

</returns>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceBase.WndProc(System.Windows.Forms.Message@)">
            <summary>
                <para>Processes Windows messages.
</para>
            </summary>
            <param name="m">
		The Windows Message to process.

            </param>


        </member>
        <member name="T:DevExpress.Export.ProgressMode">

            <summary>
                <para>Contains values that specify the visibility of the progress bar.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Export.ProgressMode.Always">
            <summary>
                <para>The progress bar is always visible when copying data.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Export.ProgressMode.Automatic">
            <summary>
                <para>The progress bar is visible only when copying large portions of RTF- or HTML-formatted data.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Export.ProgressMode.Never">
            <summary>
                <para>The progress bar is never shown.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Export.ClipboardMode">

            <summary>
                <para>Contains values that specify whether or not the <b>Clipboard Management</b> feature is enabled.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Export.ClipboardMode.Default">
            <summary>
                <para>Equal to the <see cref="F:DevExpress.Export.ClipboardMode.PlainText"/> value.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Export.ClipboardMode.Formatted">
            <summary>
                <para>Data is copied to the Clipboard together with its format settings.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Export.ClipboardMode.PlainText">
            <summary>
                <para>Copied data is stored in Clipboard as simple plain text.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Export.ClipboardOptions">

            <summary>
                <para>Provides base properties that manage copying data from Data Grid and Tree List controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Export.ClipboardOptions.#ctor(System.Boolean)">
            <summary>
                <para>Initializes a new instance of the ClipboardOptions class with the specified settings.
</para>
            </summary>
            <param name="allowFormattedMode">
		<b>true</b>, if the <see cref="P:DevExpress.Export.ClipboardOptions.ClipboardMode"/> property should be set to <b>Formatted</b>; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="P:DevExpress.Export.ClipboardOptions.AllowCsvFormat">
            <summary>
                <para>Gets or sets whether copying data in CSV format is enabled.
</para>
            </summary>
            <value>A value that specifies whether copying data in CSV format is enabled. The <b>Default</b> value is equivalent to <b>DefaultBoolean.True</b>.
</value>


        </member>
        <member name="P:DevExpress.Export.ClipboardOptions.AllowExcelFormat">
            <summary>
                <para>Gets or sets whether copying data in XLS (Biff8) format is enabled.

</para>
            </summary>
            <value>A value that specifies whether copying data in XLS (Biff8) format is enabled. The <b>Default</b> value is equivalent to <b>DefaultBoolean.True</b>.

</value>


        </member>
        <member name="P:DevExpress.Export.ClipboardOptions.AllowHtmlFormat">
            <summary>
                <para>Gets or sets whether copying data in HTML format is enabled.
</para>
            </summary>
            <value>A value that specifies whether copying data in HTML format is enabled. The <b>Default</b> value is equivalent to <b>DefaultBoolean.True</b>.
</value>


        </member>
        <member name="P:DevExpress.Export.ClipboardOptions.AllowRtfFormat">
            <summary>
                <para>Gets or sets whether copying data in RTF format is enabled. 

</para>
            </summary>
            <value>A value that specifies whether copying data in RTF format is enabled. The <b>Default</b> value is equivalent to <b>DefaultBoolean.True</b>.
</value>


        </member>
        <member name="P:DevExpress.Export.ClipboardOptions.AllowTxtFormat">
            <summary>
                <para>Gets or sets whether copying data in Text and UnicodeText formats is enabled. 
</para>
            </summary>
            <value>A value that specifies whether copying data in Text and UnicodeText formats is enabled. The <b>Default</b> value is equivalent to <b>DefaultBoolean.True</b>.
</value>


        </member>
        <member name="M:DevExpress.Export.ClipboardOptions.Assign(DevExpress.Export.ClipboardOptions)">
            <summary>
                <para>Copies settings from the target object to the current object.
</para>
            </summary>
            <param name="optionsCore">
		An object whose setting will be copied to the current object


            </param>


        </member>
        <member name="P:DevExpress.Export.ClipboardOptions.ClipboardMode">
            <summary>
                <para>Gets or sets whether data is copied to the Clipboard as plain text or along with its format settings (in RTF, HTML, XLS (Biff8), CSV, UnicodeText and Text formats).

</para>
            </summary>
            <value>A <b>ClipboardMode</b> enumerator value that specifies whether or not data copied from the target control should be stored together with its format settings.
</value>


        </member>
        <member name="P:DevExpress.Export.ClipboardOptions.CopyCollapsedData">
            <summary>
                <para>Gets or sets whether formatted data is copied from both expanded and collapsed rows/nodes. 

</para>
            </summary>
            <value>A value that specifies if an end-user can copy formatted data from both expanded and collapsed selected rows/nodes. The <b>Default</b> value is equivalent to <b>DefaultBoolean.True</b>.
</value>


        </member>
        <member name="P:DevExpress.Export.ClipboardOptions.CopyColumnHeaders">
            <summary>
                <para>Gets or sets whether or not column and band headers are to be copied along with data cells.


</para>
            </summary>
            <value>A value that specifies if the column and band headers are copied. The Default value is equal to <b>DefaultBoolean.True</b>. 

</value>


        </member>
        <member name="P:DevExpress.Export.ClipboardOptions.ShowProgress">
            <summary>
                <para>Gets or sets whether a progress bar that indicates the progress of a data copy operation is enabled.

</para>
            </summary>
            <value>A value that specifies if the progress bar is visible when copying very large amounts of RTF or HTML formatted data.

</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.JoinOperand">

            <summary>
                <para>An operator that joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> class with the specified settings.
</para>
            </summary>
            <param name="joinTypeName">
		A <see cref="T:System.String"/> value that specifies the class name of persistent objects that provide data for joining. The string can contain a namespace prefix to disambiguate the class name if more than one such class name exists. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.JoinTypeName"/> property.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.#ctor">
            <summary>
                <para>Initializes a new instance of the JoinOperand class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> class with the specified settings.
</para>
            </summary>
            <param name="joinTypeName">
		A <see cref="T:System.String"/> value that specifies the class name of persistent objects that provide data for joining. The string can contain a namespace prefix to disambiguate the class name if more than one such class name exists. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.JoinTypeName"/> property.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> property.

            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value that specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.AggregateType"/> property.

            </param>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the aggregated expression. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.AggregatedExpression"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="visitor">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="visitor">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.JoinOperand.AggregatedExpression">
            <summary>
                <para>Gets or sets the aggregated expression.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the aggregated expression.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.JoinOperand.AggregateType">
            <summary>
                <para>Gets or sets the type of the aggregate operator.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value that specifies the type of the aggregate operator.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Avg(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new JoinOperand  which returns the average of values calculated by the given aggregate expression. This expression is evaluated against elements that match the specified <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.
 

            </param>
            <returns>An JoinOperand object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Clone">
            <summary>
                <para>Creates a copy of the current JoinOperand instance.
</para>
            </summary>
            <returns>An JoinOperand object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.JoinOperand.Condition">
            <summary>
                <para>Gets or sets the filter criteria applied to the property values of the objects being joined.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic), if the filter criteria isn't needed.

</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Count(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new JoinOperand which returns the count of elements that match the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression. This parameter may be ignored in certain circumstances. 

            </param>
            <returns>An JoinOperand object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Count">
            <summary>
                <para>Creates a new JoinOperand which returns the count of elements that match the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.
</para>
            </summary>
            <returns>An JoinOperand object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An JoinOperand object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Exists">
            <summary>
                <para>Creates a new JoinOperand which determines whether or not the count of elements that match the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> is greater than zero.
</para>
            </summary>
            <returns>An JoinOperand object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Exists(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new JoinOperand which determines whether or not the count of elements that match the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> is greater than zero.
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression. This parameter may be ignored in certain circumstances. 

            </param>
            <returns>An JoinOperand object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current JoinOperand object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.JoinOperand.JoinTypeName">
            <summary>
                <para>Gets or sets the type name of persistent objects being joined with parent objects.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the type name of persistent objects that provide data for joining. The value is case-sensitive.

</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Max(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new JoinOperand which returns the maximum of the values calculated by the given aggregate expression. This expression is evaluated against elements that match the specified <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression. 

            </param>
            <returns>An JoinOperand object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Min(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new JoinOperand which returns the minimum of the values calculated by the given aggregate expression. This expression is evaluated against elements  that match the specified <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.
 

            </param>
            <returns>An JoinOperand object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.JoinOperand.Sum(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new JoinOperand which returns the sum of values calculated by the given aggregate expression. This expression is evaluated against elements that match the specified <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.

            </param>
            <returns>An JoinOperand object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.
</returns>


        </member>
        <member name="T:DevExpress.WebUtils.ViewStatePersisterCore">

            <summary>
                <para>Represents a base for classes providing different options.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.WebUtils.ViewStatePersisterCore.#ctor">
            <summary>
                <para>Initializes a new instance of the ViewStatePersisterCore class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.WebUtils.ViewStatePersisterCore.#ctor(DevExpress.WebUtils.IViewBagOwner)">
            <summary>
                <para> </para>
            </summary>
            <param name="viewBagOwner">
		 
            </param>


        </member>
        <member name="M:DevExpress.WebUtils.ViewStatePersisterCore.#ctor(DevExpress.WebUtils.IViewBagOwner,System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="viewBagOwner">
		 
            </param>
            <param name="objectPath">
		 
            </param>


        </member>
        <member name="T:DevExpress.Utils.IoC.ResolutionFailedException">

            <summary>
                <para>Occurs if there is an error during request of a dependency.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.IoC.ResolutionFailedException.#ctor">
            <summary>
                <para>Initializes a new instance of the ResolutionFailedException class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.IoC.ResolutionFailedException.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the ResolutionFailedException class with the specified error message.
</para>
            </summary>
            <param name="message">
		A <see cref="T:System.String"/> value, specifying the error message.

            </param>


        </member>
        <member name="M:DevExpress.Utils.IoC.ResolutionFailedException.#ctor(System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the ResolutionFailedException class with the specified message and exception details.
</para>
            </summary>
            <param name="message">
		A <see cref="T:System.String"/> value, specifying the message displayed when a database connection fails.

            </param>
            <param name="inner">
		A <see cref="T:System.Exception"/> object, specifying the error details.

            </param>


        </member>
        <member name="T:DevExpress.Utils.PointFloat">

            <summary>
                <para>For internal use only. Represents a point with floating <b>X</b> and <b>Y</b> values.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.PointFloat.#ctor(System.Single,System.Single)">
            <summary>
                <para>For internal use only. Initializes a new instance of the PointFloat class.
</para>
            </summary>
            <param name="x">
		A <see cref="T:System.Single"/> value.

            </param>
            <param name="y">
		A <see cref="T:System.Single"/> value.

            </param>


        </member>
        <member name="M:DevExpress.Utils.PointFloat.#ctor(System.Drawing.PointF)">
            <summary>
                <para>For internal use only. Initializes a new instance of the PointFloat class.
</para>
            </summary>
            <param name="pt">
		 

            </param>


        </member>
        <member name="F:DevExpress.Utils.PointFloat.Empty">
            <summary>
                <para>For internal use only. Represents an empty point.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Utils.PointFloat.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current PointFloat instance.
</para>
            </summary>
            <param name="obj">
		The object specifying a PointFloat instance to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current PointFloat instance.
</returns>


        </member>
        <member name="M:DevExpress.Utils.PointFloat.GetHashCode">
            <summary>
                <para>Serves as the default hash function.
</para>
            </summary>
            <returns>An integer value, specifying the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Utils.PointFloat.IsEmpty">
            <summary>
                <para>For internal use only. Checks whether the current point object is empty.
</para>
            </summary>
            <value><b>true</b> if the point is empty; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="M:DevExpress.Utils.PointFloat.Offset(System.Single,System.Single)">
            <summary>
                <para>Adds the specified values to <see cref="P:DevExpress.Utils.PointFloat.X"/> and <see cref="P:DevExpress.Utils.PointFloat.Y"/>.
</para>
            </summary>
            <param name="dx">
		A value to be added to <see cref="P:DevExpress.Utils.PointFloat.X"/>.

            </param>
            <param name="dy">
		A value to be added to <see cref="P:DevExpress.Utils.PointFloat.Y"/>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.PointFloat.ToString">
            <summary>
                <para>For internal use. Returns the textual representation of PointFloat.

</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value.
</returns>


        </member>
        <member name="P:DevExpress.Utils.PointFloat.X">
            <summary>
                <para>For internal use. Specifies the X-coordinate of the <see cref="T:DevExpress.Utils.PointFloat"/> object.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value. 
</value>


        </member>
        <member name="P:DevExpress.Utils.PointFloat.Y">
            <summary>
                <para>For internal use. Specifies the Y-coordinate of the <see cref="T:DevExpress.Utils.PointFloat"/> object.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value. 
</value>


        </member>
        <member name="T:DevExpress.Utils.IoC.InstanceRegistration">

            <summary>
                <para>Provides a container registration for dependencies that are registered by passing an instance (using the <see cref="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterInstance"/> method).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.IoC.InstanceRegistration.#ctor(System.Object)">
            <summary>
                <para>Initializes a new instance of the InstanceRegistration class with the specified instance.
</para>
            </summary>
            <param name="instance">
		A <see cref="T:System.Object"/> value.

            </param>


        </member>
        <member name="P:DevExpress.Utils.IoC.InstanceRegistration.Instance">
            <summary>
                <para>Gets the passed reference as a dependency.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> value.
</value>


        </member>
        <member name="T:DevExpress.Data.Camera.DeviceVideoSettings">

            <summary>
                <para>Provides access to the video properties on a video capture device.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Camera.DeviceVideoSettings.#ctor(DevExpress.Data.Camera.Interfaces.ICameraDeviceClient)">
            <summary>
                <para>Initializes a new instance of the DeviceVideoSettings class with the specified settings.
</para>
            </summary>
            <param name="client">
		An ICameraDeviceClient object that processes the video stream received from a video capture device.


            </param>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.BacklightCompensation">
            <summary>
                <para>Provides access to the video property that specifies the backlight compensation setting.
</para>
            </summary>
            <value>A <see cref="DeviceVideoProperty"/> object that is the video property specifying the backlight compensation setting.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Brightness">
            <summary>
                <para>Provides access to the video property that specifies the brightness, also called the black level.
</para>
            </summary>
            <value>A <see cref="DeviceVideoProperty"/> object that is the video property specifying the brightness, also called the black level.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.ColorEnable">
            <summary>
                <para>Provides access to the video property that specifies the color enable setting.
</para>
            </summary>
            <value>A <see cref="DeviceVideoProperty"/> object that is the video property specifying the color enable setting.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Contrast">
            <summary>
                <para>Provides access to the video property that specifies the contrast.
</para>
            </summary>
            <value>A <see cref="DeviceVideoProperty"/> object that is the video property specifying the contrast.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Gain">
            <summary>
                <para>Provides access to the video property that specifies the gain adjustment.
</para>
            </summary>
            <value>A <see cref="DeviceVideoProperty"/> object that is the video property specifying the gain adjustment.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Gamma">
            <summary>
                <para>Provides access to the video property that specifies the gamma.
</para>
            </summary>
            <value>A <see cref="DeviceVideoProperty"/> object that is the video property specifying the gamma.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Hue">
            <summary>
                <para>Provides access to the video property that specifies the hue.
</para>
            </summary>
            <value>A <see cref="DeviceVideoProperty"/> object that is the video property specifying the hue.
</value>


        </member>
        <member name="E:DevExpress.Data.Camera.DeviceVideoSettings.PropertyChanged">
            <summary>
                <para>Occurs when a property value changes.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Camera.DeviceVideoSettings.ResetToDefaults">
            <summary>
                <para>Resets the video properties to their defaults.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Saturation">
            <summary>
                <para>Provides access to the video property that specifies the saturation.
</para>
            </summary>
            <value>A <see cref="DeviceVideoProperty"/> object that is the video property specifying the saturation.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Sharpness">
            <summary>
                <para>Provides access to the video property that specifies the sharpness.
</para>
            </summary>
            <value>A <see cref="DeviceVideoProperty"/> object that is the video property specifying the sharpness.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.WhiteBalance">
            <summary>
                <para>Provides access to the video property that specifies the white balance, as a color temperature in degrees Kelvin.
</para>
            </summary>
            <value>A <see cref="DeviceVideoProperty"/> object that is the video property specifying the white balance, as a color temperature in degrees Kelvin.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.DataNodes.IRootDataNode">

            <summary>
                <para>For internal use. Exposes the printable content of a control to the DXPrinting engine.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.DataNodes.IRootDataNode.GetTotalDetailCount">
            <summary>
                <para>If implemented by a class, returns the total number of detail rows.

</para>
            </summary>
            <returns>An integer value specifying the total detail count.
</returns>


        </member>
        <member name="T:DevExpress.Utils.DXCollectionBase`1">

            <summary>
                <para>Represents the universal collection, which may be used as a base class for other collection classes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.#ctor">
            <summary>
                <para>Initializes a new instance of the DXCollectionBase&lt;T&gt; class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.#ctor(System.Int32)">
            <summary>
                <para>Initializes a new instance of the DXCollectionBase&lt;T&gt; class with the specified capacity.

</para>
            </summary>
            <param name="capacity">
		An integer value representing the number of elements that the collection can contain. This value is assigned to the <see cref="P:DevExpress.Utils.DXCollectionBase`1.Capacity"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Add(DevExpress.Utils.T)">
            <summary>
                <para>Adds the specified object to the collection.

</para>
            </summary>
            <param name="value">
		A &lt;T&gt; object to append to the collection.

            </param>
            <returns>An integer value indicating the position into which the new element was inserted.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.AddRange(System.Collections.ICollection)">
            <summary>
                <para>Adds a collection of elements to the end of the collection.
</para>
            </summary>
            <param name="collection">
		A <see cref="T:System.Collections.ICollection"/> object which represents the collection of elements to append to the collection.

            </param>


        </member>
        <member name="P:DevExpress.Utils.DXCollectionBase`1.Capacity">
            <summary>
                <para>Gets or sets the number of elements that the DXCollectionBase&lt;T&gt; can contain.
</para>
            </summary>
            <value>An integer value representing the number of elements that the collection can contain. 
</value>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Clear">
            <summary>
                <para>Removes all objects from the DXCollectionBase&lt;T&gt; instance.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Contains(DevExpress.Utils.T)">
            <summary>
                <para>Determines whether the collection contains the specified item.

</para>
            </summary>
            <param name="value">
		A &lt;T&gt; object to locate in the collection.

            </param>
            <returns><b>true</b> if the collection contains the specified item; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.CopyTo(DevExpress.Utils.T[],System.Int32)">
            <summary>
                <para>Copies all the elements from the DXCollectionBase&lt;T&gt; instance to a one-dimensional array, starting at the specified index of the target array.

</para>
            </summary>
            <param name="array">
		A one-dimensional array of &lt;T&gt; objects.


            </param>
            <param name="index">
		An integer value specifying the zero-based index in the target array at which copying begins.

            </param>


        </member>
        <member name="P:DevExpress.Utils.DXCollectionBase`1.Count">
            <summary>
                <para>Gets the number of elements contained in the DXCollectionBase&lt;T&gt; instance.
</para>
            </summary>
            <value>An integer value representing the number of elements contained in the collection. 
</value>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Find(System.Predicate`1)">
            <summary>
                <para>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire DXCollectionBase&lt;T&gt;.
</para>
            </summary>
            <param name="match">
		The <see cref="T:System.Predicate`1[[]]"/> delegate that defines the conditions of the element to search for.



            </param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <i>T</i>. 
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.ForEach(System.Action`1)">
            <summary>
                <para>Performs the specified action on each element of the DXCollectionBase&lt;T&gt;.
</para>
            </summary>
            <param name="action">
		The <see cref="T:System.Action"/>&lt;T&gt; delegate to perform on each element of the DXCollectionBase&lt;T&gt;.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.GetEnumerator">
            <summary>
                <para>Returns an enumerator that iterates through the DXCollectionBase&lt;T&gt; instance.
</para>
            </summary>
            <returns>A <see cref="T:System.Collections.IEnumerator"/> for the DXCollectionBase&lt;T&gt; instance.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.IndexOf(DevExpress.Utils.T)">
            <summary>
                <para>Returns the zero-based index of the specified element in the collection. 
</para>
            </summary>
            <param name="value">
		A &lt;T&gt; object to locate in the collection. 

            </param>
            <returns>An integer value representing the position of the specified element in the collection.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Insert(System.Int32,DevExpress.Utils.T)">
            <summary>
                <para>Inserts the specified element into the collection at the specified position.

</para>
            </summary>
            <param name="index">
		An integer value which represents the zero-based index at which the element should be inserted.

            </param>
            <param name="value">
		A &lt;T&gt; object to insert into the collection.


            </param>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Remove(DevExpress.Utils.T)">
            <summary>
                <para>Removes the specified element from the collection.
</para>
            </summary>
            <param name="value">
		A &lt;T&gt; object to be removed from the collection.

            </param>
            <returns><b>true</b> if the specified element has been successfully removed from the collection; <b>false</b> if the specified element has not been found within the collection.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.RemoveAt(System.Int32)">
            <summary>
                <para>Removes the element at the specified index of the DXCollectionBase&lt;T&gt; instance.
</para>
            </summary>
            <param name="index">
		A zero-based integer specifying the index of the object to remove. If it's negative or exceeds the number of elements, an exception is raised.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.Sort(System.Collections.Generic.IComparer`1)">
            <summary>
                <para>Sorts the elements in the entire DXCollectionBase&lt;T&gt; using the specified comparer.
</para>
            </summary>
            <param name="comparer">
		The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DXCollectionBase`1.ToArray">
            <summary>
                <para>Copies the DXCollectionBase&lt;T&gt; elements to a new array.
</para>
            </summary>
            <returns>An array containing the <b>DXCollectionBase&lt;T&gt;</b> elements.
</returns>


        </member>
        <member name="P:DevExpress.Utils.DXCollectionBase`1.UniquenessProviderType">
            <summary>
                <para>Gets or sets the type of an object, which provides uniqueness for the current DXCollectionBase&lt;T&gt;.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.DXCollectionUniquenessProviderType"/> instance.
</value>


        </member>
        <member name="T:DevExpress.Utils.DXCollection`1">

            <summary>
                <para>Represents the universal collection, which may be used as a base class for other collection classes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.DXCollection`1.#ctor">
            <summary>
                <para>Initializes a new instance of the DXCollection&lt;T&gt; class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.DXCollection`1.Item(System.Int32)">
            <summary>
                <para>Provides indexed access to individual items in the collection.

</para>
            </summary>
            <param name="index">
		A zero-based integer specifying the desired item's position within the collection. If it's negative or exceeds the last available index, an exception is raised. 

            </param>
            <value>A &lt;T&gt; object which represents the item at the specified position.
</value>


        </member>
        <member name="T:DevExpress.Utils.Localization.XtraLocalizer`1">

            <summary>
                <para>Represents the base class for all localizer classes.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.Localization.XtraLocalizer`1.Active">
            <summary>
                <para>Gets or sets a localizer object providing localization of the user interface at runtime.
</para>
            </summary>
            <value>A XtraLocalizer&lt;T&gt; descendant, which is used to localize the user interface at runtime.
</value>


        </member>
        <member name="E:DevExpress.Utils.Localization.XtraLocalizer`1.ActiveChanged">
            <summary>
                <para>Fires immediately after the <see cref="P:DevExpress.Utils.Localization.XtraLocalizer`1.Active"/> property value has been changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.CreateResXLocalizer">
            <summary>
                <para>Returns a localizer object, which provides resources based on the thread's language and regional settings (culture).
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object representing resources based on the thread's culture.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.CreateXmlDocument">
            <summary>
                <para>Creates an XML document, which contains resource strings provided by the current XtraLocalizer&lt;T&gt; object.
</para>
            </summary>
            <returns>A <see cref="T:System.Xml.XmlDocument"/> object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.GetActiveLocalizerProvider">
            <summary>
                <para>Returns an active localizer provider for this XtraLocalizer&lt;T&gt; object.
</para>
            </summary>
            <returns>An <b>ActiveLocalizerProvider&lt;T&gt;</b> object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.GetLocalizedString(DevExpress.Utils.Localization.T)">
            <summary>
                <para>Gets the string, localized by the current XtraLocalizer&lt;T&gt;, for the specified user interface element.
</para>
            </summary>
            <param name="id">
		A <b>T</b> enumeration value specifying the UI element whose caption (text) is to be localized.

            </param>
            <returns>A <see cref="T:System.String"/> representing the text to be displayed within the specified UI element.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Localization.XtraLocalizer`1.Language">
            <summary>
                <para>Returns the name of the language currently used by this localizer object.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the language of the user interface localization.
</value>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.RaiseActiveChanged">
            <summary>
                <para>Raises the <see cref="E:DevExpress.Utils.Localization.XtraLocalizer`1.ActiveChanged"/> event.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.SetActiveLocalizerProvider(DevExpress.Utils.Localization.Internal.ActiveLocalizerProvider`1)">
            <summary>
                <para>Sets an active localizer provider for this XtraLocalizer&lt;T&gt; object.
</para>
            </summary>
            <param name="value">
		An <b>ActiveLocalizerProvider&lt;T&gt;</b> object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.WriteToXml(System.String)">
            <summary>
                <para>Saves the current XtraLocalizer&lt;T&gt;'s resources to the specified XML file.
</para>
            </summary>
            <param name="fileName">
		A <see cref="T:System.String"/> specifying the file name (including the file path), to which all localization resources will be saved.

            </param>


        </member>
        <member name="T:DevExpress.Utils.NotificationCollection`1">

            <summary>
                <para>Represents a base class for collections that are able to send update notifications. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.NotificationCollection`1.#ctor">
            <summary>
                <para>Initializes a new instance of the NotificationCollection&lt;T&gt; class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.NotificationCollection`1.AddRange(System.Collections.ICollection)">
            <summary>
                <para>Adds a collection of objects to the end of the current collection.
</para>
            </summary>
            <param name="collection">
		An object exposing the <see cref="T:System.Collections.ICollection"/> interface, which represents the collection of objects to append.

            </param>


        </member>
        <member name="M:DevExpress.Utils.NotificationCollection`1.BeginUpdate">
            <summary>
                <para>Locks the NotificationCollection&lt;T&gt;, preventing change notifications (and visual updates) from being raised by the object until the <b>EndUpdate</b> or <b>CancelUpdate</b> method is called.


</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.NotificationCollection`1.CancelUpdate">
            <summary>
                <para>Unlocks the NotificationCollection&lt;T&gt; object after it has been locked by the <b>BeginUpdate</b> method, without causing an immediate visual update.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.NotificationCollection`1.CollectionChanged">
            <summary>
                <para>Occurs when the collection is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.NotificationCollection`1.CollectionChanging">
            <summary>
                <para>This event occurs when the collection is about to change. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.NotificationCollection`1.EndUpdate">
            <summary>
                <para>Unlocks the NotificationCollection&lt;T&gt; object after a call to the <b>BeginUpdate</b> method and causes an immediate visual update.


</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.NotificationCollection`1.IsUpdateLocked">
            <summary>
                <para>Gets whether the collection has been locked for updating.
</para>
            </summary>
            <value><b>true</b> if the collection is locked; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Services.MouseHandlerServiceWrapper">

            <summary>
                <para>Represents  a base class for custom services used to process mouse events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.#ctor(DevExpress.Services.IMouseHandlerService)">
            <summary>
                <para>Initializes a new instance of the MouseHandlerServiceWrapper class with the specified service.
</para>
            </summary>
            <param name="service">
		An object exposing the <see cref="T:DevExpress.Services.IMouseHandlerService"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method to handle a mouse down event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method to handle a mouse move event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method to handle a mouse up event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method to handle a mouse wheel event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="P:DevExpress.Services.MouseHandlerServiceWrapper.Service">
            <summary>
                <para>Provides access to the service interface of the wrapper.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Services.IKeyboardHandlerService"/> interface of the wrapper.
</value>


        </member>
        <member name="T:DevExpress.Services.IMouseHandlerService">

            <summary>
                <para>Defines a service responsible for handling mouse events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a mouse down event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a mouse move event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a mouse up event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a mouse wheel event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.

            </param>


        </member>
        <member name="T:DevExpress.Services.IKeyboardHandlerService">

            <summary>
                <para>Defines a service responsible for processing keyboard input.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.IKeyboardHandlerService.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a key down event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the pressed key and key modifiers.

            </param>


        </member>
        <member name="M:DevExpress.Services.IKeyboardHandlerService.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a key press event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> object specifying the character that is composed when the user presses a key.

            </param>


        </member>
        <member name="M:DevExpress.Services.IKeyboardHandlerService.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
                <para>Override this method in a descending class to handle a key up event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the released key and key modifiers.

            </param>


        </member>
        <member name="T:DevExpress.Services.KeyboardHandlerServiceWrapper">

            <summary>
                <para>Represents  a base class for custom services used to process keyboard input.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.#ctor(DevExpress.Services.IKeyboardHandlerService)">
            <summary>
                <para>Initializes a new instance of the KeyboardHandlerServiceWrapper class with the specified service.
</para>
            </summary>
            <param name="service">
		An object exposing the <see cref="T:DevExpress.Services.IKeyboardHandlerService"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
                <para>Override this method to handle a key down event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the pressed key and key modifiers.

            </param>


        </member>
        <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
                <para>Override this method to handle a key press event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> object specifying the character that is composed when the user presses a key.

            </param>


        </member>
        <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
                <para>Override this method to handle a key up event.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the released key and key modifiers.

            </param>


        </member>
        <member name="P:DevExpress.Services.KeyboardHandlerServiceWrapper.Service">
            <summary>
                <para>Provides access to the service interface of the wrapper.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Services.IKeyboardHandlerService"/> interface of the wrapper.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.DataNodes.GroupUnion">

            <summary>
                <para>Specifies how groups of records should be split across pages, if required.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.DataNodes.GroupUnion.None">
            <summary>
                <para>A group is printed so that it is split across several pages, if there isn't enough space on a page to print the entire group.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.DataNodes.GroupUnion.WholePage">
            <summary>
                <para>A group is printed entirely on a single page (including its group header, rows and footer). This means that if there isn't enough space on a page to print the entire group, this group is printed on the following page.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.DataNodes.GroupUnion.WithFirstDetail">
            <summary>
                <para>A group is split across several pages "as is". However, if there isn't enough space on a page to print a Group Header together with the following group row, they both are moved to the next page, so that a Group Header is never printed on a page alone (with no group rows below it). 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Printing.ServiceKnownTypeProvider">

            <summary>
                <para>Registers known types on a WCF-service.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.GetKnownTypes(System.Reflection.ICustomAttributeProvider)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="provider">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.GetKnownTypesMethodName">
            <summary>
                <para>"<b>GetKnownTypes</b>"
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.IsRegistered(System.Type)">
            <summary>
                <para>Specifies whether or not a custom parameter type is registered.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> enumeration value. 

            </param>
            <returns><b>true</b> if the parameter type is registered; otherwise <b>false</b>. 
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.Register(System.Type[])">
            <summary>
                <para>Registers an array of custom parameter types.
</para>
            </summary>
            <param name="types">
		An array of <see cref="T:System.Type"/> enumeration values. 

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.Register(System.Type)">
            <summary>
                <para>Registers a custom parameter type.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> enumeration value. 

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.Register(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Registers a collection of custom parameter types.
</para>
            </summary>
            <param name="types">
		A collection of <see cref="T:System.Type"/> objects.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.Register``1">
            <summary>
                <para>Registers a custom parameter type.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView">

            <summary>
                <para>If implemented, provides the View functionality to an Expression Editor.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView.ExpressionString">
            <summary>
                <para>Specifies the expression (in plain text).
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorEvaluatableWithCaseSensitivity">

            <summary>
                <para>Implemented by custom functions that can be evaluated with case-sensitivity.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorEvaluatableWithCaseSensitivity.Evaluate(System.Boolean,System.Object[])">
            <summary>
                <para>When implemented by a custom function, evaluates it on the client.
</para>
            </summary>
            <param name="caseSensetive">
		<b>true</b>, if the custom function is case-sensitive; otherwise, <b>false</b>.

            </param>
            <param name="operands">
		An array of objects specifying function operands (parameters).

            </param>
            <returns>An <see cref="Object"/> specifying a custom function's return value, calculated based on the <i>operands</i>.
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorConvertibleToExpression">

            <summary>
                <para>Implemented by custom functions that can be converted to a <a href="https://msdn.microsoft.com/en-us/library/bb397926.aspx">LINQ</a> expression.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorConvertibleToExpression.Convert(DevExpress.Data.Linq.ICriteriaToExpressionConverter,System.Linq.Expressions.Expression[])">
            <summary>
                <para>When implemented by a custom function, converts it to a Linq-expression.
</para>
            </summary>
            <param name="converter">
		An <b>DevExpress.Data.Linq.Helpers.ICriteriaToExpressionConverter</b> object that converts a criteria to an expression.

            </param>
            <param name="operands">
		An array of <a href="https://msdn.microsoft.com/en-us/library/system.linq.expressions.expression.aspx">Expression</a> objects specifying function operands (parameters).

            </param>
            <returns>An <a href="https://msdn.microsoft.com/en-us/library/system.linq.expressions.expression.aspx">Expression</a> object that specifies a <a href="https://msdn.microsoft.com/en-us/library/bb397926.aspx">LINQ</a> expression.
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorCompileableWithCaseSensitivity">

            <summary>
                <para>Implemented by case-sensitive custom functions that can be compiled on the client.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorCompileableWithCaseSensitivity.Create(System.Boolean,System.Linq.Expressions.Expression[])">
            <summary>
                <para>When implemented by a custom function, creates a <a href="https://msdn.microsoft.com/en-us/library/bb397926.aspx">LINQ</a> expression.
</para>
            </summary>
            <param name="caseSensetive">
		<b>true</b>, if the custom function is case-sensitive; otherwise, <b>false</b>.

            </param>
            <param name="operands">
		An array of <a href="https://msdn.microsoft.com/en-us/library/system.linq.expressions.expression.aspx">Expression</a> objects specifying function operands (parameters).

            </param>
            <returns>An <a href="https://msdn.microsoft.com/en-us/library/system.linq.expressions.expression.aspx">Expression</a> object that specifies the LINQ expression. 
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorCompileable">

            <summary>
                <para>Implemented by custom functions that can be compiled on the client.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorCompileable.Create(System.Linq.Expressions.Expression[])">
            <summary>
                <para>When implemented by a custom function, creates a <a href="https://msdn.microsoft.com/en-us/library/bb397926.aspx">LINQ</a> expression.
</para>
            </summary>
            <param name="operands">
		An array of <a href="https://msdn.microsoft.com/en-us/library/system.linq.expressions.expression.aspx">Expression</a> objects specifying function operands (parameters).

            </param>
            <returns>An <a href="https://msdn.microsoft.com/en-us/library/system.linq.expressions.expression.aspx">Expression</a> object that specifies the LINQ expression. 
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IChooseReportLayoutPageView"/> interface instead.

</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView.AdjustFieldWidth">
            <summary>
                <para>If implemented, specifies the state of the <b>Adjust the field width</b> check box.
</para>
            </summary>
            <value><b>true</b>, to activate the check box; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView.IsGroupedReport">
            <summary>
                <para>If implemented, specifies whether or not the report contains groups.
</para>
            </summary>
            <value><b>true</b>, if the report is grouped; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView.Portrait">
            <summary>
                <para>If implemented, specifies the state of the <b>Portrait</b> and <b>Landscape</b> radio buttons.
</para>
            </summary>
            <value><b>true</b>, if the <b>Portrait</b> radio button is active; <b>false</b> if the <b>Landscape</b> radio button is active.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView.ReportLayout">
            <summary>
                <para>If implemented, specifies the selected report layout.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportLayout"/> enumeration value.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBNameTypePair">

            <summary>
                <para>Stores a pair of values, specifying a <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> along with its corresponding name.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBNameTypePair.#ctor">
            <summary>
                <para>Initializes a new instance of the DBNameTypePair class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBNameTypePair.#ctor(System.String,DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para>Initializes a new instance of the DBNameTypePair class with the specified settings.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value.


            </param>
            <param name="type">
		A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration value.

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBNameTypePair.Name">
            <summary>
                <para>A <see cref="T:System.String"/> value, specifying the database column name.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBNameTypePair.ToString">
            <summary>
                <para>Returns a value, specifying the name and type of the data table column (separated by a white space).
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value. Example: "<b>OrderDate DateTime</b>".

</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBNameTypePair.Type">
            <summary>
                <para>A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> value, specifying the database column type.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection">

            <summary>
                <para>Lists the directions available for a stored procedure's parameter.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection.In">
            <summary>
                <para>Indicates an input parameter of a stored procedure.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection.InOut">
            <summary>
                <para>Indicates a bidirectional parameter of a stored procedure.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection.Out">
            <summary>
                <para>Indicates an output parameter of a stored procedure.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBColumnType">

            <summary>
                <para>Lists the supported database column types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Boolean">
            <summary>
                <para>Indicates the <see cref="T:System.Boolean"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Byte">
            <summary>
                <para>Indicates the <see cref="T:System.Byte"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.ByteArray">
            <summary>
                <para>Indicates the <see cref="T:System.Byte"/> array data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Char">
            <summary>
                <para>Indicates the <see cref="T:System.Char"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.DateTime">
            <summary>
                <para>Indicates the <see cref="T:System.DateTime"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Decimal">
            <summary>
                <para>Indicates the <see cref="T:System.Decimal"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Double">
            <summary>
                <para>Indicates the <see cref="T:System.Double"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Guid">
            <summary>
                <para>Indicates the <see cref="T:System.Guid"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Int16">
            <summary>
                <para>Indicates the <see cref="T:System.Int16"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Int32">
            <summary>
                <para>Indicates the <see cref="T:System.Int32"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Int64">
            <summary>
                <para>Indicates the <see cref="T:System.Int64"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.SByte">
            <summary>
                <para>Indicates the <see cref="T:System.SByte"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Single">
            <summary>
                <para>Indicates the <see cref="T:System.Single"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.String">
            <summary>
                <para>Indicates the <see cref="T:System.String"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.TimeSpan">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.UInt16">
            <summary>
                <para>Indicates the <see cref="T:System.UInt16"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.UInt32">
            <summary>
                <para>Indicates the <see cref="T:System.UInt32"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.UInt64">
            <summary>
                <para>Indicates the <see cref="T:System.UInt64"/> data type.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumnType.Unknown">
            <summary>
                <para>Indicates a non-standard data type.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Entity.ProjectModel.IResourceOptions">

            <summary>
                <para>When implemented by a class, provides options for project resources.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Entity.ProjectModel.IProjectTypes">

            <summary>
                <para>When implemented by a class, provides information about known project types.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Entity.ProjectModel.IProjectTypes.Assemblies">
            <summary>
                <para>Obtains a collection of assemblies available for the current project.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo"/> objects.
</value>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.IProjectTypes.GetExistingOrCreateNew(System.Type)">
            <summary>
                <para>Obtains the existing <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> object that provides information about a known project type, or creates a new one if it was not found.

</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> object.

            </param>
            <returns>An <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> object containing information about a project type.
</returns>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.IProjectTypes.GetTypes(System.Func`2)">
            <summary>
                <para>Obtains project types that satisfy the specified filtering condition.
</para>
            </summary>
            <param name="filter">
		A <b>System.Func</b> delegate specifying a filtering condition.

            </param>
            <returns>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.IProjectTypes.GetTypesPerAssembly(System.Func`2)">
            <summary>
                <para>Obtains assemblies containing project types that satisfy the specified filtering condition.
</para>
            </summary>
            <param name="filter">
		A <b>System.Func</b> delegate specifying a filtering condition.

            </param>
            <returns>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo"/> objects.
</returns>


        </member>
        <member name="P:DevExpress.Entity.ProjectModel.IProjectTypes.ProjectAssembly">
            <summary>
                <para>Obtains the assembly of the current project.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo"/> containing information about the assembly of the current project.

</value>


        </member>
        <member name="P:DevExpress.Entity.ProjectModel.IProjectTypes.ProjectAssemblyName">
            <summary>
                <para>Obtains the name of the current assembly

</para>
            </summary>
            <value>A <see cref="T:System.String"/> string containing the assembly name.
</value>


        </member>
        <member name="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo">

            <summary>
                <para>When implemented by a class, provides information about its containing assembly.

</para>
            </summary>

        </member>
        <member name="P:DevExpress.Entity.ProjectModel.IDXAssemblyInfo.AssemblyFullName">
            <summary>
                <para>Indicates the full name of the current assembly.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value, specifying the assembly name.
</value>


        </member>
        <member name="P:DevExpress.Entity.ProjectModel.IDXAssemblyInfo.IsProjectAssembly">
            <summary>
                <para>Indicates whether the current assembly is an assembly of the current project.
</para>
            </summary>
            <value><b>true</b>, if the current assembly is an assembly of the current project; otherwise, <b>false</b>
</value>


        </member>
        <member name="P:DevExpress.Entity.ProjectModel.IDXAssemblyInfo.IsSolutionAssembly">
            <summary>
                <para>Indicates whether the current assembly is an assembly of the current solution.
</para>
            </summary>
            <value><b>true</b>, if the current assembly is an assembly of the current solution; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Entity.ProjectModel.IDXAssemblyInfo.ResourceOptions">
            <summary>
                <para>Obtains resource options for the current assembly.
</para>
            </summary>
            <value>An <see cref="IResourceOptions"/> object.
</value>


        </member>
        <member name="P:DevExpress.Entity.ProjectModel.IDXAssemblyInfo.TypesInfo">
            <summary>
                <para>Obtains a collection of types available in the current assembly.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> objects.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBStoredProcedureArgument">

            <summary>
                <para>Provides information about a stored procedure's parameter.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBStoredProcedureArgument.#ctor">
            <summary>
                <para>Initializes a new instance of the DBStoredProcedureArgument class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBStoredProcedureArgument.#ctor(System.String,DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para>Initializes a new instance of the DBStoredProcedureArgument class with the specified settings.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration value.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBStoredProcedureArgument.#ctor(System.String,DevExpress.Xpo.DB.DBColumnType,DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection)">
            <summary>
                <para>Initializes a new instance of the DBStoredProcedureArgument class with the specified settings.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBNameTypePair.Name"/> property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration value. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBNameTypePair.Type"/> property.

            </param>
            <param name="direction">
		A <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection"/> enumeration value. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBStoredProcedureArgument.Direction"/> property.

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBStoredProcedureArgument.Direction">
            <summary>
                <para>A <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection"/> value corresponding to an appropriate <see cref="T:DevExpress.Xpo.DB.DBNameTypePair"/> object.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBStoredProcedureArgument.ToString">
            <summary>
                <para>Returns a value, specifying the stored procedure's parameter direction (within brackets and in uppercase letters) along with the name and type of the parameter (separated by a white space).
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value. Example: "<b>[INOUT] OrderDate DateTime</b>".
</returns>


        </member>
        <member name="T:DevExpress.Utils.Commands.ICommandUIState">

            <summary>
                <para>Defines a command state.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.Checked">
            <summary>
                <para>Gets or sets the checked state of the command.
</para>
            </summary>
            <value><b>true</b> if the command state is checked; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.EditValue">
            <summary>
                <para>Gets or sets the value used by a command.
</para>
            </summary>
            <value>An object representing the value used by a command.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.Enabled">
            <summary>
                <para>Gets or sets whether the command is enabled.
</para>
            </summary>
            <value><b>true</b> to enable the command; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.ICommandUIState.Visible">
            <summary>
                <para>Gets or sets whether the UI element to which the command is attached is visible.
</para>
            </summary>
            <value><b>true</b> to display the UI element; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.Commands.CommandSourceType">

            <summary>
                <para>Lists the command sources.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Commands.CommandSourceType.Keyboard">
            <summary>
                <para>The command is issued from the keyboard.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Commands.CommandSourceType.Menu">
            <summary>
                <para>The command is issued from the menu.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Commands.CommandSourceType.Mouse">
            <summary>
                <para>The command is issued using a mouse.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Commands.CommandSourceType.Unknown">
            <summary>
                <para>The type of the command source is not known.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Commands.Command">

            <summary>
                <para>Represents a command.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Commands.Command.CanExecute">
            <summary>
                <para>Determines whether the command can execute in its current state.
</para>
            </summary>
            <returns><b>true</b> if the command can execute; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.CommandSourceType">
            <summary>
                <para>Gets or sets the type of the object which invokes the command.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Commands.CommandSourceType"/> enumeration value, specifying the object type.
</value>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.CreateDefaultCommandUIState">
            <summary>
                <para>Creates an object defining the command state for the current command. 
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface that defines the command state.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.Description">
            <summary>
                <para>Gets the text description of a command.
</para>
            </summary>
            <value>A string containing the command's description.
</value>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.Execute">
            <summary>
                <para>Executes the command on the current command target.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.ForceExecute(DevExpress.Utils.Commands.ICommandUIState)">
            <summary>
                <para>Performs a command action regardless of a command state.
</para>
            </summary>
            <param name="state">
		An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface defining the command state.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.HideDisabled">
            <summary>
                <para>Gets or sets whether the object to which the command is attached is hidden, if the command is disabled.
</para>
            </summary>
            <value><b>true</b> to hide the object with a disabled command; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.Image">
            <summary>
                <para>Gets an image associated with the command.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object representing the associated image.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.KeyTip">
            <summary>
                <para>Gets a key tip associated with the command.
</para>
            </summary>
            <value>A string value that is the command key tip. 
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.LargeImage">
            <summary>
                <para>Gets a larger image associated with the command.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object representing the associated image.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.MenuCaption">
            <summary>
                <para>Gest the menu caption associated with the current command.
</para>
            </summary>
            <value>A string representing the text of the menu item.
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.ShowsModalDialog">
            <summary>
                <para>Indicates whether a command invokes a modal dialog when executing.
 
</para>
            </summary>
            <value><b>true</b> if a modal dialog is displayed while executing the command; otherwise, <b>false</b>. By default it is <b>false</b>.
 
</value>


        </member>
        <member name="P:DevExpress.Utils.Commands.Command.SvgImage">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.Utils.Commands.Command.UpdateUIState(DevExpress.Utils.Commands.ICommandUIState)">
            <summary>
                <para>Updates the command state.
</para>
            </summary>
            <param name="state">
		An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface defining the state of a command.

            </param>


        </member>
        <member name="T:DevExpress.Data.UnboundSourceListChangedEventArgs">

            <summary>
                <para>Arguments passed to the <see cref="E:DevExpress.Data.UnboundSource.UnboundSourceListChanging"/> and <see cref="E:DevExpress.Data.UnboundSource.UnboundSourceListChanged"/> events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.UnboundSourceListChangedEventArgs.#ctor(System.Boolean,System.ComponentModel.ListChangedType,System.Int32,System.Int32)">
            <summary>
                <para>Initializes a new instance of the UnboundSourceListChangedEventArgs class.
</para>
            </summary>
            <param name="isTriggeredByComponentApi">
		<b>true</b>, if the current event is triggered by the <see cref="T:DevExpress.Data.UnboundSource"/> component API; otherwise, <b>false</b>.


            </param>
            <param name="listChangedType">
		Gets the <a href="https://msdn.microsoft.com/en-us/library/system.componentmodel.listchangedtype.aspx">ListChangedType</a> enumeration value indicating the type of change.


            </param>
            <param name="newIndex">
		Gets the integer index of the <see cref="T:DevExpress.Data.UnboundSource"/> row affected by the change.

            </param>
            <param name="oldIndex">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.UnboundSourceListChangedEventArgs.#ctor(System.Boolean,System.ComponentModel.ListChangedType,System.Int32,System.ComponentModel.PropertyDescriptor)">
            <summary>
                <para>Initializes a new instance of the UnboundSourceListChangedEventArgs class.
</para>
            </summary>
            <param name="isTriggeredByComponentApi">
		<b>true</b>, if the current event is triggered by the <see cref="T:DevExpress.Data.UnboundSource"/> component API; otherwise, <b>false</b>.


            </param>
            <param name="listChangedType">
		Gets the <a href="https://msdn.microsoft.com/en-us/library/system.componentmodel.listchangedtype.aspx">ListChangedType</a> enumeration value indicating the type of change.


            </param>
            <param name="index">
		Gets the integer index of the <see cref="T:DevExpress.Data.UnboundSource"/> list row affected by the change.

            </param>
            <param name="propertyDescriptor">
		Gets the <a href="https://msdn.microsoft.com/en-us/library/system.componentmodel.propertydescriptor.aspx">PropertyDescriptor</a> of the <see cref="T:DevExpress.Data.UnboundSource"/> list property affected by the change.

            </param>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceListChangedEventArgs.IsTriggeredByComponentApi">
            <summary>
                <para>Gets a value indicating if the current event is triggered by the <see cref="T:DevExpress.Data.UnboundSource"/> component API.
</para>
            </summary>
            <value><b>true</b>, if the current event is triggered by the component API; otherwise, <b>false</b>.

</value>


        </member>
        <member name="T:DevExpress.XtraEditors.FilterDateType">

            <summary>
                <para>Enumerates filters that identify certain dates and date intervals.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.Beyond">
            <summary>
                <para>Dates that belong to the month in three months time and beyond.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.BeyondThisYear">
            <summary>
                <para>Dates that follow the current year.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.Earlier">
            <summary>
                <para>Dates that belong to the month seven months ago and earlier.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.EarlierThisMonth">
            <summary>
                <para>Dates of the current month that are prior to the previous week.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.EarlierThisWeek">
            <summary>
                <para>Dates of the current week that are prior to yesterday.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.EarlierThisYear">
            <summary>
                <para>Dates of the current year that are prior to the current month.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.Empty">
            <summary>
                <para>Does not specify any condition.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.LastWeek">
            <summary>
                <para>Dates of the previous week.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.LaterThisMonth">
            <summary>
                <para>Dates of the current month that follow the next week.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.LaterThisWeek">
            <summary>
                <para>Dates of the current week starting from the day after tomorrow.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.LaterThisYear">
            <summary>
                <para>Dates of the current year starting from the following month.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAfter1">
            <summary>
                <para>Dates that belong to the following month.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAfter2">
            <summary>
                <para>Dates that belong to the month in two months time.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo1">
            <summary>
                <para>Dates that belong to the previous month.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo2">
            <summary>
                <para>Dates that belong to the month two months ago.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo3">
            <summary>
                <para>Dates that belong to the month three months ago.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo4">
            <summary>
                <para>Dates that belong to the month four months ago.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo5">
            <summary>
                <para>Dates that belong to the month five months ago.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo6">
            <summary>
                <para>Dates that belong to the month six months ago.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.NextWeek">
            <summary>
                <para>Dates that belong to the following week.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.None">
            <summary>
                <para>Does not specify any condition.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.PriorThisYear">
            <summary>
                <para>Dates that are prior to the current year.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.SpecificDate">
            <summary>
                <para>Not supported when setting the <see cref="P:DevExpress.XtraEditors.FormatConditionRuleDateOccuring.DateType"/> property.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.ThisMonth">
            <summary>
                <para>Dates that belong to the current month.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.ThisWeek">
            <summary>
                <para>Dates that belong to the current week.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.Today">
            <summary>
                <para>Today.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.Tomorrow">
            <summary>
                <para>Tomorrow.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.User">
            <summary>
                <para>Not supported when setting the <see cref="P:DevExpress.XtraEditors.FormatConditionRuleDateOccuring.DateType"/> property.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.FilterDateType.Yesterday">
            <summary>
                <para>Yesterday.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.ICriteriaOperatorValidatorProvider">

            <summary>
                <para>If implemented, enables you to access the criteria validator assigned to an Expression Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ICriteriaOperatorValidatorProvider.GetCriteriaOperatorValidator(DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext)">
            <summary>
                <para>Provides access to an object enabling you to manage the collection of errors found during criteria validation in the Expression Editor. 

</para>
            </summary>
            <param name="context">
		An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> object.

            </param>
            <returns>An <see cref="T:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator"/> object.
</returns>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.IAutoCompleteItemsProvider">

            <summary>
                <para>If implemented, enables you to obtain the list of suggestions corresponding to a specific part of an expression.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.IAutoCompleteItemsProvider.GetAutoCompleteItems(System.String,System.Int32)">
            <summary>
                <para>Returns the collection of suggestions corresponding to a specific caret position within an expression.
</para>
            </summary>
            <param name="expression">
		A <see cref="T:System.String"/> value, specifying the expression.

            </param>
            <param name="caretPosition">
		An integer value, specifying the symbol in the expression where the caret position is.


            </param>
            <returns>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem"/> objects.
</returns>


        </member>
        <member name="T:DevExpress.Data.Entity.IConnectionStringInfo">

            <summary>
                <para>If implemented, provides information about a connection string.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.Entity.IConnectionStringInfo.Location">
            <summary>
                <para>Indicates from where the Report Wizard obtains its data connection settings.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Entity.DataConnectionLocation"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.Data.Entity.IConnectionStringInfo.Name">
            <summary>
                <para>If implemented, specifies the name of a connection string.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value specifying the connection string name.
</value>


        </member>
        <member name="P:DevExpress.Data.Entity.IConnectionStringInfo.ProviderName">
            <summary>
                <para>If implemented, gets the name of the data provider.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value specifying the data provider name.

</value>


        </member>
        <member name="P:DevExpress.Data.Entity.IConnectionStringInfo.RunTimeConnectionString">
            <summary>
                <para>If implemented, obtains the connection string used to establish the data connection at run time.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> containing a connection string.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.Localization.PreviewResLocalizer">

            <summary>
                <para>A default localizer to translate the XtraPrinting's resources.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewResLocalizer.#ctor">
            <summary>
                <para>Initializes a new instance of the PreviewResLocalizer class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Camera.CameraDeviceInfo">

            <summary>
                <para>Contains system information used to identify a video capture device.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceInfo.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the CameraDeviceInfo class with the specified settings.
</para>
            </summary>
            <param name="monikerString">
		A String value that specifies the string representation of the moniker for the video capture device. This value is assigned to the <see cref="F:DevExpress.Data.Camera.CameraDeviceInfo.MonikerString"/> field.

            </param>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceInfo.#ctor(System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the CameraDeviceInfo class with the specified settings.
</para>
            </summary>
            <param name="monikerString">
		A String value that specifies the string representation of the moniker for the video capture device. This value is assigned to the <see cref="F:DevExpress.Data.Camera.CameraDeviceInfo.MonikerString"/> field.

            </param>
            <param name="name">
		A String value that specifies the UI display name of the video capture device. This value is assigned to the <see cref="F:DevExpress.Data.Camera.CameraDeviceInfo.Name"/> field.

            </param>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceInfo.CompareTo(System.Object)">
            <summary>
                <para>Compares the current instance with a specified object and indicates whether the current instance precedes, follows, or appears at the same position in the sort order as the specified object.

</para>
            </summary>
            <param name="value">
		An object to compare with the current instance.

            </param>
            <returns>An integer value that specifies whether the current instance precedes, follows, or appears at the same position in the sort order as the specified object.

</returns>


        </member>
        <member name="F:DevExpress.Data.Camera.CameraDeviceInfo.MonikerString">
            <summary>
                <para>The string representation of the moniker for the video capture device.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Data.Camera.CameraDeviceInfo.Name">
            <summary>
                <para>The UI display name of the video capture device.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Data.Camera.CameraDeviceInfo.ToString">
            <summary>
                <para>Returns the UI display name of the video capture device.
</para>
            </summary>
            <returns>A String value that is the UI display name of the video capture device.
</returns>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo">

            <summary>
                <para>Provides information about a parameter listed in the Expression Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the ParameterInfo class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the ParameterInfo class with the specified category.
</para>
            </summary>
            <param name="category">
		A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo.#ctor(DevExpress.Data.IParameter)">
            <summary>
                <para>Initializes a new instance of the ParameterInfo class with the specified parameter.
</para>
            </summary>
            <param name="parameter">
		An object implementing the <see cref="T:DevExpress.Data.IParameter"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo.#ctor(DevExpress.Data.Controls.ExpressionEditor.ParameterInfo)">
            <summary>
                <para>Initializes a new instance of the ParameterInfo class with the specified prototype.

</para>
            </summary>
            <param name="other">
		A ParameterInfo object, specifying a prototype for a new ParameterInfo instance.

            </param>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo.Type">
            <summary>
                <para>Specifies the parameter's type declaration.
</para>
            </summary>
            <value>A <see cref="T:System.Type"/> object.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperator">

            <summary>
                <para>Declares the base functionality for custom functions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperator.Evaluate(System.Object[])">
            <summary>
                <para>When implemented by a custom function, evaluates it on the client.
</para>
            </summary>
            <param name="operands">
		An array of objects specifying function operands (parameters).

            </param>
            <returns>An <see cref="Object"/> specifying a custom function's return value, calculated based on the <i>operands</i>.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperator.Name">
            <summary>
                <para>When implemented by a custom function, specifies its name.
</para>
            </summary>
            <value>A <see cref="String"/> used to identify a custom function.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperator.ResultType(System.Type[])">
            <summary>
                <para>When implemented by a custom function, determines its return value type based on the type of function operands (parameters).
</para>
            </summary>
            <param name="operands">
		An array of function operator (parameter) types.

            </param>
            <returns>A <see cref="Type"/> object specifying the return value type of a custom function.
</returns>


        </member>
        <member name="T:DevExpress.Data.Camera.DeviceVideoProperty">

            <summary>
                <para>Describes a video property on a video capture device.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.Default">
            <summary>
                <para>Gets the default value of the video property.
</para>
            </summary>
            <value>An <see cref="Int32"/> value that specifies the default value of the video property.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.Max">
            <summary>
                <para>Gets the maximum value of the video property. 
</para>
            </summary>
            <value>An <see cref="Int32"/> value that specifies the maximum value of the video property. 
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.Min">
            <summary>
                <para>Gets  the minimum value of the video property.
</para>
            </summary>
            <value>An <see cref="Int32"/> value that specifies the minimum value of the video property.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.Name">
            <summary>
                <para>Gets the name of the video property.
</para>
            </summary>
            <value>A <see cref="String"/> value that specifies the name of the video property.
</value>


        </member>
        <member name="E:DevExpress.Data.Camera.DeviceVideoProperty.PropertyChanged">
            <summary>
                <para>Occurs when a property value changes.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Camera.DeviceVideoProperty.ResetToDefault">
            <summary>
                <para>Resets the video property value to its default.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.SteppingDelta">
            <summary>
                <para>Gets the step size for the video property. The step size is the smallest increment by which the property can change.
</para>
            </summary>
            <value>An <see cref="Int32"/> value that specifies the step size for the video property.
</value>


        </member>
        <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.Value">
            <summary>
                <para>Gets or sets the current setting of the video property.
</para>
            </summary>
            <value>An <see cref="Int32"/> value that specifies the current setting of the video property.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.ImageAlignment">

            <summary>
                <para>Specifies the alignment of a displayed image in relation to the container control's boundaries.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.ImageAlignment.BottomCenter">
            <summary>
                <para>An image is aligned to the bottom side of a control.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageAlignment.BottomLeft">
            <summary>
                <para>An image is aligned to the bottom left corner of a control.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageAlignment.BottomRight">
            <summary>
                <para>An image is aligned to the bottom right corner of a control.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageAlignment.Default">
            <summary>
                <para>The default image alignment is used.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageAlignment.MiddleCenter">
            <summary>
                <para>An image is aligned to the middle of a control
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageAlignment.MiddleLeft">
            <summary>
                <para>An image is aligned to the left side of a control. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageAlignment.MiddleRight">
            <summary>
                <para>An image is aligned to the right side of a control. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageAlignment.TopCenter">
            <summary>
                <para>An image is aligned to the top side of a control. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageAlignment.TopLeft">
            <summary>
                <para>An image is aligned to the top left corner of a control. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageAlignment.TopRight">
            <summary>
                <para>An image is aligned to the top right corner of a control. 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.ConstantValue">

            <summary>
                <para>A constant value operand in criteria expressions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ConstantValue.#ctor">
            <summary>
                <para>Initializes a new instance of the ConstantValue class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.ConstantValue.#ctor(System.Object)">
            <summary>
                <para>Initializes a new instance of the ConstantValue class with the specified constant value.
</para>
            </summary>
            <param name="value">
		The constant value for the operand. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.OperandValue.Value"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.ConstantValue.Clone">
            <summary>
                <para>Creates a copy of the current ConstantValue instance.
</para>
            </summary>
            <returns>An ConstantValue object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="T:DevExpress.Data.IRelationListEx">

            <summary>
                <para>An extended version of the <see cref="T:DevExpress.Data.IRelationList"/> interface, that can be implemented by a data source to support master-detail relationships.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.IRelationListEx.GetRelationCount(System.Int32)">
            <summary>
                <para>When implemented by a class, returns the number of relationships for a master row.
</para>
            </summary>
            <param name="index">
		An integer value that specifies the master row.

            </param>
            <returns>An integer value that specifies the number of relationships for a master row.
</returns>


        </member>
        <member name="M:DevExpress.Data.IRelationListEx.GetRelationDisplayName(System.Int32,System.Int32)">
            <summary>
                <para>When implemented by a class, returns the display caption of a particular relationship in a specific master row. 
</para>
            </summary>
            <param name="index">
		An integer value that specifies the master row.

            </param>
            <param name="relationIndex">
		An integer value that specifies the relationship.

            </param>
            <returns>A string value that specifies the display caption of a particular relationship in a specific master row. 
</returns>


        </member>
        <member name="T:DevExpress.Data.IRelationList">

            <summary>
                <para>An interface that can be implemented by a data source to support master-detail relationships.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.IRelationList.GetDetailList(System.Int32,System.Int32)">
            <summary>
                <para>When implemented by a class, returns detail data for a relationship.
</para>
            </summary>
            <param name="index">
		An integer value that specifies the index of a master row in the data source.

            </param>
            <param name="relationIndex">
		An integer value that specifies the relationship.

            </param>
            <returns>An object that implements the <b>IList</b> interface and represents detail data for a relationship.
</returns>


        </member>
        <member name="M:DevExpress.Data.IRelationList.GetRelationName(System.Int32,System.Int32)">
            <summary>
                <para>When implemented by a class, returns the name of a master-detail relationship.
</para>
            </summary>
            <param name="index">
		An integer value that specifies the index of a master row in the data source.

            </param>
            <param name="relationIndex">
		An integer value that specifies the relationship.

            </param>
            <returns>The name of a master-detail relationship.
</returns>


        </member>
        <member name="M:DevExpress.Data.IRelationList.IsMasterRowEmpty(System.Int32,System.Int32)">
            <summary>
                <para>When implemented by a class, returns a Boolean value that specifies whether a specific detail of a particular master row contains data.
</para>
            </summary>
            <param name="index">
		An integer value that specifies the index of a master row in the data source.

            </param>
            <param name="relationIndex">
		An integer value that specifies the relationship.

            </param>
            <returns>A Boolean value that specifies whether a specific detail of a particular master row contains data.
</returns>


        </member>
        <member name="P:DevExpress.Data.IRelationList.RelationCount">
            <summary>
                <para>When implemented by a class, returns the number of master-detail relationships for the current master data source.
</para>
            </summary>
            <value>An integer value that specifies the number of master-detail relationships for the current master data source.
</value>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase">

            <summary>
                <para>The base for classes that provide functionality to Expression Editor items (such as constants, functions and data columns).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.#ctor(DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase)">
            <summary>
                <para>Initializes a new instance of the ItemInfoBase class with the specified prototype.

</para>
            </summary>
            <param name="other">
		A ItemInfoBase object, specifying a prototype for a new ItemInfoBase instance.

            </param>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the ItemInfoBase class with the specified category.
</para>
            </summary>
            <param name="category">
		A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category">
            <summary>
                <para>Specifies the name of a category to which the Expression Editor item belongs.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Description">
            <summary>
                <para>Specifies the description displayed for an item in the Expression Editor.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Name">
            <summary>
                <para>Specifies the name of an Expression Editor item.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.ToString">
            <summary>
                <para>Returns the textual representation of ItemInfoBase.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value.
</returns>


        </member>
        <member name="T:DevExpress.Utils.LayoutAllowEventHandler">

            <summary>
                <para>A method that will handle events raised when upgrading a control's layout, allowing you to cancel the upgrade (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.BeforeLoadLayout"/>, <see cref="E:DevExpress.XtraBars.BarManager.BeforeLoadLayout"/>, etc.). 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.LayoutAllowEventHandler.Invoke(System.Object,DevExpress.Utils.LayoutAllowEventArgs)">
            <summary>
                <para>A method that will handle events raised when upgrading a control's layout, allowing you to cancel the upgrade (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.BeforeLoadLayout"/>, <see cref="E:DevExpress.XtraBars.BarManager.BeforeLoadLayout"/>, etc.).
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.LayoutAllowEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Data.Browsing.DataContext">

            <summary>
                <para>Provides information about a data source.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Browsing.DataContext.#ctor">
            <summary>
                <para>Initializes a new instance of the DataContext class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Browsing.DataContext.#ctor(System.Boolean)">
            <summary>
                <para>Initializes a new instance of the DataContext class with the specified settings.
</para>
            </summary>
            <param name="suppressListFilling">
		A Boolean value.

            </param>


        </member>
        <member name="M:DevExpress.Data.Browsing.DataContext.GetCustomDataSourceDisplayName(System.Object)">
            <summary>
                <para>Returns the display name of a custom data source.
</para>
            </summary>
            <param name="dataSource">
		A <see cref="T:System.Object"/> value, specifying the data source.

            </param>
            <returns>A <see cref="T:System.String"/> value, specifying the custom data source display name.
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.DataContext.GetDataMemberDisplayName(System.Object,System.String,System.String)">
            <summary>
                <para>Returns the display name of a data member.
</para>
            </summary>
            <param name="dataSource">
		A <see cref="T:System.Object"/> value, specifying the data source.

            </param>
            <param name="dataMemberPrefix">
		A <see cref="T:System.String"/> value, specifying the data member prefix.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member.

            </param>
            <returns>A <see cref="T:System.String"/> value, specifying the data member display name.
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.DataContext.GetDataMemberDisplayName(System.Object,System.String)">
            <summary>
                <para>Returns the display name of a data member.
</para>
            </summary>
            <param name="dataSource">
		A <see cref="T:System.Object"/> value, specifying the data source.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member.

            </param>
            <returns>A <see cref="T:System.String"/> value, specifying the data member display name.
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.DataContext.GetDataSourceDisplayName(System.Object,System.String)">
            <summary>
                <para>Returns the display name of a data source.
</para>
            </summary>
            <param name="dataSource">
		A <see cref="T:System.Object"/> value, specifying the data source.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member.

            </param>
            <returns>A <see cref="T:System.String"/> value, specifying the data source display name.
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.DataContext.GetItemProperties(System.Object,System.String,System.Boolean)">
            <summary>
                <para>Returns the array of data source item properties.
</para>
            </summary>
            <param name="dataSource">
		A <see cref="T:System.Object"/> value, specifying the data source.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member.

            </param>
            <param name="forceList">
		A Boolean value.

            </param>
            <returns>An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.DataContext.IsComplexType(System.Type)">
            <summary>
                <para>Indicates whether the data source is of a custom type.

</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> value.

            </param>
            <returns><b>true</b> if the data source is custom; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.DataContext.IsStandardType(System.Type)">
            <summary>
                <para>Indicates whether the data source is of the standard type.

</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> value.

            </param>
            <returns><b>true</b> if the data source is standard; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.DataContext.TryGetDataMemberDisplayName(System.Object,System.String,System.String@)">
            <summary>
                <para>Attempts to obtain the display name of the specified data member.
</para>
            </summary>
            <param name="dataSource">
		A <see cref="T:System.Object"/> value, specifying the data source.

            </param>
            <param name="dataMember">
		A <see cref="T:System.String"/> value, specifying the data member.

            </param>
            <param name="result">
		A <see cref="T:System.String"/> value, specifying the result.

            </param>
            <returns><b>true</b> if the data member's display name has been obtained; otherwise <b>false</b>.
</returns>


        </member>
        <member name="T:DevExpress.Entity.ProjectModel.ISolutionTypesProvider">

            <summary>
                <para>If implemented, provides access to the known types in the current solution.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.ActiveProjectTypes">
            <summary>
                <para>Provides access to types available for the current project.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Entity.ProjectModel.IProjectTypes"/> object, providing access to project types.
</value>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.AddReference(System.String)">
            <summary>
                <para>Adds a new reference by an assembly name.
</para>
            </summary>
            <param name="assemblyName">
		A <see cref="T:System.String"/> specifying the name of an assembly to reference.

            </param>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.AddReferenceFromFile(System.String)">
            <summary>
                <para>Adds a new reference by an assembly file path. 
</para>
            </summary>
            <param name="assemblyPath">
		A <see cref="T:System.String"/> specifying the path to an assembly file.

            </param>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.FindType(System.String)">
            <summary>
                <para>Obtains a project type by its full name.
</para>
            </summary>
            <param name="fullName">
		A <see cref="T:System.String"/> value specifying the full name of a type.

            </param>
            <returns>An <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> object.
</returns>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.FindType(System.Predicate`1)">
            <summary>
                <para>Returns the first found type that satisfies the specified predicate.
</para>
            </summary>
            <param name="predicate">
		A <b>System.Predicate</b> delegate.

            </param>
            <returns>An <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> object.
</returns>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.FindTypes(System.Predicate`1)">
            <summary>
                <para>Obtains a collection of types that satisfy the specified predicate.
</para>
            </summary>
            <param name="predicate">
		A <b>System.Predicate</b> delegate.

            </param>
            <returns>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.FindTypes(DevExpress.Entity.ProjectModel.IDXTypeInfo,System.Predicate`1)">
            <summary>
                <para>Obtains a collection of types that extend the specified base class and satisfy the specified predicate.
</para>
            </summary>
            <param name="baseClass">
		An <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> object.

            </param>
            <param name="predicate">
		A <b>System.Predicate</b> delegate.

            </param>
            <returns>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.GetAssembly(System.String)">
            <summary>
                <para>Obtains the specified assembly
</para>
            </summary>
            <param name="assemblyName">
		A <see cref="T:System.String"/> specifying the name of the assembly to obtain.

            </param>
            <returns>An <see cref="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo"/> object containing information about an assembly.
</returns>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.GetAssemblyReferencePath(System.String,System.String)">
            <summary>
                <para>Returns the path to an application's assembly reference.
</para>
            </summary>
            <param name="projectAssemblyFullName">
		A <see cref="T:System.String"/> value, specifying the project assembly.

            </param>
            <param name="referenceName">
		A <see cref="T:System.String"/> value, specifying the reference name.

            </param>
            <returns>A <see cref="T:System.String"/> value.
</returns>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.GetProjectTypes(System.String)">
            <summary>
                <para>Obtains project types available in the specified assembly. 
</para>
            </summary>
            <param name="assemblyFullName">
		A <see cref="T:System.String"/> specifying the name of an assembly.

            </param>
            <returns>An <see cref="T:DevExpress.Entity.ProjectModel.IProjectTypes"/> object providing access to project types.
</returns>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.GetTypes">
            <summary>
                <para>Obtains a collection of available types.
</para>
            </summary>
            <returns>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.IsReferenceExists(System.String)">
            <summary>
                <para>Indicates whether the specified assembly is referenced by the project.
</para>
            </summary>
            <param name="assemblyName">
		A <see cref="T:System.String"/> specifying the assembly name.

            </param>
            <returns><b>true</b>, if an assembly is referenced by the project; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="T:DevExpress.Data.Entity.DataConnectionLocation">

            <summary>
                <para>Lists the values indicating from where the Report Wizard obtains its data connection settings.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Entity.DataConnectionLocation.Both">
            <summary>
                <para>The Report Wizard lists all available data connections (both the data connections stored in an application's settings, and in the Visual Studio Server Explorer).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Entity.DataConnectionLocation.None">
            <summary>
                <para>The Report Wizard does not suggest using any of the available data connections.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Entity.DataConnectionLocation.ServerExplorer">
            <summary>
                <para>The Report Wizard lists the data connections available in the Visual Studio Server Explorer.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Entity.DataConnectionLocation.SettingsFile">
            <summary>
                <para>The Report Wizard lists the data connections available in the application's configuration file.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.WizardFramework.IWizardPageFactory`1">

            <summary>
                <para>A factory that creates Data Source wizard pages.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.WizardFramework.IWizardPageFactory`1.GetPage(System.Type)">
            <summary>
                <para>Returns a wizard page of the specified type.
</para>
            </summary>
            <param name="pageType">
		A <see cref="T:System.Type"/> enumeration value.

            </param>
            <returns>An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardPage`1"/> interface.
</returns>


        </member>
        <member name="T:DevExpress.Data.Entity.IConnectionStringsProvider">

            <summary>
                <para>If implemented, provides access to the available connection strings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Entity.IConnectionStringsProvider.GetConfigFileConnections">
            <summary>
                <para>If implemented, obtains information about connection strings defined in the application configuration file.
</para>
            </summary>
            <returns>An array of objects implementing the <see cref="T:DevExpress.Data.Entity.IConnectionStringInfo"/> interface, which contain information about available connection strings.
</returns>


        </member>
        <member name="M:DevExpress.Data.Entity.IConnectionStringsProvider.GetConnections">
            <summary>
                <para>If implemented, obtains information about the available connection strings.
</para>
            </summary>
            <returns>An array of objects implementing the <see cref="T:DevExpress.Data.Entity.IConnectionStringInfo"/> interface, that contain information about the available connection strings.

</returns>


        </member>
        <member name="M:DevExpress.Data.Entity.IConnectionStringsProvider.GetConnectionString(System.String)">
            <summary>
                <para>If implemented, obtains the specified connection string.
</para>
            </summary>
            <param name="connectionStringName">
		A <see cref="T:System.String"/> value specifying a connection string by its name.

            </param>
            <returns>A <see cref="T:System.String"/> containing a connection sting.
</returns>


        </member>
        <member name="M:DevExpress.Data.Entity.IConnectionStringsProvider.GetConnectionStringInfo(System.String)">
            <summary>
                <para>If implemented, obtains information about a specified connection string.
</para>
            </summary>
            <param name="connectionStringName">
		A <see cref="T:System.String"/> value specifying the stored procedure name.

            </param>
            <returns>An object implementing the <see cref="T:DevExpress.Data.Entity.IConnectionStringInfo"/> interface that contains information about a connection string.
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo">

            <summary>
                <para>Provides information about a stored procedure.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the StoredProcedureInfo class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Initializes a new instance of the StoredProcedureInfo class with specified settings.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the stored procedure name.

            </param>
            <param name="displayName">
		A <see cref="T:System.String"/> value specifying the stored procedure display name.

            </param>
            <param name="parameters">
		A collection of stored procedure parameters.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo.Clone">
            <summary>
                <para>Creates a copy of the current StoredProcedureInfo.
</para>
            </summary>
            <returns>An object that represents a newly created copy of the current StoredProcedureInfo.
</returns>


        </member>
        <member name="T:DevExpress.Data.WizardFramework.IWizardModel">

            <summary>
                <para>If implemented, provides the Model functionality to a Data Source Wizard.
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Data.RowDeletedEventArgs">

            <summary>
                <para>Provides data for an event that fires after a row is deleted.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.RowDeletedEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
            <summary>
                <para>Initializes a new instance of the RowDeletedEventArgs class with the specified settings.
</para>
            </summary>
            <param name="rowHandle">
		The row handle. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.RowHandle"/> property.

            </param>
            <param name="listIndex">
		The index of the row in the data source. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.ListSourceIndex"/> property.

            </param>
            <param name="row">
		An object that represents the current row. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.Row"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.RowDeletedEventArgs.ListSourceIndex">
            <summary>
                <para>Gets the index of the current row in the data source.
</para>
            </summary>
            <value>The index of the current row in the data source.
</value>


        </member>
        <member name="P:DevExpress.Data.RowDeletedEventArgs.Row">
            <summary>
                <para>Gets the currently processed row.
</para>
            </summary>
            <value>The currently processed row.
</value>


        </member>
        <member name="P:DevExpress.Data.RowDeletedEventArgs.RowHandle">
            <summary>
                <para>Gets the row handle (id) that identifies the position of the current row in the control.
</para>
            </summary>
            <value>An integer value that specifies the handle (id) of the current row.
</value>


        </member>
        <member name="T:DevExpress.Data.RowDeletingEventArgs">

            <summary>
                <para>Provides data for an event that fires before a row is deleted.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.RowDeletingEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
            <summary>
                <para>Initializes a new instance of the RowDeletingEventArgs class with the specified settings.
</para>
            </summary>
            <param name="rowHandle">
		The row handle. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.RowHandle"/> property.

            </param>
            <param name="listIndex">
		The index of the row in the data source. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.ListSourceIndex"/> property.

            </param>
            <param name="row">
		An object that represents the current row. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.Row"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.RowDeletingEventArgs.Cancel">
            <summary>
                <para>Gets or sets whether the current event (the row deletion) needs to be canceled. 
</para>
            </summary>
            <value><b>true</b>, if the current event needs to be canceled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.IoC.FactoryRegistration">

            <summary>
                <para>Enables you to register factories that are used to create object instances.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.IoC.FactoryRegistration.#ctor(System.Func`1)">
            <summary>
                <para>Initializes a new instance of the FactoryRegistration class with the specified factory.
</para>
            </summary>
            <param name="factory">
		A function, specifying the required <see cref="T:System.Object"/>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.IoC.FactoryRegistration.AsTransient">
            <summary>
                <para>Modifies the registration so that a new dependency will be created on each <see cref="M:DevExpress.Utils.IoC.IntegrityContainer.Resolve"/> method call.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.IoC.FactoryRegistration.Dispose">
            <summary>
                <para>Releases all resources used by FactoryRegistration.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.IoC.FactoryRegistration.Instance">
            <summary>
                <para>Gets the cached resolved instance for a resolved non-transient dependency.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> value.
</value>


        </member>
        <member name="P:DevExpress.Utils.IoC.FactoryRegistration.Transient">
            <summary>
                <para>Gets the flag for a transient registration.
</para>
            </summary>
            <value>A Boolean value.
</value>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo">

            <summary>
                <para>Provides information about a static constant listed in the Expression Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the ConstantInfo class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the ConstantInfo class with the specified category.
</para>
            </summary>
            <param name="category">
		A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo.#ctor(DevExpress.Data.Controls.ExpressionEditor.ConstantInfo)">
            <summary>
                <para>Initializes a new instance of the ConstantInfo class with the specified prototype.

</para>
            </summary>
            <param name="other">
		A ConstantInfo object, specifying a prototype for a new ConstantInfo instance.

            </param>


        </member>
        <member name="T:DevExpress.XtraReports.UI.FieldType">

            <summary>
                <para>Specifies the type of the value returned by a calculated field.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.Boolean">
            <summary>
                <para>Indicates that the field returns a Boolean value (the <see cref="T:System.Boolean"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.Byte">
            <summary>
                <para>Indicates that the field returns a byte value (the <see cref="T:System.Byte"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.DateTime">
            <summary>
                <para>Indicates that the field returns a date-time value (the <see cref="T:System.DateTime"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.Decimal">
            <summary>
                <para>Indicates that the field returns a decimal value (the <see cref="T:System.Decimal"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.Double">
            <summary>
                <para>Indicates that the field returns a double value (the <see cref="T:System.Double"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.Float">
            <summary>
                <para>Indicates that the field returns a float value (the <see cref="T:System.Single"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.Guid">
            <summary>
                <para>Indicates that the field returns a GUID value (the System.Guid type)
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.Int16">
            <summary>
                <para>Indicates that the field returns an integer value (the <see cref="T:System.Int16"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.Int32">
            <summary>
                <para>Indicates that the field returns an integer value (the <see cref="T:System.Int32"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.None">
            <summary>
                <para>Indicates that the field's type is undefined, and it determined by evaluating the actually returned object when it is used during report generation.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.String">
            <summary>
                <para>Indicates that the field returns a string value (the <see cref="T:System.String"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraReports.UI.FieldType.TimeSpan">
            <summary>
                <para>Indicates that the field returns a time span value (the <see cref="T:System.TimeSpan"/> type).
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Data.Linq.LinqServerModeSource.ExceptionThrown"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs.#ctor(System.Exception)">
            <summary>
                <para>Initialize a new instance of the LinqServerModeExceptionThrownEventArgs class.
</para>
            </summary>
            <param name="exception">
		The database exception. This value is assigned to the <see cref="P:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs.Exception"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs.Exception">
            <summary>
                <para>Gets the database exception.
</para>
            </summary>
            <value>The database exception.
</value>


        </member>
        <member name="T:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqServerModeSource.ExceptionThrown"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventHandler.Invoke(System.Object,DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqServerModeSource.ExceptionThrown"/> event.
</para>
            </summary>
            <param name="sender">
		The event source.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs"/> object that contains data related to the event.


            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.Localization.PreviewLocalizer">

            <summary>
                <para>A base class that provides necessary functionality for custom localizers of the Printing-Exporting Library.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.#ctor">
            <summary>
                <para>Initializes a new instance of the PreviewLocalizer class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraPrinting.Localization.PreviewLocalizer.Active">
            <summary>
                <para>Specifies a localizer object providing localization of the XtraPrinting Library interface at runtime.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> descendant, used to localize the user interface at runtime. 
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.CreateDefaultLocalizer">
            <summary>
                <para>Returns a Localizer object storing resources based on the thread's language and regional settings (culture).

</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object, storing resources based on the thread's language and regional settings (culture).

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.CreateResXLocalizer">
            <summary>
                <para>For internal use. Returns a Localizer object storing resources based on the thread's language and regional settings (culture). 
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object, storing resources based on the thread's language and regional settings (culture).

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.GetString(DevExpress.XtraPrinting.Localization.PreviewStringId)">
            <summary>
                <para>Returns a localized string for the given string identifier.
</para>
            </summary>
            <param name="id">
		A <see cref="T:DevExpress.XtraPrinting.Localization.PreviewStringId"/> enumeration value, identifying the string to localize.

            </param>
            <returns>A <see cref="T:System.String"/> value, corresponding to the specified identifier.
</returns>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem">

            <summary>
                <para>Enables customization of Expression Editor items for which automatic completion is available.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.#ctor(System.String,System.String,DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind)">
            <summary>
                <para>Initializes a new instance of the AutoCompleteItem class with the specified settings.
</para>
            </summary>
            <param name="value">
		A <see cref="T:System.String"/> value. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.Value"/> property.

            </param>
            <param name="description">
		A <see cref="T:System.String"/> value. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.Description"/> property.

            </param>
            <param name="itemKind">
		An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind"/> enumeration value. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.ItemKind"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.Description">
            <summary>
                <para>Specifies the description of a suggested automatic completion item displayed in a corresponding tool tip.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.ItemKind">
            <summary>
                <para>Indicates the kind of an item for which automatic code completion is available.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.Value">
            <summary>
                <para>Specifies the value of a suggested automatic completion item added to an expression on selecting this item.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="T:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqServerModeSource.InconsistencyDetected"/> event. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventHandler.Invoke(System.Object,DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqServerModeSource.InconsistencyDetected"/> event.
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventArgs"/> object that contains data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Data.Linq.LinqServerModeSource.InconsistencyDetected"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the LinqServerModeInconsistencyDetectedEventArgs class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventArgs.Handled">
            <summary>
                <para>Gets or sets whether the inconsistency detected during an operation on a data source should be handled manually.

</para>
            </summary>
            <value><b>true</b> to manually handle the inconsistency; <b>false</b> to reload data from the data source.
</value>


        </member>
        <member name="T:DevExpress.Data.Linq.LinqServerModeSource">

            <summary>
                <para>The data source for the GridControl and PivotGridControl that binds these controls to any queryable source ('LINQ to SQL Classes') in server mode.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Linq.LinqServerModeSource.#ctor">
            <summary>
                <para>Initializes a new instance of the LinqServerModeSource class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Linq.LinqServerModeSource.DefaultSorting">
            <summary>
                <para>Specifies how data source contents are sorted by default, when sort order is not specified by the bound control.
</para>
            </summary>
            <value>A <see cref="String"/> object which contains the names of the columns against which data source contents are sorted.
</value>


        </member>
        <member name="P:DevExpress.Data.Linq.LinqServerModeSource.ElementType">
            <summary>
                <para>Specifies the type of objects retrieved from a data source.
</para>
            </summary>
            <value>The type of objects retrieved from a data source.
</value>


        </member>
        <member name="E:DevExpress.Data.Linq.LinqServerModeSource.ExceptionThrown">
            <summary>
                <para>Enables you to manually handle the database exception.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.Linq.LinqServerModeSource.InconsistencyDetected">
            <summary>
                <para>Enables you to manually handle the inconsistency detected during an operation on a data source.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Linq.LinqServerModeSource.KeyExpression">
            <summary>
                <para>Gets or sets the key expression.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the key expression.
</value>


        </member>
        <member name="P:DevExpress.Data.Linq.LinqServerModeSource.QueryableSource">
            <summary>
                <para>Gets or sets the queryable data source.
</para>
            </summary>
            <value>An object that implements the <see cref="T:System.Linq.IQueryable"/> interface.
</value>


        </member>
        <member name="M:DevExpress.Data.Linq.LinqServerModeSource.Reload">
            <summary>
                <para>Forces the bound data-aware control to reload data from the data store.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBStoredProcedure">

            <summary>
                <para>A stored procedure.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBStoredProcedure.#ctor">
            <summary>
                <para>Initializes a new instance of the DBStoredProcedure class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpo.DB.DBStoredProcedure.Arguments">
            <summary>
                <para>Provides access to the collection of a stored procedure's arguments.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureArgument"/> values.
</value>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBStoredProcedure.Name">
            <summary>
                <para>A <see cref="T:System.String"/> value, specifying the stored procedure name.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DBStoredProcedure.ResultSets">
            <summary>
                <para>Provides access to the collection of a stored procedure's result sets.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureResultSet"/> values.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBStoredProcedure.ToString">
            <summary>
                <para>Returns the DBStoredProcedure name.
</para>
            </summary>
            <returns>Always the <see cref="F:DevExpress.Xpo.DB.DBStoredProcedure.Name"/> value.
</returns>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind">

            <summary>
                <para>Lists the elements of an expression available in the Expression Editor.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Column">
            <summary>
                <para>The expression element is a data column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Constant">
            <summary>
                <para>The expression element is a static constant.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Error">
            <summary>
                <para>The expression element is an error.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Function">
            <summary>
                <para>The expression element is a function.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Group">
            <summary>
                <para>The expression element is a group of items.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Operator">
            <summary>
                <para>The expression element is an operator.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.IParameter">

            <summary>
                <para>If implemented by a class, provides functionality to a report parameter.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.IParameter.Value">
            <summary>
                <para>Specifies the parameter value.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/>, specifying the parameter value.
</value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.AfterCheckWordEventHandler">

            <summary>
                <para>Represents a method that will handle the <b>AfterCheckWord</b> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.AfterCheckWordEventHandler.Invoke(System.Object,DevExpress.XtraSpellChecker.AfterCheckWordEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.
</para>
            </summary>
            <param name="sender">
		An object that triggers the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs"/> object that provides data for the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.

            </param>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs">

            <summary>
                <para>Provides data for the <b>AfterCheckWord</b> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.#ctor(System.Object,System.String,System.String,DevExpress.XtraSpellChecker.SpellCheckOperation,DevExpress.XtraSpellChecker.Parser.Position)">
            <summary>
                <para>Initializes a new AfterCheckWordEventArgs class instance with specified settings.
</para>
            </summary>
            <param name="editControl">
		An object, representing the control being checked.

            </param>
            <param name="originalWord">
		A string, representing a word before the check. 

            </param>
            <param name="changedWord">
		A string, representing the word modified after the spell check.

            </param>
            <param name="result">
		A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckOperation"/> enumeration value, representing the operation type. 

            </param>
            <param name="startPosition">
		A DevExpress.XtraSpellChecker.Parser.Position object, representing the position in the text where the checked word begins.

            </param>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.ChangedWord">
            <summary>
                <para>Gets the word which replaced the former one after the spelling check is performed.

</para>
            </summary>
            <value>A string, representing the word modified after spelling check.

</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.EditControl">
            <summary>
                <para>Gets the control being checked.
</para>
            </summary>
            <value>An object representing a control being checked.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.Operation">
            <summary>
                <para>Gets the type of operation performed with the word in a spell check.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckOperation"/> enumeration value, representing the operation type.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.OriginalWord">
            <summary>
                <para>Gets the word before the spell check is performed.

</para>
            </summary>
            <value>A string, representing a word before the check.

</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.StartPosition">
            <summary>
                <para>Gets the position of a checked word in a text.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.Parser.Position"/> object, representing the position in a text where the checked word begins. 

</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.VerticalContentSplitting">

            <summary>
                <para>Specifies how content bricks are split if they are partially positioned outside the right page margin.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.VerticalContentSplitting.Exact">
            <summary>
                <para>When the brick dimensions do not fit into the right page margin, the rest of the brick content is split across two pages.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.VerticalContentSplitting.Smart">
            <summary>
                <para>When the brick dimensions do not fit into the right page margin, the brick content is moved to a new page in its entirety.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.ExceptionAction">

            <summary>
                <para>Specifies how to resolve exceptions while performing an action.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.ExceptionAction.CancelAction">
            <summary>
                <para>Cancel the action that caused an exception.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.ExceptionAction.RetryAction">
            <summary>
                <para>Retry the action that caused an exception.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.RealTimeSource">

            <summary>
                <para>The component that acts as an asynchronous bridge between a data-aware control and rapidly changing data.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.RealTimeSource.#ctor">
            <summary>
                <para>Initializes a new instance of the RealTimeSource class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.RealTimeSource.CatchUp">
            <summary>
                <para>Empties the changes queue, re-reads the data source and informs the bound control that the reset has occurred.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.RealTimeSource.DataSource">
            <summary>
                <para>Specifies the data source from which the RealTimeSource component retrieves its data.
</para>
            </summary>
            <value>An <a href="http://msdn.microsoft.com/en-us/library/system.collections.ilist.aspx">IList</a> or <a href="http://msdn.microsoft.com/en-us/library/system.componentmodel.ilistsource.aspx">IListSource</a> object that represents the data source from which the RealTimeSource component retrieves its data.
</value>


        </member>
        <member name="P:DevExpress.Data.RealTimeSource.DisplayableProperties">
            <summary>
                <para>Specifies a semicolon-separated list of displayable property names.
</para>
            </summary>
            <value>A string which is a semicolon-separated list of displayable property names.
</value>


        </member>
        <member name="M:DevExpress.Data.RealTimeSource.GetDisplayableProperties(System.Object)">
            <summary>
                <para>Returns the displayable property names of an item type contained in a specified data source.

</para>
            </summary>
            <param name="source">
		The data source object to examine for property information.

            </param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1[[System.String]]"/> list of property names.
</returns>


        </member>
        <member name="M:DevExpress.Data.RealTimeSource.GetList">
            <summary>
                <para>Returns the list of data source records. Introduced to support <a href="http://msdn.microsoft.com/en-us/library/system.componentmodel.ilistsource.aspx">IListSource</a> in RealTimeSource.

</para>
            </summary>
            <returns>A <see cref="T:System.Collections.IList"/> object which is the list of data source records.

</returns>


        </member>
        <member name="M:DevExpress.Data.RealTimeSource.GetQueueDelay">
            <summary>
                <para>Returns the delay between the data source event occurrence and passing changes to the bound control (in milliseconds).

</para>
            </summary>
            <returns>An integer value that is the changes queue delay in milliseconds.
</returns>


        </member>
        <member name="P:DevExpress.Data.RealTimeSource.IgnoreItemEvents">
            <summary>
                <para>Specifies whether to ignore <a href="http://msdn.microsoft.com/en-us/library/vstudio/system.componentmodel.inotifypropertychanged.propertychanged.aspx">INotifyPropertyChanged.PropertyChanged</a> events of the data source items.

</para>
            </summary>
            <value><b>true</b>, if the RealTimeSource does not handle <b>PropertyChanged</b> events; otherwise, <b>false</b>.

</value>


        </member>
        <member name="M:DevExpress.Data.RealTimeSource.Resume">
            <summary>
                <para>Resumes tracking changes in the data source after tracking was suspended via the <see cref="M:DevExpress.Data.RealTimeSource.Suspend"/> method.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.RealTimeSource.SendQueueTimeout">
            <summary>
                <para>Specifies the timeout between the data source event occurrence and passing changes to the bound control (in milliseconds). The default timeout is 2000 ms. If the actual delay exceeds the specified timeout, the <see cref="M:DevExpress.Data.RealTimeSource.CatchUp"/> method triggers automatically.

</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Data.RealTimeSource.Suspend">
            <summary>
                <para>Suspends tracking changes in the data source.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.RealTimeSource.UseWeakEventHandler">
            <summary>
                <para>Specifies whether or not the <a href="http://msdn.microsoft.com/en-us/library/system.weakreference.aspx">WeakReference</a> is used to handle the data source's <a href="http://msdn.microsoft.com/en-us/library/system.componentmodel.ibindinglist.listchanged.aspx">IBindingList.ListChanged</a> event.
</para>
            </summary>
            <value><b>true</b>, if the weak reference is used; otherwise, <b>false</b>. 

</value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.SpellingError">

            <summary>
                <para>Lists error types found during a spell check.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellingError.Misspelling">
            <summary>
                <para>Erroneously spelled word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellingError.Repeating">
            <summary>
                <para>Repeated word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellingError.Syntax">
            <summary>
                <para>Reserved for internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellingError.Unknown">
            <summary>
                <para>Error type unlisted in enumeration. Use it for custom error handling.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.ISpellingErrorInfo">

            <summary>
                <para>Comprises erroneous word, error type and location.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraSpellChecker.ISpellingErrorInfo.Error">
            <summary>
                <para>Gets the error type. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraSpellChecker.SpellingError"/> enumeration member.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ISpellingErrorInfo.Word">
            <summary>
                <para>Gets a misspelled word.
</para>
            </summary>
            <value>A string that is the misspelled word.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ISpellingErrorInfo.WordEndPosition">
            <summary>
                <para>Gets the end position of a misspelled word.
</para>
            </summary>
            <value>A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object containing information on the position of the word.
</value>


        </member>
        <member name="P:DevExpress.XtraSpellChecker.ISpellingErrorInfo.WordStartPosition">
            <summary>
                <para>Gets the start position of a misspelled word.
</para>
            </summary>
            <value>A <b>DevExpress.XtraSpellChecker.Parser.Position</b> object containing information on the position of the word.
</value>


        </member>
        <member name="T:DevExpress.Data.WizardFramework.IWizardPage`1">

            <summary>
                <para>If implemented, represents a page of the Report Wizard.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.WizardFramework.IWizardPage`1.Begin">
            <summary>
                <para>If implemented, initializes controls of a Report Wizard page.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.WizardFramework.IWizardPage`1.Changed">
            <summary>
                <para>Occurs when settings on the current wizard page were changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.WizardFramework.IWizardPage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.

</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.WizardFramework.IWizardPage`1.Error">
            <summary>
                <para>Fires when an error occurs for the current report page.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.WizardFramework.IWizardPage`1.FinishEnabled">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Finish</b> button is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Data.WizardFramework.IWizardPage`1.GetNextPageType">
            <summary>
                <para>If implemented, returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.WizardFramework.IWizardPage`1.Model">
            <summary>
                <para>If implemented, provides access to the wizard model, which accumulates settings specified by an end-user during wizard execution.
</para>
            </summary>
            <value>A TModel object containing settings specified by an end-user during wizard execution.
</value>


        </member>
        <member name="P:DevExpress.Data.WizardFramework.IWizardPage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.WizardFramework.IWizardPage`1.PageContent">
            <summary>
                <para>If implemented, provides access to the content of a wizard page.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> value.
</value>


        </member>
        <member name="M:DevExpress.Data.WizardFramework.IWizardPage`1.Validate(System.String@)">
            <summary>
                <para>If implemented, validates the correctness of settings specified on a wizard page.
</para>
            </summary>
            <param name="errorMessage">
		A <see cref="T:System.String"/> value specifying the text of an error message shown if the validation fails.


            </param>
            <returns><b>true</b>, if the validation succeeded; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.GroupingLevelInfo"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.#ctor(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
            <summary>
                <para>Initializes a new instance of the GroupingLevelInfo class with the specified data columns.
</para>
            </summary>
            <param name="columns">
		An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.

            </param>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.Columns">
            <summary>
                <para>Provides access to the data columns used as grouping criteria for the current grouping level.
</para>
            </summary>
            <value>An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects. 
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.ContainsColumn(System.String)">
            <summary>
                <para>Checks whether or not a grouping level contains the specified data column.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value, specifying the data column name.

            </param>
            <returns><b>true</b>, if the grouping level contains the specified column; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.DisplayName">
            <summary>
                <para>Gets the display name of a grouping level.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value, specifying the grouping level display name.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current GroupingLevelInfo instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b>, if the specified object is equal to the current GroupingLevelInfo instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.GetHashCode">
            <summary>
                <para>Serves as the default hash function.
</para>
            </summary>
            <returns>An integer value, specifying the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.PaperKindViewInfo"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the PaperKindViewInfo class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo.DisplayName">
            <summary>
                <para>Specifies the paper kind display name.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value, specifying the name of a paper kind.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo.Id">
            <summary>
                <para>Specifies the paper kind Id.
</para>
            </summary>
            <value>An integer value, specifying the paper kind ID.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo.SizeText">
            <summary>
                <para>Specifies the paper kind size text.
</para>
            </summary>
            <value>A string value that specifies the text size of a paper kind.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.XDocumentLabelProductRepository"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository.#ctor(System.Xml.Linq.XDocument)">
            <summary>
                <para>Initializes a new instance of the XDocumentLabelProductRepository class with the specified XML document.
</para>
            </summary>
            <param name="document">
		A <see cref="T:System.Xml.Linq.XDocument"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository.GetPaperKindData(System.Int32)">
            <summary>
                <para>Provides information about a specified paper kind.
</para>
            </summary>
            <param name="id">
		An integer value, identifying the paper kind.

            </param>
            <returns>A <see cref="PaperKindData"/> value.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository.GetSortedPaperKinds">
            <summary>
                <para>Obtains a sorted collection of the supported paper kinds.
</para>
            </summary>
            <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.PaperKindData"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository.GetSortedProductDetails(System.Int32)">
            <summary>
                <para>Obtains a sorted collection of details for the supported label products.
</para>
            </summary>
            <param name="productId">
		An integer value.

            </param>
            <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelDetails"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository.GetSortedProducts">
            <summary>
                <para>Obtains a sorted collection of the supported label products.
</para>
            </summary>
            <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelProduct"/> objects.
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Labels.PaperKindData">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.PaperKindData"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.PaperKindData.#ctor">
            <summary>
                <para>Initializes a new instance of the PaperKindData class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.EnumId">
            <summary>
                <para>Specifies the Id of a paper kind in the <b>System.Drawing.Printing.PaperKind</b> enumeration.
</para>
            </summary>
            <value>An integer value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.Height">
            <summary>
                <para>Specifies the height of a paper kind.
</para>
            </summary>
            <value>A string value that specifies the paper kind height.

</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.Id">
            <summary>
                <para>Specifies the Id of a paper kind.
</para>
            </summary>
            <value>An integer value, specifying the paper kind ID.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.IsRollPaper">
            <summary>
                <para>Specifies whether a paper kind is supposed to be printed as a single uninterrupted page. 
</para>
            </summary>
            <value><b>true</b>, to provide a continuous document layout suited for roll paper printing; otherwise, <b>false</b>. 

</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.Name">
            <summary>
                <para>Specifies the name of a paper kind.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> value, specifying the paper kind name.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.Unit">
            <summary>
                <para>Specifies the unit of measure of a paper kind.

</para>
            </summary>
            <value>A value that specifies the unit of measure of the paper kind.

</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.PaperKindData.Validate">
            <summary>
                <para>For internal use.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.Width">
            <summary>
                <para>Specifies the width of a paper kind.
</para>
            </summary>
            <value>A string value that specifies the paper kind width.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Labels.LabelProductRepositoryFactory">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.LabelProductRepositoryFactory"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.LabelProductRepositoryFactory.#ctor">
            <summary>
                <para>Initializes a new instance of the LabelProductRepositoryFactory class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.LabelProductRepositoryFactory.Create">
            <summary>
                <para>Creates an <see cref="T:DevExpress.Data.XtraReports.Labels.ILabelProductRepository"/>.
</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.Data.XtraReports.Labels.ILabelProductRepository"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository"/> object.)
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Labels.LabelProduct">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.LabelProduct"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.LabelProduct.#ctor">
            <summary>
                <para>Initializes a new instance of the LabelProduct class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelProduct.Id">
            <summary>
                <para>Specifies the label product Id.
</para>
            </summary>
            <value>An integer value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelProduct.Name">
            <summary>
                <para>Specifies the label product name.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Labels.LabelDetails">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.LabelDetails"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.LabelDetails.#ctor">
            <summary>
                <para>Initializes a new instance of the LabelDetails class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.BottomMargin">
            <summary>
                <para>Specifies the bottom margin of a label.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> structure.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.Height">
            <summary>
                <para>Specifies the label's height.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.HPitch">
            <summary>
                <para>Specifies the horizontal pitch of a label.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.Id">
            <summary>
                <para>Specifies the Id of a label.
</para>
            </summary>
            <value>An integer value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.LeftMargin">
            <summary>
                <para>Specifies the left margin of a label.
</para>
            </summary>
            <value>A value that specifies the label's left margin.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.Name">
            <summary>
                <para>Specifies the name of a label.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.PaperKindId">
            <summary>
                <para>Specifies the paper kind ID of a label.
</para>
            </summary>
            <value>A value that specifies the label's paper kind ID.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.ProductId">
            <summary>
                <para>Specifies the label's product.
</para>
            </summary>
            <value>An integer value specifying the product Id.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.RightMargin">
            <summary>
                <para>Specifies the right margin of a label.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> structure.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.TopMargin">
            <summary>
                <para>Specifies the top margin of a label.
</para>
            </summary>
            <value>A value that specifies the label's top margin.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.Unit">
            <summary>
                <para>Specifies a unit of measure of a label.
</para>
            </summary>
            <value>A value that specifies the label's unit of measure.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.VPitch">
            <summary>
                <para>Specifies the vertical pitch of a label.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.Width">
            <summary>
                <para>Specifies the label's width.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Labels.ILabelProductRepository">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.ILabelProductRepository"/> interface instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.ILabelProductRepository.GetPaperKindData(System.Int32)">
            <summary>
                <para>Provides information about a specified paper kind.
</para>
            </summary>
            <param name="paperKindId">
		An integer value, identifying the paper kind.

            </param>
            <returns>A <see cref="PaperKindData"/> value.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.ILabelProductRepository.GetSortedPaperKinds">
            <summary>
                <para>If implemented, obtains a sorted collection of the supported paper kinds.
</para>
            </summary>
            <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.PaperKindData"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.ILabelProductRepository.GetSortedProductDetails(System.Int32)">
            <summary>
                <para>If implemented, obtains a sorted collection of details for the supported label products.
</para>
            </summary>
            <param name="productId">
		An integer value.

            </param>
            <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelDetails"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Labels.ILabelProductRepository.GetSortedProducts">
            <summary>
                <para>If implemented, obtains a sorted collection of supported label products.

</para>
            </summary>
            <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelProduct"/> objects.
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IWelcomePageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IWelcomePageView"/> interface instead.

</para>
            </summary>

        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISetReportTitlePageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.ISetReportTitlePageView"/> interface instead.

</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISetReportTitlePageView.Title">
            <summary>
                <para>If implemented, specifies the content of the report title text box.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.ISelectLabelTypePageView"/> interface instead.

</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.CurrentPaperKindData">
            <summary>
                <para>If implemented, specifies the settings of the current paper kind. 

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Labels.PaperKindData"/> value.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.FillLabelDetails(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>If implemented, populates the <b>Product Number</b> drop-down list.
</para>
            </summary>
            <param name="details">
		A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelDetails"/> objects.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.FillLabelProducts(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>If implemented, populates the <b>Label Products</b> drop-down list.
</para>
            </summary>
            <param name="products">
		A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelProduct"/> objects.

            </param>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.SelectedDetails">
            <summary>
                <para>If implemented, specifies the entry selected in the <b>Product Number</b> drop-down list.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Labels.LabelDetails"/> object.
</value>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.SelectedLabelProductChanged">
            <summary>
                <para>Occurs when the active record in the <b>Label Products</b> drop-down list is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.SelectedLabelProductDetailsChanged">
            <summary>
                <para>Occurs when the active record in the <b>Product Number</b> drop-down list is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.SelectedProduct">
            <summary>
                <para>If implemented, specifies the entry selected in the <b>Label Products</b> drop-down list.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Labels.LabelProduct"/> object.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.UpdateLabelInformation">
            <summary>
                <para>If implemented, updates label information displayed in the dedicated editors.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView">

            <summary>
                <para>Obsolete. This page is no longer used in the current Data Source Wizard implementation.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.ActiveAvailableColumnChanged">
            <summary>
                <para>Occurs when the collection of the columns currently selected in the list of available columns is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.ActiveAvailableDataMemberNode">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.ActiveSelectedColumns">
            <summary>
                <para>If implemented, provides access to a collection of the items selected in the list of selected columns.
</para>
            </summary>
            <value>An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.
</value>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.ActiveSelectedColumnsChanged">
            <summary>
                <para>Occurs when the collection of the columns currently selected in the list of selected columns is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.AddColumnClicked">
            <summary>
                <para>Occurs when the <b>Add Column</b> button is clicked on the <b>Select Columns</b> page of the Report Wizard for a hierarchical data source.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.EnableAddColumnButton(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Add Column</b> button on the <b>Select Columns</b> page of the WPF Report Wizard for a hierarchical data source.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.EnableRemoveAllColumnsButton(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Remove All Columns</b> button on the <b>Select Columns</b> page of the WPF Report Wizard for a hierarchical data source.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.EnableRemoveColumnsButton(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Remove Columns</b> button on the <b>Select Columns</b> page of the WPF Report Wizard for a hierarchical data source.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.FillSelectedColumns(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
            <summary>
                <para>If implemented, populates the list of selected columns.
</para>
            </summary>
            <param name="columns">
		An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.RemoveAllColumnsClicked">
            <summary>
                <para>Occurs when the <b>Remove All Columns</b> button is clicked on the <b>Select Columns</b> page of the Report Wizard for a hierarchical data source.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.RemoveColumnsClicked">
            <summary>
                <para>Occurs when the <b>Remove Columns</b> button is clicked on the <b>Select Columns</b> page of the Report Wizard for a hierarchical data source.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.RootNodes">
            <summary>
                <para>If implemented, provides access to a collection of hierarchical data source root nodes

</para>
            </summary>
            <value>An object implementing the <see cref="T:System.Collections.IList"/> interface.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.ShowWaitIndicator(System.Boolean)">
            <summary>
                <para>If implemented, shows or hides the wait indicator on a wizard page.
</para>
            </summary>
            <param name="show">
		<b>true</b> to show the wait indicator; otherwise <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.ISelectDataSourcePageView"/> interface instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView.FillDataSourceList(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>If implemented, populates the list of available data sources.
</para>
            </summary>
            <param name="dataSources">
		A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/> objects.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView.SelectedDataSourceChanged">
            <summary>
                <para>Occurs when the selected item in the <b>Available items</b> list is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView.SelectedDataSourceName">
            <summary>
                <para>If implemented, specifies the data source selected in the <b>Available items</b> list.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView.ShowWaitIndicator(System.Boolean)">
            <summary>
                <para>If implemented, shows or hides the wait indicator on a wizard page.
</para>
            </summary>
            <param name="show">
		<b>true</b> to show the wait indicator; otherwise <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView">

            <summary>
                <para>Obsolete. This page is no longer used in the current Report Wizard implementation.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView.FillTables(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>If implemented, populates the <b>Tables</b> node of the <b>Available items</b> list.
</para>
            </summary>
            <param name="tables">
		A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> objects.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView.FillViews(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>If implemented, populates the <b>Views</b> node of the <b>Available items</b> list.
</para>
            </summary>
            <param name="views">
		A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> objects.

            </param>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView.SelectedDataMemberChanged">
            <summary>
                <para>Occurs when the active record in the <b>Available items</b> list is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView.SelectedDataMemberName">
            <summary>
                <para>If implemented, specifies the data member selected in the <b>Available items</b> list.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> object.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView.ShowWaitIndicator(System.Boolean)">
            <summary>
                <para>If implemented, shows or hides the wait indicator on a wizard page.
</para>
            </summary>
            <param name="show">
		<b>true</b> to show the wait indicator; otherwise <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.ISelectColumnsPageView"/> interface instead.

</para>
            </summary>

        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.ActiveColumnsChanged">
            <summary>
                <para>Occurs when the collection of the currently selected columns is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.AddAllColumnsClicked">
            <summary>
                <para>Occurs when the <b>Add All Columns</b> button is clicked on a wizard page.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.AddColumnsClicked">
            <summary>
                <para>Occurs when the <b>Add Columns</b> button is clicked on a wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.EnableAddAllColumnsButton(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Add All Columns</b> button on a wizard page.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.EnableAddColumnsButton(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Add Columns</b> button on a wizard page.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.EnableRemoveAllColumnsButton(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Remove All Columns</b> button on a wizard page.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.EnableRemoveColumnsButton(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Remove Columns</b> button on a wizard page.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.FillAvailableColumns(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
            <summary>
                <para>If implemented, populates the list of available commands.
</para>
            </summary>
            <param name="columns">
		An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects, specifying the columns to be added to the list.


            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.FillSelectedColumns(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
            <summary>
                <para>If implemented, populates the list of selected columns.
</para>
            </summary>
            <param name="columns">
		An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects, specifying the columns to be added to the list.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.GetActiveAvailableColumns">
            <summary>
                <para>If implemented, gets a collection of the items selected in the list of available columns.
</para>
            </summary>
            <returns>An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.GetActiveSelectedColumns">
            <summary>
                <para>If implemented, gets a collection of the items selected in the list of selected columns.
</para>
            </summary>
            <returns>An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.
</returns>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.RemoveAllColumnsClicked">
            <summary>
                <para>Occurs when the <b>Remove All Columns</b> button is clicked on a wizard page.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.RemoveColumnsClicked">
            <summary>
                <para>Occurs when the <b>Remove Columns</b> button is clicked on a wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.ShowWaitIndicator(System.Boolean)">
            <summary>
                <para>If implemented, shows or hides the wait indicator on a wizard page.
</para>
            </summary>
            <param name="show">
		<b>true</b> to show the wait indicator; otherwise <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.ICustomizeLabelPageView"/> interface instead.

</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.BottomMargin">
            <summary>
                <para>If implemented, specifies the value of the <b>Bottom Margin</b> editor.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.FillPageSizeList(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>If implemented, populates the list of the available page sizes.
</para>
            </summary>
            <param name="paperKinds">
		A collection of <see cref="T:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo"/> objects.

            </param>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.Height">
            <summary>
                <para>If implemented, specifies the value of the <b>Label Height</b> editor.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.HorizontalPitch">
            <summary>
                <para>If implemented, specifies the value of the <b>Horizontal Pitch</b> editor.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.LabelInformationChanged">
            <summary>
                <para>Occurs when label information displayed in the dedicated editors is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.LeftMargin">
            <summary>
                <para>If implemented, specifies the value of the <b>Left Margin</b> editor.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.RightMargin">
            <summary>
                <para>If implemented, specifies the value of the <b>Right Margin</b> editor.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.SelectedPaperKindChanged">
            <summary>
                <para>Occurs when the entry selected in the <b>Page Size</b> drop-down list is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.SelectedPaperKindId">
            <summary>
                <para>If implemented, specifies the entry selected in the <b>Page Size</b> drop-down list.
</para>
            </summary>
            <value>An integer value that is an index of the selected entry.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.TopMargin">
            <summary>
                <para>If implemented, specifies the value of the <b>Top Margin</b> editor.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.Unit">
            <summary>
                <para>If implemented, specifies the state of the <b>Inch</b> and <b>Millimeter</b> radio buttons.
</para>
            </summary>
            <value>A value that specifies the state of the <b>Inch</b> and <b>Millimeter</b> radio buttons.
</value>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.UnitChanged">
            <summary>
                <para>Occurs when the state of the <b>Inch</b> and <b>Millimeter</b> radio buttons is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.VerticalPitch">
            <summary>
                <para>If implemented, specifies the value of the <b>Vertical Pitch</b> editor.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.Width">
            <summary>
                <para>If implemented, specifies the value of the <b>Label Width</b> editor.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IChooseSummaryOptionsPageView"/> interface instead.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView.FillSummaryOptions(DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions[])">
            <summary>
                <para>If implemented, fills the summary options check boxes on the Specify Summary Options page of the Report Wizard.
</para>
            </summary>
            <param name="summaryOptions">
		An array of <see cref="T:DevExpress.XtraReports.Wizards.ColumnInfoSummaryOptions"/> objects that contain information required to calculate summary functions.

            </param>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView.IgnoreNullValues">
            <summary>
                <para>If implemented, specifies the state of the <b>Ignore null values</b> check box.
</para>
            </summary>
            <value><b>true</b>, to activate the check box; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView.ShowWaitIndicator(System.Boolean)">
            <summary>
                <para>If implemented, shows or hides the wait indicator on a wizard page.
</para>
            </summary>
            <param name="show">
		<b>true</b> to show the wait indicator; otherwise <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportTypePageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IChooseReportTypePageView"/> interface instead.

</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportTypePageView.ReportType">
            <summary>
                <para>If implemented, specifies the selected report type.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportType"/> enumeration value.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportStylePageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IChooseReportStylePageView"/> interface instead.

</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportStylePageView.ReportStyleId">
            <summary>
                <para>If implemented, specifies the report visual style.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportStyleId"/> enumeration value.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IAddGroupingLevelPageView"/> interface instead.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.ActiveAvailableColumnsChanged">
            <summary>
                <para>Occurs when the active record in the list of the available columns is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.ActiveGroupingLevelChanged">
            <summary>
                <para>Occurs when the active record in the list of grouping levels is changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.AddGroupingLevelClicked">
            <summary>
                <para>Occurs when the <b>Add Grouping Level</b> button is clicked on a wizard page.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.CombineGroupingLevelClicked">
            <summary>
                <para>Occurs when the <b>Combine Grouping Level</b> button is clicked on a wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.EnableAddGroupingLevelButton(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Add Grouping Level</b> button on a wizard page.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.EnableCombineGroupingLevelButton(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Combine Grouping Level</b> button on a wizard page.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.EnableGroupingLevelDown(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Move Grouping Level Down</b> button on a wizard page.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.EnableGroupingLevelUp(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Move Grouping Level Up</b> button on a wizard page.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.EnableRemoveGroupingLevelButton(System.Boolean)">
            <summary>
                <para>If implemented, activates or deactivates the <b>Remove Grouping Level</b> button on a wizard page.
</para>
            </summary>
            <param name="enable">
		<b>true</b> to activate the button, <b>false</b> to deactivate the button.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.FillAvailableColumns(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
            <summary>
                <para>If implemented, populates the list of available columns.
</para>
            </summary>
            <param name="columns">
		An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.FillGroupingLevels(DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo[])">
            <summary>
                <para>If implemented, populates the list of grouping levels.
</para>
            </summary>
            <param name="groupingLevels">
		An array of <see cref="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo"/> objects.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.GetActiveAvailableColumns">
            <summary>
                <para>If implemented, gets an array of records selected in the list of available columns.
</para>
            </summary>
            <returns>An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.GetActiveGroupingLevel">
            <summary>
                <para>If implemented, gets the record selected in the list of grouping levels.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo"/> object.
</returns>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.GroupingLevelDownClicked">
            <summary>
                <para>Occurs when the <b>Move Grouping Level Down</b> button is clicked on a wizard page.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.GroupingLevelUpClicked">
            <summary>
                <para>Occurs when the <b>Move Grouping Level Up</b> button is clicked on a wizard page.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.RemoveGroupingLevelClicked">
            <summary>
                <para>Occurs when the <b>Remove Grouping Level</b> button is clicked on a wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.SetActiveGroupingLevel(DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo)">
            <summary>
                <para>If implemented, changes the active record in the list of grouping levels.
</para>
            </summary>
            <param name="groupingLevel">
		A <see cref="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.ShowWaitIndicator(System.Boolean)">
            <summary>
                <para>If implemented, shows or hides the wait indicator on a wizard page.
</para>
            </summary>
            <param name="show">
		<b>true</b> to show the wait indicator; otherwise <b>false</b>.

            </param>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.ColumnInfoCache"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache.#ctor">
            <summary>
                <para>Initializes a new instance of the ColumnInfoCache class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache.Columns">
            <summary>
                <para>Specifies the collection of selected data columns while running the Report Wizard. 
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.IColumnInfoCache"/> interface instead.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache.Columns">
            <summary>
                <para>Specifies the collection of selected data columns while running the Report Wizard. 
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.SetReportTitlePage`1"/> class instead.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISetReportTitlePageView)">
            <summary>
                <para>Initializes a new instance of the SetReportTitlePage&lt;TModel&gt; class with the specified view.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISetReportTitlePageView"/> interface. 

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1.FinishEnabled">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Finish</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1">

            <summary>
                <para>Obsolete. This page is no longer used in the current Data Source Wizard implementation.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView,DevExpress.Data.Browsing.Design.PickManagerBase,DevExpress.Data.XtraReports.Wizard.IColumnInfoCache)">
            <summary>
                <para>Initializes a new instance of the SelectHierarchicalDataSourceColumnsPage&lt;TModel&gt; class with the specified settings.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView"/> interface. 

            </param>
            <param name="pickManager">
		A <see cref="T:DevExpress.Data.Browsing.Design.PickManagerBase"/> descendant.


            </param>
            <param name="columnInfoCache">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache"/> interface. 

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.FinishEnabled">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Finish</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.GetNextPageType">
            <summary>
                <para>Returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1">

            <summary>
                <para>Obsolete. This page is no longer used in the current Report Wizard implementation.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView,DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient)">
            <summary>
                <para>Initializes a new instance of the SelectDataSourcePage&lt;TModel&gt; class with the specified settings.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView"/> interface. 

            </param>
            <param name="client">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1.GetNextPageType">
            <summary>
                <para>Returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1">

            <summary>
                <para>Obsolete. This page is no longer used in the current Report Wizard implementation.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView,DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient)">
            <summary>
                <para>Initializes a new instance of the SelectDataMemberPage&lt;TModel&gt; class with the specified settings.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView"/> interface. 

            </param>
            <param name="client">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient"/> interface. 

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1.GetNextPageType">
            <summary>
                <para>Returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.SelectColumnsPage`1"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView,DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient,DevExpress.Data.XtraReports.Wizard.IColumnInfoCache)">
            <summary>
                <para>Initializes a new instance of the SelectColumnsPage&lt;TModel&gt; class with the specified settings.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView"/> interface.

            </param>
            <param name="client">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient"/> interface.

            </param>
            <param name="columnInfoCache">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache"/> object.)

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.FinishEnabled">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Finish</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.GetNextPageType">
            <summary>
                <para>Returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.ReportWizardServiceClientPage`2">

            <summary>
                <para>Obsolete. This page is no longer used in the current Report Wizard implementation.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ReportWizardServiceClientPage`2.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ReportWizardServiceClientPage`2.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.CustomizeLabelPage`1"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView,DevExpress.Data.XtraReports.Labels.ILabelProductRepository)">
            <summary>
                <para>Initializes a new instance of the CustomizeLabelPage&lt;TModel&gt; class with the specified settings.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView"/> interface.

            </param>
            <param name="repository">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Labels.ILabelProductRepository"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository"/> object.)


            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1.FinishEnabled">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Finish</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.ChooseReportTypePage`1"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.IChooseReportTypePageView)">
            <summary>
                <para>Initializes a new instance of the ChooseReportTypePage&lt;TModel&gt; class with the specified view.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportTypePageView"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1.GetNextPageType">
            <summary>
                <para>Returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.ChooseReportStylePage`1"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.IChooseReportStylePageView)">
            <summary>
                <para>Initializes a new instance of the ChooseReportStylePage&lt;TModel&gt; class with the specified view.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportStylePageView"/> interface.


            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.FinishEnabled">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Finish</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.GetNextPageType">
            <summary>
                <para>Returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.ChooseReportLayoutPage`1"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView)">
            <summary>
                <para>Initializes a new instance of the ChooseReportLayoutPage&lt;TModel&gt; class with the specified view.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.FinishEnabled">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Finish</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.GetNextPageType">
            <summary>
                <para>Returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.AddGroupingLevelPage`1"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView,DevExpress.Data.XtraReports.Wizard.IColumnInfoCache)">
            <summary>
                <para>Initializes a new instance of the AddGroupingLevelPage&lt;TModel&gt; class with the specified settings.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView"/> interface.

            </param>
            <param name="columnInfoCache">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache"/> object.)

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.FinishEnabled">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Finish</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.GetNextPageType">
            <summary>
                <para>Returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind">

            <summary>
                <para>Specifies the prototype string format for the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/>.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind.Default">
            <summary>
                <para>The current string format is based on the default string format.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind.GenericDefault">
            <summary>
                <para>The current string format is based on the generic default string format.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind.GenericTypographic">
            <summary>
                <para>The current string format is based on the generic typographic string format.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.WizardFramework.WizardPageErrorEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Data.WizardFramework.IWizardPage`1.Error"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.WizardFramework.WizardPageErrorEventArgs.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the WizardPageErrorEventArgs class with the specified error message.
</para>
            </summary>
            <param name="errorMessage">
		A <see cref="T:System.String"/> value, specifying the error message.

            </param>


        </member>
        <member name="P:DevExpress.Data.WizardFramework.WizardPageErrorEventArgs.ErrorMessage">
            <summary>
                <para>Specifies the text of an error message.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value, specifying the error message.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.ConnectionProviderSql">

            <summary>
                <para>Implements the base functionality for  SQL-based data store adapters, including the <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> and other adapters listed in the Database Systems Supported by XPO topic.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.BraceJoin">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.CanCreateDatabase">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.CanCreateSchema">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CollectTablesToCreate(System.Collections.ICollection)">
            <summary>
                <para> </para>
            </summary>
            <param name="tables">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ComposeSafeColumnName(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="columnName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ComposeSafeConstraintName(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="constraintName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ComposeSafeSchemaName(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="tableName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ComposeSafeTableName(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="tableName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.Connection">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.ConnectionString">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreateColumn(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn)">
            <summary>
                <para> </para>
            </summary>
            <param name="table">
		 
            </param>
            <param name="column">
		 
            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreateCommand">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreateForeignKey(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBForeignKey)">
            <summary>
                <para> </para>
            </summary>
            <param name="table">
		 
            </param>
            <param name="fk">
		 
            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreateIndex(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBIndex)">
            <summary>
                <para> </para>
            </summary>
            <param name="table">
		 
            </param>
            <param name="index">
		 
            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreatePrimaryKey(DevExpress.Xpo.DB.DBTable)">
            <summary>
                <para> </para>
            </summary>
            <param name="table">
		 
            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreateTable(DevExpress.Xpo.DB.DBTable)">
            <summary>
                <para> </para>
            </summary>
            <param name="table">
		 
            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.CustomFunctionOperators">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.DefaultCommandTimeout">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.EnableConnectionStringArgumentEscaping">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.EscapeConnectionStringArgument(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="argument">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExecSql(DevExpress.Xpo.DB.Helpers.Query)">
            <summary>
                <para> </para>
            </summary>
            <param name="query">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExplicitBeginTransaction(System.Data.IsolationLevel)">
            <summary>
                <para> </para>
            </summary>
            <param name="il">
		 
            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExplicitBeginTransaction">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExplicitCommitTransaction">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExplicitRollbackTransaction">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatBinary(DevExpress.Data.Filtering.BinaryOperatorType,System.String,System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="operatorType">
		 
            </param>
            <param name="leftOperand">
		 
            </param>
            <param name="rightOperand">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatColumn(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="columnName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatColumn(System.String,System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="columnName">
		 
            </param>
            <param name="tableAlias">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatColumnSafe(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="columnName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatConstraint(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="constraintName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatConstraintSafe(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="constraintName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatDelete(System.String,System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="tableName">
		 
            </param>
            <param name="whereClause">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatFunction(DevExpress.Xpo.DB.Helpers.ProcessParameter,DevExpress.Data.Filtering.FunctionOperatorType,System.Object[])">
            <summary>
                <para> </para>
            </summary>
            <param name="processParameter">
		 
            </param>
            <param name="operatorType">
		 
            </param>
            <param name="operands">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatFunction(DevExpress.Data.Filtering.FunctionOperatorType,System.String[])">
            <summary>
                <para> </para>
            </summary>
            <param name="operatorType">
		 
            </param>
            <param name="operands">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatInsert(System.String,System.String,System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="tableName">
		 
            </param>
            <param name="fields">
		 
            </param>
            <param name="values">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatInsertDefaultValues(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="tableName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatOrder(System.String,DevExpress.Xpo.DB.SortingDirection)">
            <summary>
                <para> </para>
            </summary>
            <param name="sortProperty">
		 
            </param>
            <param name="direction">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatOuterApply(System.String,System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="sql">
		 
            </param>
            <param name="alias">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatSelect(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
                <para> </para>
            </summary>
            <param name="selectedPropertiesSql">
		 
            </param>
            <param name="fromSql">
		 
            </param>
            <param name="whereSql">
		 
            </param>
            <param name="orderBySql">
		 
            </param>
            <param name="groupBySql">
		 
            </param>
            <param name="havingSql">
		 
            </param>
            <param name="skipSelectedRecords">
		 
            </param>
            <param name="topSelectedRecords">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatSelect(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
                <para> </para>
            </summary>
            <param name="selectedPropertiesSql">
		 
            </param>
            <param name="fromSql">
		 
            </param>
            <param name="whereSql">
		 
            </param>
            <param name="orderBySql">
		 
            </param>
            <param name="groupBySql">
		 
            </param>
            <param name="havingSql">
		 
            </param>
            <param name="topSelectedRecords">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatTable(System.String,System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="schema">
		 
            </param>
            <param name="tableName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatTable(System.String,System.String,System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="schema">
		 
            </param>
            <param name="tableName">
		 
            </param>
            <param name="tableAlias">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatTableSafe(DevExpress.Xpo.DB.DBTable)">
            <summary>
                <para> </para>
            </summary>
            <param name="table">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatUnary(DevExpress.Data.Filtering.UnaryOperatorType,System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="operatorType">
		 
            </param>
            <param name="operand">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatUpdate(System.String,System.String,System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="tableName">
		 
            </param>
            <param name="sets">
		 
            </param>
            <param name="whereClause">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GenerateStoredProcedures(DevExpress.Xpo.DB.DBTable,System.String@)">
            <summary>
                <para> </para>
            </summary>
            <param name="table">
		 
            </param>
            <param name="dropLines">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GenerateStoredProceduresInfoOnce">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetColumnType(System.Data.DbType,System.Boolean)">
            <summary>
                <para> </para>
            </summary>
            <param name="type">
		 
            </param>
            <param name="suppressExceptionOnUnknown">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetCustomFunctionOperator(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="functionName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetDbType(DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para> </para>
            </summary>
            <param name="type">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetParameterName(DevExpress.Data.Filtering.OperandValue,System.Int32,System.Boolean@)">
            <summary>
                <para> </para>
            </summary>
            <param name="parameter">
		 
            </param>
            <param name="index">
		 
            </param>
            <param name="createParameter">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn)">
            <summary>
                <para> </para>
            </summary>
            <param name="table">
		 
            </param>
            <param name="column">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetStorageTables(System.String[])">
            <summary>
                <para> </para>
            </summary>
            <param name="tables">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetStorageTablesList(System.Boolean)">
            <summary>
                <para> </para>
            </summary>
            <param name="includeViews">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetStoredProcedures">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetTableSchema(DevExpress.Xpo.DB.DBTable,System.Boolean,System.Boolean)">
            <summary>
                <para> </para>
            </summary>
            <param name="table">
		 
            </param>
            <param name="checkIndexes">
		 
            </param>
            <param name="checkForeignKeys">
		 
            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.GlobalDefaultCommandTimeout">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.IdentityColumnMagicName">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.MaxDeadLockRetryDelayMilliseconds">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.MaxDeadLockTryCount">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
            <summary>
                <para> </para>
            </summary>
            <param name="dmlStatements">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.NativeOuterApplySupported">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.NativeSkipTakeSupported">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="E:DevExpress.Xpo.DB.ConnectionProviderSql.Reconnected">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.RegisterCustomFunctionOperator(DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable)">
            <summary>
                <para> </para>
            </summary>
            <param name="customFunction">
		 
            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.RegisterCustomFunctionOperators(System.Collections.Generic.ICollection`1)">
            <summary>
                <para> </para>
            </summary>
            <param name="customFunctions">
		 
            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
            <summary>
                <para> </para>
            </summary>
            <param name="selects">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.SupportNamedParameters">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.SyncRoot">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.Transaction">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.UnregisterCustomFunctionOperator(DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable)">
            <summary>
                <para> </para>
            </summary>
            <param name="customFunction">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.UnregisterCustomFunctionOperator(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="functionName">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
            <summary>
                <para> </para>
            </summary>
            <param name="dontCreateIfFirstTableNotExist">
		 
            </param>
            <param name="tables">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.UseLegacyTimeSpanSupport">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Utils.UrlAccessSecurityLevel">

            <summary>
                <para>Lists the values specifying whether a report control allows loading images using the "file://" protocol.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.UrlAccessSecurityLevel.Custom">
            <summary>
                <para>Enables loading of images from custom directories (defined using the <see cref="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.RegisterCustomBaseDirectories"/> or <see cref="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.RegisterCustomCallback"/> method).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.UrlAccessSecurityLevel.FilesFromBaseDirectory">
            <summary>
                <para>Enables loading of images from an application's working directory (defined by the <a href="https://msdn.microsoft.com/en-us/library/system.appdomain.basedirectory%28v=vs.110%29.aspx">AppDomain.CurrentDomain.BaseDirectory</a> property).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.UrlAccessSecurityLevel.Unrestricted">
            <summary>
                <para>Enables loading of any image from any directory.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.UrlAccessSecurityLevel.WebUrlsOnly">
            <summary>
                <para>Forbids loading images using the "file://" protocol (only the "http://", "https://" and "ftp://" protocols are supported).
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.UrlAccessSecurityLevelSetting">

            <summary>
                <para>Specifies the security settings for resolving URL's in a web application.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.RegisterCustomBaseDirectories(System.String[])">
            <summary>
                <para>Enables using the "file://" protocol for loading images to the specified directories.
</para>
            </summary>
            <param name="baseDirectories">
		An array of <see cref="T:System.String"/> values, specifying the custom directories.

            </param>
            <returns><b>true</b>, if loading images to custom directories is enabled; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.RegisterCustomCallback(System.Func`2)">
            <summary>
                <para>Enables loading images to the protocols defined in the specified callback.
</para>
            </summary>
            <param name="customCallback">
		A function, specifying a custom callback.

            </param>
            <returns><b>true</b>, if loading images to custom directories is enabled; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.SafeSetSecurityLevel(DevExpress.Utils.UrlAccessSecurityLevel)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="value">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Utils.UrlAccessSecurityLevelSetting.SecurityLevel">
            <summary>
                <para>Specifies whether a report control allows loading images using the "file://" protocol.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.UrlAccessSecurityLevel"/> enumeration value.
</value>


        </member>
        <member name="T:DevExpress.Data.IBoundProperty">

            <summary>
                <para>If implemented, provides an abstraction for an object's bindable property.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.IBoundProperty.Children">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Data.IBoundProperty.DisplayName">
            <summary>
                <para>Provides access to the property display name.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.IBoundProperty.HasChildren">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Data.IBoundProperty.IsAggregate">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Data.IBoundProperty.IsList">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Data.IBoundProperty.Name">
            <summary>
                <para>Provides access to the property name.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.IBoundProperty.Parent">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Data.IBoundProperty.Type">
            <summary>
                <para>Provides access to the property type.
</para>
            </summary>
            <value>A <see cref="T:System.Type"/> object.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError">

            <summary>
                <para>Provides information about an error that occurred during criteria validation.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the CriteriaValidatorError class with the specified error text.
</para>
            </summary>
            <param name="text">
		A <see cref="T:System.String"/> value, specifying the error text. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError.Text"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError.Text">
            <summary>
                <para>Returns the error message.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value, specifying the error text.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.HorizontalContentSplitting">

            <summary>
                <para>Lists the available horizontal content splitting modes.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.HorizontalContentSplitting.Exact">
            <summary>
                <para>When the brick dimensions do not fit into the bottom page margin, the rest of the brick content is split across two pages.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.HorizontalContentSplitting.Smart">
            <summary>
                <para>When the brick dimensions do not fit into the bottom page margin, the brick content is moved to a new page in its entirety.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.SelectLabelTypePage`1"/> class instead.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView,DevExpress.Data.XtraReports.Labels.ILabelProductRepository)">
            <summary>
                <para>Initializes a new instance of the SelectLabelTypePage&lt;TModel&gt; class with the specified settings.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView"/> interface. 


            </param>
            <param name="repository">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Labels.ILabelProductRepository"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository"/> object.)


            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.FinishEnabled">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Finish</b> button is  enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.GetNextPageType">
            <summary>
                <para>Returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1">

            <summary>
                <para>Provides data for the corresponding events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1.#ctor(System.Object,System.Exception,System.Boolean,System.Object)">
            <summary>
                <para>Initializes a new instance of the ScalarOperationCompletedEventArgs&lt;T&gt; class with the specified settings.
</para>
            </summary>
            <param name="result">
		A <see cref="T:System.Object"/> value. This value is assigned to the <see cref="P:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1.Result"/> property.

            </param>
            <param name="error">
		A <see cref="T:System.Exception"/> value.

            </param>
            <param name="cancelled">
		<b>true</b> if the operation has been cancelled; otherwise <b>false</b>.

            </param>
            <param name="userState">
		A <see cref="T:System.Object"/> value.

            </param>


        </member>
        <member name="P:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1.Result">
            <summary>
                <para>Returns the scalar operation result.
</para>
            </summary>
            <value>A generic value.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.DataProviders.DataMemberType">

            <summary>
                <para>Lists the available data member types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.XtraReports.DataProviders.DataMemberType.Query">
            <summary>
                <para>The data member is a query.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.DataProviders.DataMemberType.StoredProcedure">
            <summary>
                <para>The data member is a stored procedure.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.DataProviders.DataMemberType.Table">
            <summary>
                <para>The data member is a table.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.DataProviders.DataMemberType.View">
            <summary>
                <para>The data member is a view.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator">

            <summary>
                <para>Enables you to manage the collection of errors found during criteria validation in the Expression Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.#ctor(System.Collections.Generic.List`1)">
            <summary>
                <para>Initializes a new instance of the ErrorsEvaluatorCriteriaValidator class with the specified collection of bound properties.
</para>
            </summary>
            <param name="properties">
		A collection of objects implementing the <see cref="T:DevExpress.Data.IBoundProperty"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Clear">
            <summary>
                <para>Removes all items from the collection of validation errors.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Count">
            <summary>
                <para>Returns the number of errors found in an expression.
</para>
            </summary>
            <value>An integer value, specifying the number of errors found in an expression.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Item(System.Int32)">
            <summary>
                <para>Returns the specified item from the collection of validation errors.
</para>
            </summary>
            <param name="index">
		An integer value, specifying the item's position within the collection.

            </param>
            <value>A <see cref="T:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError"/> object.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Validate(System.Collections.IList)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="operands">
		An object implementing the <see cref="T:System.Collections.IList"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Validate(System.String)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="filter">
		A <see cref="T:System.String"/> value, specifying the filter string.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Validate(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.GroupOperator)">
            <summary>
                <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.GroupOperator"/>.
</para>
            </summary>
            <param name="theOperator">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.OperandProperty)">
            <summary>
                <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.OperandProperty"/>.
</para>
            </summary>
            <param name="theOperand">
		An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.FunctionOperator)">
            <summary>
                <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/>.
</para>
            </summary>
            <param name="theOperator">
		A <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.BetweenOperator)">
            <summary>
                <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/>.
</para>
            </summary>
            <param name="theOperator">
		A <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.UnaryOperator)">
            <summary>
                <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/>.
</para>
            </summary>
            <param name="theOperator">
		A <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.InOperator)">
            <summary>
                <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.InOperator"/>.
</para>
            </summary>
            <param name="theOperator">
		An <see cref="T:DevExpress.Data.Filtering.InOperator"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.AggregateOperand)">
            <summary>
                <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/>.
</para>
            </summary>
            <param name="theOperand">
		An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.BinaryOperator)">
            <summary>
                <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/>.
</para>
            </summary>
            <param name="theOperator">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.JoinOperand)">
            <summary>
                <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.JoinOperand"/>.
</para>
            </summary>
            <param name="theOperand">
		A <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.OperandValue)">
            <summary>
                <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.OperandValue"/>.
</para>
            </summary>
            <param name="theOperand">
		An <see cref="T:DevExpress.Data.Filtering.OperandValue"/> object.

            </param>


        </member>
        <member name="T:DevExpress.Utils.Filtering.Internal.FilterUIElementResXLocalizer">

            <summary>
                <para> </para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Filtering.Internal.FilterUIElementResXLocalizer.#ctor">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind">

            <summary>
                <para>Lists the items for which automatic completion is available in the Expression Editor.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind.Column">
            <summary>
                <para>The item is a data column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind.Function">
            <summary>
                <para>The item is a function.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind.Operator">
            <summary>
                <para>The item is an operator.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind.Parameter">
            <summary>
                <para>The item is a parameter.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorPresenter">

            <summary>
                <para>If implemented, provides the Presenter functionality to an Expression Editor.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorPresenter.Context">
            <summary>
                <para>Gets an object enabling customization of the Expression Editor. 
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> object.
</value>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo">

            <summary>
                <para>Provides information about an operator listed in the Expression Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the OperatorInfo class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the OperatorInfo class with the specified category.
</para>
            </summary>
            <param name="category">
		A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo.#ctor(DevExpress.Data.Controls.ExpressionEditor.OperatorInfo)">
            <summary>
                <para>Initializes a new instance of the OperatorInfo class with the specified prototype.

</para>
            </summary>
            <param name="other">
		A OperatorInfo object, specifying a prototype for a new OperatorInfo instance.

            </param>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo">

            <summary>
                <para>Provides information about a function listed in the Expression Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.#ctor(DevExpress.Data.Controls.ExpressionEditor.FunctionInfo)">
            <summary>
                <para>Initializes a new instance of the FunctionInfo class with the specified prototype.

</para>
            </summary>
            <param name="other">
		A FunctionInfo object, specifying a prototype for a new FunctionInfo instance.

            </param>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.#ctor(DevExpress.Data.Filtering.ICustomFunctionOperator,System.String)">
            <summary>
                <para>Initializes a new instance of the FunctionInfo class with the specified settings.
</para>
            </summary>
            <param name="functionOperator">
		An object implementing the <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> interface. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.CustomFunctionOperator"/> property.

            </param>
            <param name="category">
		A <see cref="T:System.String"/> value, specifying the item category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.FunctionCategory"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.#ctor(DevExpress.Data.Filtering.ICustomFunctionOperator)">
            <summary>
                <para>Initializes a new instance of the FunctionInfo class with the specified function operator.
</para>
            </summary>
            <param name="functionOperator">
		An object implementing the <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> interface. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.CustomFunctionOperator"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the FunctionInfo class with the specified category.
</para>
            </summary>
            <param name="category">
		A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the FunctionInfo class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.ArgumentTypes">
            <summary>
                <para>Specifies the type declarations of function arguments.
</para>
            </summary>
            <value>An array of <see cref="T:System.Type"/> objects.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.CaretOffset">
            <summary>
                <para>Specifies the caret position after adding a function to an expression.
</para>
            </summary>
            <value>An integer value, specifying the number of symbols to the right of the caret position until the end of the function body.

</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.CustomFunctionOperator">
            <summary>
                <para>Specifies an object providing instructions required for evaluation of a function.
</para>
            </summary>
            <value>An object implementing the <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> interface.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.DisplayName">
            <summary>
                <para>Specifies the full name of a function in the Expression Editor (including the function syntax).
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.FunctionCategory">
            <summary>
                <para>Specifies the category to which a function belongs (e.g., "Math", "String" or "DateTime").
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.UsageSample">
            <summary>
                <para>Specifies the example illustrating the function syntax in the Expression Editor panel and tooltip.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value.
</value>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorOptionsBehavior">

            <summary>
                <para>Enables additional customization of the Expression Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorOptionsBehavior.#ctor">
            <summary>
                <para>Initializes a new instance of the ExpressionEditorOptionsBehavior class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorOptionsBehavior.CapitalizeFunctionNames">
            <summary>
                <para>Specifies whether or not to spell function names in uppercase.
</para>
            </summary>
            <value><b>true</b>, to spell function names in uppercase; <b>false</b>, to spell function names in camel case.
</value>


        </member>
        <member name="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext">

            <summary>
                <para>Enables customization of the Expression Editor.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.#ctor">
            <summary>
                <para>Initializes a new instance of the ExpressionEditorContext class with the default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.AutoCompleteItemsProvider">
            <summary>
                <para>Specifies an object providing a list of items suggested for automatic completion in the Expression Editor.
</para>
            </summary>
            <value>An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.IAutoCompleteItemsProvider"/> interface.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.ColorProvider">
            <summary>
                <para>Specifies an object providing a color scheme for painting expression elements in the Expression Editor.
</para>
            </summary>
            <value>An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorColorProvider"/> interface.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Columns">
            <summary>
                <para>Provides access to the collection of data columns available in the Expression Editor.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/> objects.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Constants">
            <summary>
                <para>Provides access to the collection of static constants available in the Expression Editor.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo"/> objects.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.CriteriaOperatorValidatorProvider">
            <summary>
                <para>Specifies the object that enables you to access the criteria validator assigned to an Expression Editor. 
</para>
            </summary>
            <value>An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ICriteriaOperatorValidatorProvider"/> interface.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Default">
            <summary>
                <para>Provides access to the default ExpressionEditorContext instance.
</para>
            </summary>
            <value>A ExpressionEditorContext object.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Functions">
            <summary>
                <para>Provides access to the collection of functions available in the Expression Editor.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo"/> objects.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Operators">
            <summary>
                <para>Provides access to the collection of operators available in the Expression Editor.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo"/> objects.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.OptionsBehavior">
            <summary>
                <para>Gets an object providing additional customization settings for the Expression Editor. 
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorOptionsBehavior"/> object.
</value>


        </member>
        <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Parameters">
            <summary>
                <para>Provides access to the collection of parameters available in the Expression Editor.
</para>
            </summary>
            <value>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo"/> objects.
</value>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.SpellCheckMode">

            <summary>
                <para>Lists available operation modes of the spell checker.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckMode.AsYouType">
            <summary>
                <para>Starts spelling check when you finish typing the word or move the cursor after changing it.This operation mode underlines the misspelled word and allows you to select a suggestion from the context menu, invoked by right-clicking the word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckMode.OnDemand">
            <summary>
                <para>Starts spelling check and invokes the spelling form for making corrections.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraSpellChecker.SpellCheckOperation">

            <summary>
                <para>Lists implemented spell checker operations.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.AddToDictionary">
            <summary>
                <para>Replaces a word in the text with the user input, and adds the replacement to the custom dictionary.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Cancel">
            <summary>
                <para>Stops the spelling checker operation, resets the checking strategy and closes the spelling form. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Change">
            <summary>
                <para>Replaces the current word in the text being checked with the suggested word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.ChangeAll">
            <summary>
                <para>Replaces all occurences of the current word in the text being checked with the suggested word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Custom">
            <summary>
                <para>This enumeration member is intended for internal use only.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Delete">
            <summary>
                <para>Deletes the current word from the text.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Ignore">
            <summary>
                <para>Disregards the current word and proceeds to the next one.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.IgnoreAll">
            <summary>
                <para>Disregards the current word and all its occurences in the text.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.None">
            <summary>
                <para>This enumeration member is intended for internal use only. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Options">
            <summary>
                <para>Invokes the spelling options form. After closing the form, re-checks the text with new spelling options starting with the last checked word.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Recheck">
            <summary>
                <para>Forces the spell checker to check the last checked word again.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.SilentChange">
            <summary>
                <para>Replaces the current word in the text being checked with the suggested word. For internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.SilentIgnore">
            <summary>
                <para>Disregards the current word and proceeds to the next one. For internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Undo">
            <summary>
                <para>Cancels the effect of the last operation, restoring the text to its previous state.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.LayoutUpgradeEventArgs">

            <summary>
                <para>Provides data for the events raised when upgrading a control's layout (e.g., <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.LayoutUpgrade"/>, <see cref="E:DevExpress.XtraBars.BarManager.LayoutUpgrade"/>, etc.).


</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.LayoutUpgradeEventArgs.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the LayoutUpgradeEventArgs class with the specified previous version.
</para>
            </summary>
            <param name="previousVersion">
		A <see cref="T:System.String"/> specifying the previous version number. This value is assigned to the <see cref="P:DevExpress.Utils.LayoutUpgradeEventArgs.PreviousVersion"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.LayoutUpgradeEventArgs.#ctor(System.String,System.Object[])">
            <summary>
                <para>Initializes a new instance of the LayoutUpgradeEventArgs class with the specified settings.
</para>
            </summary>
            <param name="previousVersion">
		A value used to initialize the <see cref="P:DevExpress.Utils.LayoutUpgradeEventArgs.PreviousVersion"/> property.

            </param>
            <param name="newHiddenItems">
		A value used to initialize the <see cref="P:DevExpress.Utils.LayoutUpgradeEventArgs.NewHiddenItems"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.LayoutUpgradeEventArgs.NewHiddenItems">
            <summary>
                <para>Returns an array of items that exist in the current control but do not exist in the layout being loaded. These items are hidden. This property is in effect for the <see cref="T:DevExpress.XtraLayout.LayoutControl"/>.
</para>
            </summary>
            <value>An array of items that exist in the current control but do not exist in the layout being loaded.
</value>


        </member>
        <member name="P:DevExpress.Utils.LayoutUpgradeEventArgs.PreviousVersion">
            <summary>
                <para>Returns the textual representation of the previous layout version.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> representing the previous version of the layout.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo">

            <summary>
                <para>Provides methods to return error information for a business object's properties.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo.GetError(DevExpress.XtraEditors.DXErrorProvider.ErrorInfo)">
            <summary>
                <para>When implemented by a class, this method returns information on an error associated with a business object.
</para>
            </summary>
            <param name="info">
		An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo"/> object that contains information on an error.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo.GetPropertyError(System.String,DevExpress.XtraEditors.DXErrorProvider.ErrorInfo)">
            <summary>
                <para>When implemented by a class, this method returns information on an error associated with a specific business object's property.
</para>
            </summary>
            <param name="propertyName">
		A string that identifies the name of the property for which information on an error is to be returned.

            </param>
            <param name="info">
		An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo"/> object that contains information on an error.

            </param>


        </member>
        <member name="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo">

            <summary>
                <para>Encapsulates error information on a specific property.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the ErrorInfo class with the default values.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.#ctor(System.String,DevExpress.XtraEditors.DXErrorProvider.ErrorType)">
            <summary>
                <para>Initializes a new instance of the ErrorInfo class with the specified error information.
</para>
            </summary>
            <param name="errorText">
		A string that specifies the error text. This value is used to initialize the <see cref="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorText"/> property.

            </param>
            <param name="errorType">
		An error type. This value is used to initialize the <see cref="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorType"/> property.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorText">
            <summary>
                <para>Gets or sets the error text associated with the current property name.
</para>
            </summary>
            <value>A string that represents the error text.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorType">
            <summary>
                <para>Gets or sets the type of error associated with the current property name.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorType"/> value that represents the error type.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.DXErrorProvider.ErrorType">

            <summary>
                <para>Enumerates error icon types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Critical">
            <summary>
                <para>The 'Critical Error' icon: 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Default">
            <summary>
                <para>The default error icon specified by the <see cref="P:DevExpress.XtraEditors.BaseEdit.ErrorIcon"/> property: 

<para>
The <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event is not raised when an error of the <b>Default</b> type is assigned to an editor.
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Information">
            <summary>
                <para>The 'Information' icon: 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.None">
            <summary>
                <para>Indicates that no error is associated with an editor or a cell.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User1">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User2">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User3">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User4">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User5">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User6">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User7">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User8">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User9">
            <summary>
                <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Warning">
            <summary>
                <para>The 'Warning' icon: 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.PaddingInfo">

            <summary>
                <para>Contains padding or margin information associated with a control or a brick.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified dpi value.
</para>
            </summary>
            <param name="dpi">
		A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(DevExpress.XtraPrinting.PaddingInfo,System.Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class and copies the settings from the object passed as the parameter according to the specified dpi value.

</para>
            </summary>
            <param name="src">
		A <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object whose settings are used to initialize the created object's properties.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Drawing.GraphicsUnit)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the dpi of the specified graphics unit.
</para>
            </summary>
            <param name="graphicsUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> value that specifies the graphics unit of the padding. The dpi value of the graphics unit is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified left, right, top, bottom and dpi values.

</para>
            </summary>
            <param name="left">
		An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.


            </param>
            <param name="right">
		An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.

            </param>
            <param name="top">
		An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.


            </param>
            <param name="bottom">
		An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.


            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified left, right, top and bottom values.


</para>
            </summary>
            <param name="left">
		An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.


            </param>
            <param name="right">
		An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.


            </param>
            <param name="top">
		An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.


            </param>
            <param name="bottom">
		An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified left, right, top and bottom values, and the dpi of the specified graphics unit.

</para>
            </summary>
            <param name="left">
		An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.


            </param>
            <param name="right">
		An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.

            </param>
            <param name="top">
		An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.


            </param>
            <param name="bottom">
		An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.


            </param>
            <param name="graphicsUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> value that specifies the graphics unit of the padding. The dpi value of the graphics unit is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified settings.
</para>
            </summary>
            <param name="all">
		An integer value, specifying the overall padding.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value, specifying the dpi.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.All">
            <summary>
                <para>Specifies padding for all the element's sides.
</para>
            </summary>
            <value>An integer value, representing the overall padding.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Bottom">
            <summary>
                <para>Gets or sets the padding value for the bottom edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the bottom edge.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Deflate(System.Drawing.RectangleF,System.Single)">
            <summary>
                <para>Deflates the specified rectangle by the rectangle of the current padding with the specified dpi.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Deflate(System.Drawing.SizeF,System.Single)">
            <summary>
                <para>Deflates the specified size by the size of the current padding with the specified dpi.

</para>
            </summary>
            <param name="size">
		A <see cref="T:System.Drawing.SizeF"/> value which specifies the size to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> value that represents the deflated size.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateHeight(System.Single,System.Single)">
            <summary>
                <para>Deflates the specified height value by the height of the current padding with the specified dpi.

</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the top and bottom padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated height.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateHeight(System.Single)">
            <summary>
                <para>Deflates the specified height value by the height of the current padding.

</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be deflated.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated height.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateWidth(System.Single,System.Single)">
            <summary>
                <para>Deflates the specified width value by the width of the current padding with the specified dpi.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be deflated.


            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value which should be applied to the left and right padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated width.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateWidth(System.Single)">
            <summary>
                <para>Deflates the specified width value by the width of the current padding.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be deflated.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated width.

</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Dpi">
            <summary>
                <para>Gets or sets the dpi value used to perform internal calculations.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value which represents the dpi value for this padding.
</value>


        </member>
        <member name="F:DevExpress.XtraPrinting.PaddingInfo.Empty">
            <summary>
                <para>Provides a PaddingInfo object with no padding.

</para>
            </summary>
            <returns>A <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object representing an empty padding.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current PaddingInfo instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current PaddingInfo instance; otherwise <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Equals(DevExpress.XtraPrinting.PaddingInfo)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current PaddingInfo instance.
</para>
            </summary>
            <param name="other">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current PaddingInfo instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current PaddingInfo object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Inflate(System.Drawing.SizeF,System.Single)">
            <summary>
                <para>Inflates the specified size by the size of the current padding with the specified dpi.

</para>
            </summary>
            <param name="size">
		A <see cref="T:System.Drawing.SizeF"/> value which specifies the size to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before inflating.


            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> value that represents the inflated size.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Inflate(System.Drawing.RectangleF,System.Single)">
            <summary>
                <para>Inflates the specified rectangle by the rectangle of the current padding with the specified dpi.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before inflating.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateHeight(System.Single,System.Single)">
            <summary>
                <para>Inflates the specified height value by the height of the current padding with the specified dpi.

</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the top and bottom padding values before inflating.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated height.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateHeight(System.Single)">
            <summary>
                <para>Inflates the specified height value by the height of the current padding.
</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be inflated.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated height.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateWidth(System.Single,System.Single)">
            <summary>
                <para>Inflates the specified width value by the width of the current padding with the specified dpi.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be inflated.


            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value which should be applied to the left and right padding values before inflating.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated width.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateWidth(System.Single)">
            <summary>
                <para>Inflates the specified width value by the width of the current padding.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be inflated.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated width.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.IsEmpty">
            <summary>
                <para>Determines whether the padding is empty (all padding values are null).
</para>
            </summary>
            <value><b>true</b> if the padding is empty; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Left">
            <summary>
                <para>Gets or sets the padding value for the left edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the left edge.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Right">
            <summary>
                <para>Gets or sets the padding value for the right edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the right edge.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.RotatePaddingCounterclockwise(System.Int32)">
            <summary>
                <para>Rotates padding values counterclockwise the specified number of times.
</para>
            </summary>
            <param name="numberOfTimes">
		An integer value which specifies the number of times for padding values to rotate.


            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Top">
            <summary>
                <para>Gets or sets the padding value for the top edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the top edge.
</value>


        </member>
        <member name="T:DevExpress.Utils.WordWrap">

            <summary>
                <para>Enumerates wrapping modes.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.WordWrap.Default">
            <summary>
                <para>Default wrapping mode. The actual wrapping mode is determined by a control.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.WordWrap.NoWrap">
            <summary>
                <para>The word wrapping feature is disabled.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.WordWrap.Wrap">
            <summary>
                <para>The word wrapping feature is enabled.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.UnableToOpenDatabaseException">

            <summary>
                <para>An exception that is thrown when a database either cannot be created or opened.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.UnableToOpenDatabaseException.#ctor(System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the UnableToOpenDatabaseException class with the specified settings.
</para>
            </summary>
            <param name="connectionString">
		A connection string that is used to connect to the database.

            </param>
            <param name="innerException">
		An <see cref="T:System.Exception"/> object that represents the inner error.

            </param>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException">

            <summary>
                <para>An exception that is thrown when a specific object cannot be created in a data store.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the UnableToCreateDBObjectException class with the specified settings.
</para>
            </summary>
            <param name="objectTypeName">
		A string that specifies the type of the object that cannot be created.

            </param>
            <param name="objectName">
		A string that specifies the name of the object.

            </param>
            <param name="parentObjectName">
		A string that specifies the name of the object's parent.

            </param>
            <param name="innerException">
		An <see cref="T:System.Exception"/> object that represents the inner error.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.ObjectName">
            <summary>
                <para>Gets the name of the object that cannot be created.
</para>
            </summary>
            <value>The name of the object that cannot be created.
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.ObjectTypeName">
            <summary>
                <para>Gets the type of the object that cannot be created.
</para>
            </summary>
            <value>A string that specifies the type of the object that cannot be created.
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.ParentObjectName">
            <summary>
                <para>Gets the name of the parent which contains the object that cannot be created.
</para>
            </summary>
            <value>The name of the parent.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException">

            <summary>
                <para>An exception that is thrown when an unexpected error occurs during the execution of a SQL statement.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException.#ctor(System.String,System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the SqlExecutionErrorException class with the specified settings.
</para>
            </summary>
            <param name="sql">
		A string that specifies the SQL statement that raised the exception.

            </param>
            <param name="parameters">
		A string that specifies the parameters for the SQL statement.

            </param>
            <param name="innerException">
		An <see cref="T:System.Exception"/> object that represents the inner error.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException.Parameters">
            <summary>
                <para>Gets a string that represents the parameters for the current SQL statement.

</para>
            </summary>
            <value>A string that represents the parameters for the SQL statement.
</value>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException.Sql">
            <summary>
                <para>Gets the SQL statement that raised the exception.
</para>
            </summary>
            <value>A string that specifies the SQL statement which raised the exception.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException">

            <summary>
                <para>An exception that is thrown when the storage schema doesn't match the structure of persistent objects and the schema cannot be modified.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the SchemaCorrectionNeededException class .
</para>
            </summary>
            <param name="sql">
		A SQL statement or the name of the object that raised this exception.


            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.#ctor(System.Exception)">
            <summary>
                <para>Initializes a new instance of the SchemaCorrectionNeededException class.
</para>
            </summary>
            <param name="innerException">
		 

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.#ctor(System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the SchemaCorrectionNeededException class.
</para>
            </summary>
            <param name="sql">
		 

            </param>
            <param name="innerException">
		 

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.Sql">
            <summary>
                <para>A SQL statement or the name of an object that raised this exception.
</para>
            </summary>
            <value>A SQL statement or the name of an object that raised this exception.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException">

            <summary>
                <para>An exception that is thrown when a connection provider cannot identify the type of column to create a column in a data store.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException.#ctor(System.Type)">
            <summary>
                <para>Initializes a new instance of the PropertyTypeMappingMissingException class with the specified settings.
</para>
            </summary>
            <param name="objtype">
		The type of column that cannot be identified.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException.PropertyType">
            <summary>
                <para>Gets the type of column that cannot be identified.
</para>
            </summary>
            <value>The type of column that cannot be identified.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.Exceptions.LockingException">

            <summary>
                <para>An exception thrown because an attempt is made to modify a row in a database, but its version doesn't match the version of the row being posted.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.Exceptions.LockingException.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.LockingException"/> class.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.ISqlDataStore">

            <summary>
                <para>Represents the interface for objects that need to interact with SQL Server databases,
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpo.DB.ISqlDataStore.Connection">
            <summary>
                <para>A <see cref="T:System.Data.IDbConnection"/> object that specifies the connection to a data store, if the specified data store allows commands to be created.

</para>
            </summary>
            <value>A <see cref="T:System.Data.IDbConnection"/> object that specifies the connection to the data store, if the specified data store allows commands to be created.

</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.ISqlDataStore.CreateCommand">
            <summary>
                <para>Creates a command if the data store allows commands to be created.

</para>
            </summary>
            <returns>A <see cref="T:System.Data.IDbCommand"/> command that is executed when connected to a data store.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.UpdateStatement">

            <summary>
                <para>Represents the update statement.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.UpdateStatement.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.UpdateStatement"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.UpdateStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
            <summary>
                <para>Initializes a new instance of the UpdateStatement class with the specified settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.UpdateStatement.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A UpdateStatement object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.UpdateStatement.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current UpdateStatement object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.UpdateStatement.ToString">
            <summary>
                <para>Returns a string representation of the UpdateStatement.
</para>
            </summary>
            <returns>A string representing the <b>UpdateStatement</b>.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.SelectStatementResult">

            <summary>
                <para>Represents the result of a single select query to a data store.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor(System.Object[])">
            <summary>
                <para>Initializes a new instance of the SelectStatementResult class with the specified rows.
</para>
            </summary>
            <param name="testData">
		An array of objects that will be represented as the collection's elements.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor(System.Collections.ICollection)">
            <summary>
                <para>Initializes a new instance of the SelectStatementResult class with the specified collection of rows.
</para>
            </summary>
            <param name="rows">
		A collection of rows that will be copied to the collection being created.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor">
            <summary>
                <para>Initializes a new instance of the SelectStatementResult class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor(DevExpress.Xpo.DB.SelectStatementResultRow[])">
            <summary>
                <para>Initializes a new instance of the SelectStatementResult class with the specified collection of rows.
</para>
            </summary>
            <param name="rows">
		An array of rows that represent the result of a single select query to a data store. Each row contains the values of the queried fields. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.SelectStatementResult.Rows"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatementResult.Clone">
            <summary>
                <para>Creates a copy of the current SelectStatementResult instance.
</para>
            </summary>
            <returns>A SelectStatementResult object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.SelectStatementResult.Rows">
            <summary>
                <para>An array of rows that represent the result of a single select query to a data store. Each row contains the values of the queried fields. To learn more, refer to How to: Access Data in SQL Query Results.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.SelectStatement">

            <summary>
                <para>Represents the select statement.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
            <summary>
                <para>Initializes a new instance of the SelectStatement class with the specified settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatement.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectStatement"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatement.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A SelectStatement object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatement.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current SelectStatement object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.SelectStatement.GroupCondition">
            <summary>
                <para>Specifies the grouping expression that is represented by a <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.SelectStatement.GroupProperties">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> that specifies the columns by which the result of the current SelectStatement should be grouped.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> that specifies the columns by which the result of the current <b>SelectStatement</b> should be grouped.


</value>


        </member>
        <member name="F:DevExpress.Xpo.DB.SelectStatement.SkipSelectedRecords">
            <summary>
                <para>Specifies the number of records to exclude from the query result.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.SelectStatement.SortProperties">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> collection.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> object that represents the collection of <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> objects.
</value>


        </member>
        <member name="F:DevExpress.Xpo.DB.SelectStatement.TopSelectedRecords">
            <summary>
                <para>Specifies the maximum number of selected records.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectStatement.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current SelectStatement object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.SelectedData">

            <summary>
                <para>Represents the result of batch select queries made to a data store. 

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.SelectedData.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectedData"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.SelectedData.#ctor(DevExpress.Xpo.DB.SelectStatementResult[])">
            <summary>
                <para>Initializes a new instance of the SelectedData class with the specified settings.
</para>
            </summary>
            <param name="resultSet">
		An array of <see cref="T:DevExpress.Xpo.DB.SelectStatementResult"/> objects that represent the result of select operations.

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.SelectedData.ResultSet">
            <summary>
                <para>The results of select query statements. To learn more, refer to How to: Access Data in SQL Query Results.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.ModificationStatement">

            <summary>
                <para>Serves as the base class for classes that represent modification statements.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.ModificationStatement.Parameters">
            <summary>
                <para>Gets the collection of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.ModificationStatement.RecordsAffected">
            <summary>
                <para>Specifies the number of records to be modified.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.ModificationStatement.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current ModificationStatement object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.ModificationResult">

            <summary>
                <para>Represents the result of an update operation on a data store.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.ModificationResult.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.ModificationResult"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.ModificationResult.#ctor(DevExpress.Xpo.DB.ParameterValue[])">
            <summary>
                <para>Initializes a new instance of the ModificationResult class.
</para>
            </summary>
            <param name="identities">
		 

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.ModificationResult.#ctor(System.Collections.Generic.List`1)">
            <summary>
                <para>Initializes a new instance of the ModificationResult class.
</para>
            </summary>
            <param name="identities">
		 

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.ModificationResult.Identities">
            <summary>
                <para>An array of identifiers.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.InsertStatement">

            <summary>
                <para>Represents the insert statement.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.InsertStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
            <summary>
                <para>Initializes a new instance of the InsertStatement class with the specified settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.InsertStatement.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.InsertStatement"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.InsertStatement.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A InsertStatement object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.InsertStatement.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current InsertStatement object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.InsertStatement.IdentityColumn">
            <summary>
                <para>Specifies the name of an identity column in a table.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.InsertStatement.IdentityColumnType">
            <summary>
                <para>Specifies the type of an identity column in a table. 
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.InsertStatement.IdentityParameter">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.InsertStatement.ToString">
            <summary>
                <para>Returns a string representation of the InsertStatement.
</para>
            </summary>
            <returns>A string representing the <b>InsertStatement</b>.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DeleteStatement">

            <summary>
                <para>Represents the delete statement.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DeleteStatement.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DeleteStatement"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DeleteStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
            <summary>
                <para>Initializes a new instance of the DeleteStatement class with the specified settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DeleteStatement.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A DeleteStatement object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DeleteStatement.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current DeleteStatement object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DeleteStatement.ToString">
            <summary>
                <para>Returns a string representation of the DeleteStatement.
</para>
            </summary>
            <returns>A string representing the <b>DeleteStatement</b>.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DataStoreLogger">

            <summary>
                <para>Enables operations performed by a specific <see cref="T:DevExpress.Xpo.DB.IDataStore"/> object to be logged.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DataStoreLogger.#ctor(DevExpress.Xpo.DB.IDataStore,System.IO.TextWriter)">
            <summary>
                <para>Initializes a new instance of the DataStoreLogger class with the specified settings.
</para>
            </summary>
            <param name="nestedProvider">
		A <see cref="T:DevExpress.Xpo.DB.IDataStore"/> object that represents a tracked data store.

            </param>
            <param name="logWriter">
		A <see cref="T:System.IO.TextWriter"/> object that will log data-aware operations performed on the tracked data store

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.DataStoreLogger.LogWriter">
            <summary>
                <para>Gets a writer that logs the data-aware operations performed on the tracked data store.

</para>
            </summary>
            <value>A <see cref="T:System.IO.TextWriter"/> object that logs the data-aware operations performed on the tracked data store

</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.BaseStatement">

            <summary>
                <para>Serves as the base class for the classes that represent statements.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A BaseStatement object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current BaseStatement object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.GetTablesColumns(DevExpress.Xpo.DB.BaseStatement[])">
            <summary>
                <para>This member supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="statements">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.GetTablesNames(DevExpress.Xpo.DB.BaseStatement[])">
            <summary>
                <para>Returns the names of the tables that are referenced in the specified statements.

</para>
            </summary>
            <param name="statements">
		An array of <see cref="T:DevExpress.Xpo.DB.BaseStatement"/> descendants that represents statements.

            </param>
            <returns>An array of strings that specify the names of the tables that are referenced in the specified statements.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.BaseStatement.GetTablesNames">
            <summary>
                <para>Returns the names of the tables that are referenced in the statement.

</para>
            </summary>
            <returns>An array of strings that specify the names of the tables that are referenced in the statement.

</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.BaseStatement.Operands">
            <summary>
                <para>The collection of operands.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.IDataStore">

            <summary>
                <para>The interface for objects that need to interact with a data store.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption">
            <summary>
                <para>When implemented by a class, returns which operations are performed when a data store is accessed for the first time.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations are performed when a data store is accessed for the first time.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.IDataStore.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
            <summary>
                <para>Updates data in a data store using the specified modification statements.
</para>
            </summary>
            <param name="dmlStatements">
		An array of data modification statements.

            </param>
            <returns>The result of the data modifications.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.IDataStore.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
            <summary>
                <para>When implemented by a class, fetches data from a data store using the specified query statements.
</para>
            </summary>
            <param name="selects">
		An array of statements to obtain data from the data store.

            </param>
            <returns>Data retrieved from the data store.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.IDataStore.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
            <summary>
                <para>When implemented by a class, updates the storage schema according to the specified class descriptions.
</para>
            </summary>
            <param name="dontCreateIfFirstTableNotExist">
		<b>true</b> if the schema should not be created if the table that corresponds to the first item in the <i>tables</i> array doesn't exist in the data store.

            </param>
            <param name="tables">
		An array of tables whose structure should be saved in the data store.

            </param>
            <returns>An <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> value that specifies the result of the update operation.

</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.SortingColumn">

            <summary>
                <para>Represents a sorting column in a query.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.SortingColumn.#ctor(System.String,System.String,DevExpress.Xpo.DB.SortingDirection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> class with the specified settings.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value that specifies the name of the sorted column in a query.

            </param>
            <param name="nodeAlias">
		A <see cref="T:System.String"/> value that specifies the alias name of the table in the query.

            </param>
            <param name="direction">
		A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the column's sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.DB.SortingColumn.Direction"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SortingColumn.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.DB.SortingDirection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> class with the specified property and sort direction.
</para>
            </summary>
            <param name="property">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant representing the query operand that identifies the sorted column in a query. This value is assigned to the <see cref="P:DevExpress.Xpo.DB.SortingColumn.Property"/> property.

            </param>
            <param name="direction">
		A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the column's sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.DB.SortingColumn.Direction"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.SortingColumn.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpo.DB.SortingColumn.Direction">
            <summary>
                <para>Gets or sets the column's sort order.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the column's sort order.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.SortingColumn.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A SortingColumn object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.SortingColumn.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current SortingColumn object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.SortingColumn.Property">
            <summary>
                <para>Gets or set the query operand that identifies the sorted column in a query.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant representing the query operand that identifies the sorted column in a query.
</value>


        </member>
        <member name="T:DevExpress.Xpo.DB.QuerySortingCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.QuerySortingCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.QuerySortingCollection.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A QuerySortingCollection object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QuerySortingCollection.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current QuerySortingCollection object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.QueryParameterCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryParameterCollection"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.#ctor(DevExpress.Data.Filtering.OperandValue[])">
            <summary>
                <para>Initializes and populates a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryParameterCollection"/> class.
</para>
            </summary>
            <param name="parameters">
		An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects that are added to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A QueryParameterCollection object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current QueryParameterCollection object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.ToString">
            <summary>
                <para>Returns a string representation of the QueryParameterCollection.
</para>
            </summary>
            <returns>A string representing the <b>QueryParameterCollection</b>.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.QueryOperandCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperandCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperandCollection"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperandCollection.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A QueryOperandCollection object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperandCollection.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current QueryOperandCollection object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.QueryOperand">

            <summary>
                <para>Represents a query operand.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor(System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> class with the specified column name and alias name.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value that specifies the column's name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.ColumnName"/> field.

            </param>
            <param name="nodeAlias">
		A <see cref="T:System.String"/> value that specifies the alias name of the table in a query. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias"/> field.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor(DevExpress.Xpo.DB.DBColumn,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> class with the specified column and alias name.
</para>
            </summary>
            <param name="column">
		A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object representing the column that the query operand corresponds to. The name of this column is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.ColumnName"/> property.

            </param>
            <param name="nodeAlias">
		A <see cref="T:System.String"/> value that specifies the alias name of the table in a query. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias"/> field.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor(System.String,System.String,DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para>Initializes a new instance of the QueryOperand class with the specified settings.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value that specifies the column's name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.ColumnName"/> field.

            </param>
            <param name="nodeAlias">
		A <see cref="T:System.String"/> value that specifies the alias name of the table in a query. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias"/> field.

            </param>
            <param name="columnType">
		 

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.Clone">
            <summary>
                <para>Creates a copy of the current QueryOperand instance.
</para>
            </summary>
            <returns>A QueryOperand object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.QueryOperand.ColumnName">
            <summary>
                <para>Specifies the column's name
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.QueryOperand.ColumnType">
            <summary>
                <para>The column type.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A QueryOperand object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.QueryOperand.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current QueryOperand object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias">
            <summary>
                <para>Specifies the alias name of the table in a query.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.JoinNodeCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Xpo.DB.JoinNode"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.JoinNodeCollection"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A JoinNodeCollection object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current JoinNodeCollection object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current JoinNodeCollection object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.JoinNode">

            <summary>
                <para>Serves as a base for the <see cref="T:DevExpress.Xpo.DB.BaseStatement"/> class.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.JoinNode"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.#ctor(DevExpress.Xpo.DB.DBTable,System.String,DevExpress.Xpo.DB.JoinType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.JoinNode"/> class with default settings.
</para>
            </summary>
            <param name="table">
		A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represent the table.

            </param>
            <param name="alias">
		A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Xpo.DB.JoinType"/> enumeration value that specifies the join's type. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Type"/> property.

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinNode.Alias">
            <summary>
                <para>A <see cref="T:System.String"/> value that identifies the table.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.CollectJoinNodesAndCriteria(System.Collections.Generic.List`1@,System.Collections.Generic.List`1@)">
            <summary>
                <para> </para>
            </summary>
            <param name="nodes">
		 
            </param>
            <param name="criteria">
		 
            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinNode.Condition">
            <summary>
                <para>Specifies the criteria expression.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A JoinNode object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.GetColumn(System.String)">
            <summary>
                <para>Returns the column with the specified name.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value that specifies the column's name.

            </param>
            <returns>A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object that represents the table column.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current JoinNode object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinNode.SubNodes">
            <summary>
                <para>Provides access to the collection of sub nodes that is represented by a <see cref="T:DevExpress.Xpo.DB.JoinNodeCollection"/> object.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinNode.Table">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.JoinNode.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current JoinNode object.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinNode.Type">
            <summary>
                <para>A <see cref="T:DevExpress.Xpo.DB.JoinType"/> enumeration value that specifies the join's type.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBTableMultiColumnGadget">

            <summary>
                <para>An abstract base class for <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/>, <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> and <see cref="T:DevExpress.Xpo.DB.DBIndex"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns">
            <summary>
                <para>Specifies a collection of strings that are the names of the columns comprising the DBTableMultiColumnGadget object. In the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> descendant class, these columns are primary keys.  In <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/>, these are foreign keys. In <see cref="T:DevExpress.Xpo.DB.DBIndex"/>, these are columns comprising the index.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Name">
            <summary>
                <para>This member supports the XPO Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBTable">

            <summary>
                <para>A table that stores a persistent object's data.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBTable"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBTable"/> class with the specified name.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value that specifies the table's name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTable.Name"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.AddColumn(DevExpress.Xpo.DB.DBColumn)">
            <summary>
                <para>Appends a column to the <see cref="P:DevExpress.Xpo.DB.DBTable.Columns"/> collection.
</para>
            </summary>
            <param name="column">
		A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object that represents the column to be added to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.AddForeignKey(DevExpress.Xpo.DB.DBForeignKey)">
            <summary>
                <para>Appends a <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object to the <see cref="P:DevExpress.Xpo.DB.DBTable.ForeignKeys"/> collection.
</para>
            </summary>
            <param name="fk">
		A <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object to be added to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.AddIndex(DevExpress.Xpo.DB.DBIndex)">
            <summary>
                <para>Appends a <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object to the <see cref="P:DevExpress.Xpo.DB.DBTable.Indexes"/> collection.
</para>
            </summary>
            <param name="index">
		A <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object to be added to the collection.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.DB.DBTable.Columns">
            <summary>
                <para>Provides access to the current DBTable's column collection.
</para>
            </summary>
            <value>A list of <see cref="T:DevExpress.Xpo.DB.DBColumn"/> objects that represent the columns defined in the current <b>DBTable</b>.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A DBTable object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DBTable.ForeignKeys">
            <summary>
                <para>Provides access to the current DBTable's foreign keys collection.
</para>
            </summary>
            <value>A list of <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> objects that represent the foreign keys defined in the current <b>DBTable</b>.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.GetColumn(System.String)">
            <summary>
                <para>Creates a new column with the specified name and appends it to the <see cref="P:DevExpress.Xpo.DB.DBTable.Columns"/> collection.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value that specifies the column's name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBColumn.Name"/> property.

            </param>
            <returns>A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object that represents the new column.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current DBTable object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Xpo.DB.DBTable.Indexes">
            <summary>
                <para>Provides access to the current DBTable's indexes collection.
</para>
            </summary>
            <value>A list of <see cref="T:DevExpress.Xpo.DB.DBIndex"/> objects that represent the indexes defined for the current <b>DBTable</b>.
</value>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.IsForeignKeyIncluded(DevExpress.Xpo.DB.DBForeignKey)">
            <summary>
                <para>Indicates whether the <see cref="P:DevExpress.Xpo.DB.DBTable.ForeignKeys"/> collection contains the specified <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object.
</para>
            </summary>
            <param name="fk">
		A <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object to locate in the collection.

            </param>
            <returns><b>true</b> if the collection contains the specified object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.IsIndexIncluded(DevExpress.Xpo.DB.DBIndex)">
            <summary>
                <para>Indicates whether the <see cref="P:DevExpress.Xpo.DB.DBTable.Indexes"/> collection contains the specified <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object.
</para>
            </summary>
            <param name="index">
		A <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object to locate in the collection.

            </param>
            <returns><b>true</b> if the collection contains the specified object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBTable.IsView">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBTable.Name">
            <summary>
                <para>Specifies the table's name.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value that specifies the table's name.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBTable.PrimaryKey">
            <summary>
                <para>Specifies a <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> object that represents a primary keys for the table. The primary key must be unique to identify the record in the table. It's also possible to have a table with a primary key made up of two or more columns.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBTable.ToString">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBPrimaryKey">

            <summary>
                <para>The primary key of a table.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBPrimaryKey.#ctor(System.Collections.ICollection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> class with the specified columns that function as primary keys for a table.
</para>
            </summary>
            <param name="columns">
		A collection of strings that identify columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBPrimaryKey.#ctor(System.String,System.Collections.ICollection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> class with the specified name and columns that function as primary keys for a table.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value that is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Name"/> property.

            </param>
            <param name="columns">
		A collection of strings that identify columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBPrimaryKey.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBIndex">

            <summary>
                <para>For internal use. An index of a table.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBIndex.#ctor(System.String,System.Collections.ICollection,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBIndex"/> class with the specified settings.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value that is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Name"/> property.

            </param>
            <param name="columns">
		A collection of strings that identify columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.


            </param>
            <param name="isUnique">
		<b>true</b> if the index must be unique; otherwise, <b>false</b>. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBIndex.IsUnique"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBIndex.#ctor(System.Collections.ICollection,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBIndex"/> class with the specified settings.
</para>
            </summary>
            <param name="columns">
		A collection of strings that identify the columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.


            </param>
            <param name="isUnique">
		<b>true</b> if the index must be unique; otherwise, <b>false</b>. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBIndex.IsUnique"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBIndex.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBIndex"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBIndex.IsUnique">
            <summary>
                <para><b>true</b> if the index must be unique; otherwise, <b>false</b>. If the <b>IsUnique</b> field is set to <b>true</b>, an exception will be thrown when assigning an index that isn't unique.

</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBForeignKey">

            <summary>
                <para>The foreign key of a table.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBForeignKey.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBForeignKey.#ctor(System.Collections.ICollection,System.String,System.Collections.Specialized.StringCollection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> class with the specified settings.
</para>
            </summary>
            <param name="columns">
		A collection of strings that specify the names of columns that function as foreign keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.

            </param>
            <param name="primaryKeyTable">
		A <see cref="T:System.String"/> value that specifies the name of a primary key table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTable"/> field.

            </param>
            <param name="primaryKeyTableKeyColumns">
		A collection of strings that specify the names of columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTableKeyColumns"/> field.

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTable">
            <summary>
                <para>Specifies the name of a primary key table.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTableKeyColumns">
            <summary>
                <para>A collection of strings that specify the names of columns that function as primary keys for a table.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.DBColumn">

            <summary>
                <para>The schema of a column in a <see cref="T:DevExpress.Xpo.DB.DBTable"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBColumn"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.#ctor(System.String,System.Boolean,System.String,System.Int32,DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para>Initializes a new instance of the DBColumn class with the specified settings.
</para>
            </summary>
            <param name="name">
		 

            </param>
            <param name="isKey">
		 

            </param>
            <param name="dBTypeName">
		 

            </param>
            <param name="size">
		 

            </param>
            <param name="type">
		 

            </param>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.ColumnType">
            <summary>
                <para>Specifies the column's type.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.DBTypeName">
            <summary>
                <para>Specifies the name of the column data type.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.GetColumnType(System.Type)">
            <summary>
                <para>Gets the column type of the specified runtime type.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> object that represents the exact runtime type.

            </param>
            <returns>A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration value that corresponds to the specified runtime type.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.GetColumnType(System.Type,System.Boolean)">
            <summary>
                <para>Gets the column type of the specified runtime type.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> object that represents the exact runtime type.

            </param>
            <param name="supressExceptionOnUnknown">
		<b>true</b> to return the <b>DBColumnType.Unknown</b> value if the specified type cannot be identified; <b>false</b> to raise the <see cref="T:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException"/> exception.

            </param>
            <returns>A <b>DevExpress.Xpo.DB.DBColumnType</b> enumeration value that corresponds to the specified runtime type.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.GetType(DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para>Gets the runtime type of the specified column type.
</para>
            </summary>
            <param name="type">
		One of the <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration values.

            </param>
            <returns>A <see cref="T:System.Type"/> object that represents the exact runtime type of the specified column type.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.IsIdentity">
            <summary>
                <para><b>true</b> if the value of the column increments automatically; otherwise, <b>false</b>. The default value is <b>false</b>.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.IsKey">
            <summary>
                <para><b>true</b> if the column is the key column; otherwise, <b>false</b>.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.IsStorableType(DevExpress.Xpo.DB.DBColumnType)">
            <summary>
                <para>Indicates whether values of the specified column type can be saved to a database.
</para>
            </summary>
            <param name="type">
		One of the <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration values.

            </param>
            <returns><b>true</b> if values of the specified column type can be saved to a database; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpo.DB.DBColumn.IsStorableType(System.Type)">
            <summary>
                <para>Indicates whether values of the specified runtime type can be saved to a database.
</para>
            </summary>
            <param name="type">
		A <see cref="T:System.Type"/> object that represents the exact runtime type.

            </param>
            <returns><b>true</b> if values of the specified type can be saved to a database; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.Name">
            <summary>
                <para>Specifies the column's name.
</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="F:DevExpress.Xpo.DB.DBColumn.Size">
            <summary>
                <para>The maximum length of a text column. This is ignored for non-text columns.

</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.CriteriaOperatorCollection">

            <summary>
                <para>Represents a collection of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the CriteriaOperatorCollection class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.#ctor(System.Int32)">
            <summary>
                <para>Initializes a new instance of the CriteriaOperatorCollection class with a specified initial capacity.
</para>
            </summary>
            <param name="capacity">
		The number of elements that the new <b>CriteriaOperatorCollection</b> can initially store.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A CriteriaOperatorCollection object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current CriteriaOperatorCollection object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.ToString">
            <summary>
                <para>Returns a string that represents the current object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current CriteriaOperatorCollection object.
</returns>


        </member>
        <member name="T:DevExpress.Xpo.DB.UpdateSchemaResult">

            <summary>
                <para>Lists the values that specify the result of the data store schema update operation.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.UpdateSchemaResult.FirstTableNotExists">
            <summary>
                <para>Indicates that the table that corresponds to the first item doesn't exist in the data store.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.UpdateSchemaResult.SchemaExists">
            <summary>
                <para>Indicates that the database schema exists.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.SortingDirection">

            <summary>
                <para>Lists the values that specify the sort order.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.SortingDirection.Ascending">
            <summary>
                <para>A property (column) is sorted in ascending order.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.SortingDirection.Descending">
            <summary>
                <para>A property (column) is sorted in descending order.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.JoinType">

            <summary>
                <para>Lists the values that specify the join type.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.JoinType.Inner">
            <summary>
                <para>Represents an inner join. Inner joins (also known as equijoins) are used to combine information from two or more tables.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.JoinType.LeftOuter">
            <summary>
                <para>Includes all the records in which the linked field value in both tables is an exact match and every record in the primary for which there is no match.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.DB.AutoCreateOption">

            <summary>
                <para>Lists the values that specify the action which is performed when a session is connected to a data store.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpo.DB.AutoCreateOption.DatabaseAndSchema">
            <summary>
                <para>A session will try to automatically create the database if it doesn't exist. It will also create or update the database schema for any persistent classes currently being used.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.AutoCreateOption.None">
            <summary>
                <para>A session will not automatically create the database or update the database schema. The database schema is still queried and checked to match the currently used persistent class metadata.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.AutoCreateOption.SchemaAlreadyExists">
            <summary>
                <para>A session will never query the database for schema to validate against persistent class metadata. This will suppress the <b>SchemaCorrectionNeededException</b>, but a database error may occur during data operations if the schema is not compatible with run-time persistent classes metadata.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpo.DB.AutoCreateOption.SchemaOnly">
            <summary>
                <para>A session will automatically create or update the database schema for the persistent classes currently being used. If the database doesn't exist, it won't be created by a session.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.Exceptions.InvalidPropertyPathException">

            <summary>
                <para>An exception that is thrown when a specific property that is used in a specific expression cannot be resolved.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.Exceptions.InvalidPropertyPathException.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the InvalidPropertyPathException class.
</para>
            </summary>
            <param name="messageText">
		A string that specifies the error description.

            </param>


        </member>
        <member name="T:DevExpress.Data.Filtering.Exceptions.CriteriaParserException">

            <summary>
                <para>An exception that is thrown when a string that represents criteria cannot be parsed.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the CriteriaParserException class.
</para>
            </summary>
            <param name="explanation">
		A string that specifies the error description.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
                <para>Initializes a new instance of the CriteriaParserException class.
</para>
            </summary>
            <param name="explanation">
		A string that specifies the error description.

            </param>
            <param name="line">
		A value of the <b>CriteriaLexer.Line</b> property that specifies the line where an exception occured. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Line"/> property.

            </param>
            <param name="column">
		A value of the <b>CriteriaLexer.Col</b> property that specifies the column where an exception occured. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Column"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Column">
            <summary>
                <para>The value of the <b>CriteriaLexer.Col</b> property that specifies the column where an exception occured.
</para>
            </summary>
            <value>The value of the <b>CriteriaLexer.Col</b> property that specifies the column where an exception occured.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Line">
            <summary>
                <para>A value of the <b>CriteriaLexer.Line</b> property that specifies the line where an exception occured.
</para>
            </summary>
            <value>A value of the <b>CriteriaLexer.Line</b> property that specifies the line where an exception occured.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.ICriteriaVisitor">

            <summary>
                <para>For internal use only.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.BetweenOperator)">
            <summary>
                <para> </para>
            </summary>
            <param name="theOperator">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.BinaryOperator)">
            <summary>
                <para> </para>
            </summary>
            <param name="theOperator">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.UnaryOperator)">
            <summary>
                <para> </para>
            </summary>
            <param name="theOperator">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.InOperator)">
            <summary>
                <para> </para>
            </summary>
            <param name="theOperator">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.GroupOperator)">
            <summary>
                <para> </para>
            </summary>
            <param name="theOperator">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.OperandValue)">
            <summary>
                <para> </para>
            </summary>
            <param name="theOperand">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.FunctionOperator)">
            <summary>
                <para> </para>
            </summary>
            <param name="theOperator">
		 
            </param>


        </member>
        <member name="T:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId">

            <summary>
                <para> </para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAboveAverageDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAboveAverageName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAfterDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAfterName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAllDatesInThePeriodDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAllDatesInThePeriodName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAprilDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAprilName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAugustDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAugustName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBeforeDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBeforeName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBeginsWithDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBeginsWithName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBelowAverageDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBelowAverageName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBetweenDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBetweenName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBottomNDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBottomNName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterContainsDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterContainsName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterCustomDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterCustomName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDatePeriodsDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDatePeriodsName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDecemberDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDecemberName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotBeginsWithDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotBeginsWithName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotContainDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotContainName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotEndsWithDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotEndsWithName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotEqualDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotEqualName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterEndsWithDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterEndsWithName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterEqualsDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterEqualsName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterFebruaryDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterFebruaryName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterGreaterThanDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterGreaterThanName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterGreaterThanOrEqualToDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterGreaterThanOrEqualToName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsBlankDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsBlankName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNotBlankDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNotBlankName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNotNullDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNotNullName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNullDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNullName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJanuaryDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJanuaryName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJulyDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJulyName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJuneDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJuneName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastMonthDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastMonthName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastQuarterDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastQuarterName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastWeekDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastWeekName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastYearDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastYearName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLessThanDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLessThanName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLessThanOrEqualToDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLessThanOrEqualToName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterMarchDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterMarchName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterMayDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterMayName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextMonthDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextMonthName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextQuarterDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextQuarterName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextWeekDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextWeekName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextYearDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextYearName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNoneDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNoneName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNovemberDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNovemberName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterOctoberDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterOctoberName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter1Description">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter1Name">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter2Description">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter2Name">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter3Description">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter3Name">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter4Description">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter4Name">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersBooleanDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersBooleanName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersDateTimeDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersDateTimeName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersEnumDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersEnumName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSeptemberDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSeptemberName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSequenceQualifierItemsDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSequenceQualifierItemsName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSequenceQualifierPercentsDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSequenceQualifierPercentsName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersNumericDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersNumericName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersTextDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersTextName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisMonthDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisMonthName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisQuarterDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisQuarterName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisWeekDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisWeekName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisYearDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisYearName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTodayDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTodayName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTomorrowDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTomorrowName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTopNDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTopNName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterUserDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterUserName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterYearToDateDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterYearToDateName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterYesterdayDescription">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterYesterdayName">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFirstLabel">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptChooseOne">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptEnterADate">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptEnterAValue">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptSearchControl">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptSelectADate">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptSelectAValue">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUISecondLabel">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUITypeLabel">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIValueLabel">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.FilteringUIClearFilter">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.FilteringUIClose">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.FilteringUITabValues">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.IClientCriteriaVisitor">

            <summary>
                <para>For internal use only.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.IClientCriteriaVisitor.Visit(DevExpress.Data.Filtering.AggregateOperand)">
            <summary>
                <para> </para>
            </summary>
            <param name="theOperand">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.IClientCriteriaVisitor.Visit(DevExpress.Data.Filtering.OperandProperty)">
            <summary>
                <para> </para>
            </summary>
            <param name="theOperand">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.IClientCriteriaVisitor.Visit(DevExpress.Data.Filtering.JoinOperand)">
            <summary>
                <para> </para>
            </summary>
            <param name="theOperand">
		 
            </param>


        </member>
        <member name="T:DevExpress.Data.Filtering.UnaryOperator">

            <summary>
                <para>An unary operator which performs an operation on only one expression.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.#ctor(DevExpress.Data.Filtering.UnaryOperatorType,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> class with the specified operand and operator type.
</para>
            </summary>
            <param name="operatorType">
		A <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> enumeration value which specifies the type of the unary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.UnaryOperator.OperatorType"/> property.

            </param>
            <param name="operand">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the operand. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.UnaryOperator.Operand"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.#ctor(DevExpress.Data.Filtering.UnaryOperatorType,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> class with the specified settings.
</para>
            </summary>
            <param name="operatorType">
		A <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> enumeration value which specifies the type of the unary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.UnaryOperator.OperatorType"/> property.

            </param>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the property's name.


            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.Clone">
            <summary>
                <para>Creates a copy of the current UnaryOperator instance.
</para>
            </summary>
            <returns>A UnaryOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An UnaryOperator object to compare with the current object.


            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.UnaryOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current UnaryOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperator.Operand">
            <summary>
                <para>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the operand.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperator.OperatorType">
            <summary>
                <para>An <see cref="T:DevExpress.Data.Filtering.UnaryOperatorType"/> enumeration value which specifies the type of the unary operator.

</para>
            </summary>
            <returns>
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.OperandValue">

            <summary>
                <para>A value operand in criteria expressions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandValue"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.#ctor(System.Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandValue"/> class with the specified value.
</para>
            </summary>
            <param name="value">
		The value for the operand. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.OperandValue.Value"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.Clone">
            <summary>
                <para>Creates a copy of the current OperandValue instance.
</para>
            </summary>
            <returns>An OperandValue object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An OperandValue object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandValue.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current OperandValue object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.OperandValue.Value">
            <summary>
                <para>Gets or sets a value for the operand.
</para>
            </summary>
            <value>The value for the operand.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.OperandValue.XmlValue">
            <summary>
                <para>Gets or sets the current operand's formatted value.
</para>
            </summary>
            <value>An object that represents the current operand's formatted value.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.OperandProperty">

            <summary>
                <para>An object property operand in criteria expressions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> class with the specified property name.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value that specifies the name of the property. It can be a path through object relationships (e.g.  "Employer.DefaultAddress.City"). This value is case-sensitive. and will be assigned to the <see cref="P:DevExpress.Data.Filtering.OperandProperty.PropertyName"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.Clone">
            <summary>
                <para>Creates a copy of the current OperandProperty instance.
</para>
            </summary>
            <returns>An OperandProperty object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An OperandProperty object to compare with the current object.


            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.OperandProperty.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current OperandProperty object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.OperandProperty.Item(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>For internal use only.


</para>
            </summary>
            <param name="condition">
		 

            </param>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.OperandProperty.PropertyName">
            <summary>
                <para>Gets or sets a property name.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the name of the property. It can be a path through object relationships (e.g.  "Employer.DefaultAddress.City"). This value is case-sensitive.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.NullOperator">

            <summary>
                <para>Represents an operator which compares a persistent object's property value with a <b>null</b> reference (<b>Nothing</b> in Visual Basic).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.NullOperator.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NullOperator"/> class with the specified property name.
</para>
            </summary>
            <param name="operand">
		A <see cref="T:System.String"/> value which specifies the name of the property to check for <b>null</b> (<b>Nothing</b> in Visual Basic).

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.NullOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NullOperator"/> class with the specified criteria operand.
</para>
            </summary>
            <param name="operand">
		An <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the criteria expression.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.NullOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NullOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.NotOperator">

            <summary>
                <para>Represents a logical NOT operation which is performed on the operand.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.NotOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NotOperator"/> class with the specified operand.
</para>
            </summary>
            <param name="operand">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the operand that the logical inversion is applied to.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.NotOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NotOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.InOperator">

            <summary>
                <para>An operator which determines if a value matches any value in a specified list.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.InOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the InOperator class with the specified settings.
</para>
            </summary>
            <param name="leftOperand">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the expression to test.

            </param>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent expressions to test for a match.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Initializes a new instance of the InOperator class with the specified settings.
</para>
            </summary>
            <param name="leftOperand">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the expression to test.

            </param>
            <param name="operands">
		An array of objects that represent expressions to test for a match.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the InOperator class with the specified settings.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the property name.

            </param>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent expressions to test for a match.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(System.String,System.Collections.IEnumerable)">
            <summary>
                <para>Initializes a new instance of the InOperator class with the specified settings.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the property name.

            </param>
            <param name="values">
		A collection of expressions to test for a match.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.Clone">
            <summary>
                <para>Creates a copy of the current InOperator instance.
</para>
            </summary>
            <returns>An InOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An InOperator object to compare with the current object.


            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.InOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current InOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.InOperator.LeftOperand">
            <summary>
                <para>Gets or sets the expression which is tested to see if it matches any value in the <see cref="P:DevExpress.Data.Filtering.InOperator.Operands"/> list.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the expression to test.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.InOperator.Operands">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current InOperator.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current InOperator.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.GroupOperator">

            <summary>
                <para>A logical expression which groups two or more operands with a logical AND or OR.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor(DevExpress.Data.Filtering.GroupOperatorType,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> class with the specified settings.
</para>
            </summary>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.GroupOperator.OperatorType"/> property.

            </param>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.GroupOperator.Operands"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> class with the specified operands.
</para>
            </summary>
            <param name="operands">
		An array of the <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> objects that represent operands. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.GroupOperator.Operands"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor(DevExpress.Data.Filtering.GroupOperatorType,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Initializes a new instance of the GroupOperator with the specified parameters.
</para>
            </summary>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.GroupOperator.OperatorType"/> property.

            </param>
            <param name="operands">
		An object that implements the <b>IEnumerable</b> interface and represents a collection of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects which specify the operands required by the selected function. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Clone">
            <summary>
                <para>Creates a copy of the current GroupOperator instance.
</para>
            </summary>
            <returns>A GroupOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Combine(DevExpress.Data.Filtering.GroupOperatorType,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the expression which groups two operands with logical AND or OR.
</para>
            </summary>
            <param name="opType">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator.

            </param>
            <param name="left">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the first operand.

            </param>
            <param name="right">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the second operand.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups two operands.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Combine(DevExpress.Data.Filtering.GroupOperatorType,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Returns the expression which groups the specified operands with logical AND or OR.
</para>
            </summary>
            <param name="opType">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator.

            </param>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Combine(DevExpress.Data.Filtering.GroupOperatorType,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Returns the expression which groups the specified operands with logical AND or OR.
</para>
            </summary>
            <param name="opType">
		A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator.

            </param>
            <param name="operands">
		A list of operands to be grouped.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A GroupOperator object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.GroupOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current GroupOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.GroupOperator.Operands">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current GroupOperator.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current GroupOperator.
</value>


        </member>
        <member name="F:DevExpress.Data.Filtering.GroupOperator.OperatorType">
            <summary>
                <para>Specifies the type of the group operator. The available types are enumerated in the <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.FunctionOperator">

            <summary>
                <para>A function operator based on a <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the FunctionOperator class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(DevExpress.Data.Filtering.FunctionOperatorType,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the FunctionOperator class with default settings.
</para>
            </summary>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/> value that specifies the type of function. This value is used to initialize the <see cref="F:DevExpress.Data.Filtering.FunctionOperator.OperatorType"/> property.

            </param>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that specify the operands required by the selected function. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Initializes a new instance of the FunctionOperator class.
</para>
            </summary>
            <param name="customFunctionName">
		 

            </param>
            <param name="operands">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(DevExpress.Data.Filtering.FunctionOperatorType,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Initializes a new instance of the FunctionOperator class with the specified parameters.
</para>
            </summary>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/> enumeration value that specifies the type of function. This value is used to initialize the <see cref="F:DevExpress.Data.Filtering.FunctionOperator.OperatorType"/> property.

            </param>
            <param name="operands">
		An object that implements the <b>IEnumerable</b> interface and represents a collection of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects which specify the operands required by the selected function. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(System.String,System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Initializes a new instance of the FunctionOperator class with the specified settings.
</para>
            </summary>
            <param name="customFunctionName">
		A <see cref="T:System.String"/> value, specifying the name of the custom function.

            </param>
            <param name="operands">
		A collection of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.Clone">
            <summary>
                <para>Creates a copy of the current FunctionOperator instance.
</para>
            </summary>
            <returns>A FunctionOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A FunctionOperator object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current FunctionOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.FunctionOperator.GuessIsLogicalCustomFunction(DevExpress.Data.Filtering.FunctionOperator)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="theOperator">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.FunctionOperator.Operands">
            <summary>
                <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current FunctionOperator.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current FunctionOperator.
</value>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperator.OperatorType">
            <summary>
                <para>Represents the function type. 
<para>
The operands are specified by the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property and these can be initialized in the constructor. Each operand represents an instance of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class descendant, the number of operands depends on the function type.
</para>
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/> value that specify the function type.
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.CriteriaOperator">

            <summary>
                <para>Provides the abstract (<b>MustInherit</b> in Visual Basic) base class for criteria operators.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="visitor">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="visitor">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the expression which groups two operands with logical AND.
</para>
            </summary>
            <param name="left">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the first operand.

            </param>
            <param name="right">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the second operand.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups two operands with logical AND.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Returns the expression which groups the specified operands with logical AND.
</para>
            </summary>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical AND.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Returns the expression which groups the specified operands with logical AND.
</para>
            </summary>
            <param name="operands">
		A list of operands to be grouped.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical AND.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Clone(DevExpress.Data.Filtering.OperandProperty)">
            <summary>
                <para>Creates a copy of the specified <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object.
</para>
            </summary>
            <param name="origin">
		An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object to clone.

            </param>
            <returns>An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents an exact copy of the specified object. <b>null</b> (<b>Nothing</b> in Visual Basic) if the specified object is a null reference.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Clone(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a copy of the specified <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object.
</para>
            </summary>
            <param name="origin">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object to clone.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents an exact copy of the specified object. <b>null</b> (<b>Nothing</b> in Visual Basic) if the specified object is null reference.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.CriterionEquals(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>This method is intended for internal use.
</para>
            </summary>
            <param name="left">
		 

            </param>
            <param name="right">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.CriteriaOperator.CustomFunctionCount">
            <summary>
                <para>Returns the number of custom functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions"/> method calls.
</para>
            </summary>
            <value>An integer value which specifies the number of elements in a collection returned by the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions"/> function.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunction(System.String)">
            <summary>
                <para>Searches custom functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions"/> method calls for a function with a specified name.
</para>
            </summary>
            <param name="functionName">
		The name of a custom function to search. You specify a custom function's name by implementing the <see cref="P:DevExpress.Data.Filtering.ICustomFunctionOperator.Name"/> property.

            </param>
            <returns>An <see cref="ICustomFunctionOperator"/> object that corresponds to the <i>functionName</i>, if found; otherwise, <b>null</b> (<b>Nothing</b> in Visual Basic).
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions">
            <summary>
                <para>Returns custom functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions"/> method calls.
</para>
            </summary>
            <returns>A <see cref="CustomFunctionCollection"/> object containing all custom functions registered via the methods mentioned above.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current CriteriaOperator object.
</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.IsNotNull">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.IsNull">
            <summary>
                <para>For internal use only.

</para>
            </summary>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.LegacyToString">
            <summary>
                <para>Returns the string representation of the criteria specified by the current CriteriaOperator instance.
</para>
            </summary>
            <returns>A string equivalent of the current CriteriaOperator instance.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.LegacyToString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the string representation of a specified criteria.
</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> instance specifying the criteria used to convert to a string equivalent.

            </param>
            <returns>A string equivalent of the <i>criteria</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Not">
            <summary>
                <para>Returns an instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> that represents the criterion resulting from the logical inversion of the criterion the current CriteriaOperator represents.
</para>
            </summary>
            <returns>An instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> that represents the criterion resulting from the logical inversion of the criterion the current CriteriaOperator represents.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(DevExpress.Data.Filtering.CriteriaOperator[])">
            <summary>
                <para>Returns the expression which groups the specified operands with logical OR.
</para>
            </summary>
            <param name="operands">
		An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical OR.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Returns the expression which groups two operands with logical OR.
</para>
            </summary>
            <param name="left">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the first operand.

            </param>
            <param name="right">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the second operand.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups two operands with logical OR.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Returns the expression which groups the specified operands with logical OR.
</para>
            </summary>
            <param name="operands">
		A list of operands to be grouped.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical OR.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Parse(System.String,System.Object[])">
            <summary>
                <para>Converts the specified string, specifying an expression, to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.
</para>
            </summary>
            <param name="criteria">
		A <see cref="T:System.String"/> value, that is the expression to convert.

            </param>
            <param name="parameters">
		The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in <i>criteria</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Parse(System.String,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified string, specifying an expression, to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.
</para>
            </summary>
            <param name="stringCriteria">
		A <see cref="T:System.String"/> value, that is the expression to convert.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in <i>criteria</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ParseList(System.String,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified string representation of expressions that are divided by a semicolon into their <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents.

</para>
            </summary>
            <param name="criteriaList">
		A <see cref="T:System.String"/> value that represents the expressions to convert. The expressions are divided by a semicolon.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents to the expressions contained in <i>criteriaList</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ParseList(System.String,System.Object[])">
            <summary>
                <para>Converts the specified string representation of expressions that are divided by a semicolon into their <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents.

</para>
            </summary>
            <param name="criteriaList">
		A <see cref="T:System.String"/> value that represents the expressions to convert. The expressions are divided by a semicolon.

            </param>
            <param name="parameters">
		The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.


            </param>
            <returns>An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents to the expressions contained in <i>criteriaList</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)">
            <summary>
                <para>Registers a specified custom function to use in any CriteriaOperator-based criteria in your application.
</para>
            </summary>
            <param name="customFunction">
		An <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> object specifying a custom function to register.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Registers specified custom functions to use in any CriteriaOperator-based criteria in your application.
</para>
            </summary>
            <param name="customFunctions">
		A collection of <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> objects specifying custom functions to register.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToBasicStyleString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are marked by a question mark character in the result string.


            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToBasicStyleString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToCStyleString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified expression into its equivalent string in C# style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are marked by a question mark character in the result string.


            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToCStyleString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Converts the specified expression into its equivalent string in C# style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString">
            <summary>
                <para>Converts the current expression into its VB equivalent string.

</para>
            </summary>
            <returns>A string representation of this expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <param name="criteriaParametersList">
		[out] Receives the values that are marked by question mark character in the result string.

            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Converts the specified expression into its equivalent string in VB style.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.

            </param>
            <returns>A string representation of the specified expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.TryParse(System.String,System.Object[])">
            <summary>
                <para>Tries to convert the specified string representation of an expression to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.

</para>
            </summary>
            <param name="criteria">
		A <see cref="T:System.String"/> value that represents the expression to convert.

            </param>
            <param name="parameters">
		The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.

            </param>
            <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in <i>criteria</i>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.UnregisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)">
            <summary>
                <para>Unregisters a specified custom function from use in any CriteriaOperator-based criteria in your application.
</para>
            </summary>
            <param name="customFunction">
		An <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> object instance specifying a custom function to unregister.

            </param>
            <returns><b>true</b> if the <i>customFunction</i> has successfully been removed from a collection returned by the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions"/> function; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.CriteriaOperator.UnregisterCustomFunction(System.String)">
            <summary>
                <para>Unregisters a custom function with a specified name from use in any CriteriaOperator-based criteria in your application.
</para>
            </summary>
            <param name="functionName">
		The name of a custom function to unregister.

            </param>
            <returns><b>true</b> if a custom function whose name matches the <i>functionName</i> has successfully been removed from a collection returned by the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions"/> function; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="E:DevExpress.Data.Filtering.CriteriaOperator.UserValueParse">
            <summary>
                <para>Occurs when restoring a serialized criteria operator that references a user object.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Data.Filtering.CriteriaOperator.UserValueToString">
            <summary>
                <para>Occurs when serializing a criteria operator that references a user object.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.ContainsOperator">

            <summary>
                <para>An operator which checks if a collection contains at least one object matching a specific criteria.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.ContainsOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ContainsOperator"/> class with the specified property and criteria expression.
</para>
            </summary>
            <param name="collectionProperty">
		A <see cref="T:System.String"/> value which identifies the property whose values will be searched.


            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents a search criteria.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.ContainsOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ContainsOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.ContainsOperator.#ctor(DevExpress.Data.Filtering.OperandProperty,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ContainsOperator"/> class with the specified property operand and criteria expression.
</para>
            </summary>
            <param name="collectionProperty">
		An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents the property operand in the criteria expression.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the search criteria.


            </param>


        </member>
        <member name="T:DevExpress.Data.Filtering.BinaryOperator">

            <summary>
                <para>A logical expression which consists of a <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> operation between two operands.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified left and right operands and binary operator type.
</para>
            </summary>
            <param name="opLeft">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the first operand. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.LeftOperand"/> property.

            </param>
            <param name="opRight">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the second operand. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.RightOperand"/> property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the BinaryOperator class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		An <see cref="T:System.Object"/> value to compare with the values of the specified property.


            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Object,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of the binary operator.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.


            </param>
            <param name="value">
		An <see cref="T:System.Object"/> value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Double)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to <see cref="T:System.Double"/> values.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Single)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to <see cref="T:System.String"/> values.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int32)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to integer values.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Decimal)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Decimal"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Boolean)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Boolean"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Byte"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Char)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Char"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.DateTime)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.DateTime"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.TimeSpan)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.TimeSpan"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte[])">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to an array of <see cref="T:System.Byte"/> values.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		An array of <see cref="T:System.Byte"/> values to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.String"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int64)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Int64"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int16)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Int16"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Guid)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Guid"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Double,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Double"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Single,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of the binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Single"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int32,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified integer value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Decimal,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Decimal"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Boolean,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Boolean"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Byte"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Char,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Char"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.DateTime,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.DateTime"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.TimeSpan,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.TimeSpan"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte[],DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Byte"/> values.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		An array of <see cref="T:System.Byte"/> values to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.String,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.String"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int64,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Int64"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int16,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Int16"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Guid,DevExpress.Data.Filtering.BinaryOperatorType)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Guid"/> value.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the <i>value</i>.

            </param>
            <param name="value">
		The value to compare with the values of the specified property.

            </param>
            <param name="type">
		A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.Clone">
            <summary>
                <para>Creates a copy of the current BinaryOperator instance.
</para>
            </summary>
            <returns>A BinaryOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		A BinaryOperator object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.BinaryOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current BinaryOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperator.LeftOperand">
            <summary>
                <para>The left operand.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType">
            <summary>
                <para>Gets the type of the binary operator.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator.
</returns>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperator.RightOperand">
            <summary>
                <para>The right operand.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.BetweenOperator">

            <summary>
                <para>An operator which determines whether a criteria expression lies between the specified range of values.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor(System.String,System.Object,System.Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with the specified property name and the specified range of values.
</para>
            </summary>
            <param name="testPropertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property whose values are tested.

            </param>
            <param name="beginValue">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.BeginExpression"/> property.

            </param>
            <param name="endValue">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.EndExpression"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with the specified property and the specified range of values.
</para>
            </summary>
            <param name="testPropertyName">
		A <see cref="T:System.String"/> value which identifies the property whose values are tested.

            </param>
            <param name="beginExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.BeginExpression"/> property.

            </param>
            <param name="endExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.EndExpression"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with the specified property and the specified range of values.
</para>
            </summary>
            <param name="testExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression that identifies the property whose values are tested.

            </param>
            <param name="beginExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.LeftOperand"/> property.

            </param>
            <param name="endExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.RightOperand"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para> </para>
            </summary>
            <param name="visitor">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.BeginExpression">
            <summary>
                <para>Gets the expression for the first operand.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.Clone">
            <summary>
                <para>Creates a copy of the current BetweenOperator instance.
</para>
            </summary>
            <returns>A BetweenOperator object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.EndExpression">
            <summary>
                <para>Gets the expression for the second operand.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.

</para>
            </summary>
            <param name="obj">
		A BetweenOperator object to compare with the current object.

            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.BetweenOperator.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current BetweenOperator object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.LeftOperand">
            <summary>
                <para>Gets the expression for the first (left) operand.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.Property">
            <summary>
                <para>Gets or sets the test expression.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the test expression.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.RightOperand">
            <summary>
                <para>Gets the expression for the second (right) operand.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.BetweenOperator.TestExpression">
            <summary>
                <para>Gets or sets the test expression.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the test expression.
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.AggregateOperand">

            <summary>
                <para>An aggregate operator which calculates aggregate expressions (MIN, MAX, SUM, etc.)
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class.
</para>
            </summary>
            <param name="collectionProperty">
		A <see cref="T:System.String"/> value which specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example "Employer.Addresses".


            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,System.String,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified settings.
</para>
            </summary>
            <param name="collectionProperty">
		A <see cref="T:System.String"/> value which specifies the name of the collection property. It can be represented by a path through object relationships, for example "Employer.Addresses".

            </param>
            <param name="aggregatedExpression">
		A <see cref="T:System.String"/> value which specifies the name of the persistent property of the object from the <i>property</i> collection.

            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(DevExpress.Data.Filtering.OperandProperty,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified settings.
</para>
            </summary>
            <param name="collectionProperty">
		An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents the collection property. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> property.

            </param>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the aggregated expression. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregatedExpression"/> property.

            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.

            </param>
            <param name="condition">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,DevExpress.Data.Filtering.Aggregate)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified collection property and operator type.
</para>
            </summary>
            <param name="collectionProperty">
		A <see cref="T:System.String"/> value which specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example "Employer.Addresses".


            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,System.String,DevExpress.Data.Filtering.Aggregate)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified settings.
</para>
            </summary>
            <param name="collectionProperty">
		A <see cref="T:System.String"/> value which specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example "Employer.Addresses".



            </param>
            <param name="aggregatedExpression">
		A <see cref="T:System.String"/> value which specifies the name of the persistent property of the object from the <i>property</i> collection.

            </param>
            <param name="type">
		An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="visitor">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="visitor">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.AggregateOperand.AggregatedExpression">
            <summary>
                <para>Gets or sets the aggregated expression.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the aggregated expression.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType">
            <summary>
                <para>Gets or sets the type of the aggregate operator.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Avg(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new AggregateOperand  which returns the average of values calculated by the given aggregate expression. This expression is evaluated against elements of the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that match the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.



</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.

            </param>
            <returns>An AggregateOperand object which calculates an aggregate expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Clone">
            <summary>
                <para>Creates a copy of the current AggregateOperand instance.
</para>
            </summary>
            <returns>An AggregateOperand object which calculates an aggregate expression.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty">
            <summary>
                <para>Gets or sets a collection property whose elements are used to calculate an aggregate expression.

</para>
            </summary>
            <value>An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents the collection property.
</value>


        </member>
        <member name="P:DevExpress.Data.Filtering.AggregateOperand.Condition">
            <summary>
                <para>Gets or sets the filter criteria which is applied to <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> values.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. <b>null</b> (<b>Nothing</b> in Visual Basic) if the filter criteria isn't needed.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Count">
            <summary>
                <para>Creates a new AggregateOperand which returns the count of <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> elements that match the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.

</para>
            </summary>
            <returns>An AggregateOperand object which calculates an aggregate expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Count(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new AggregateOperand which returns the count of <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> elements that match the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression. This parameter may be ignored in certain circumstances.

            </param>
            <returns>An AggregateOperand object which calculates an aggregate expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Equals(System.Object)">
            <summary>
                <para>Determines whether the current object has the same settings as the specified object.
</para>
            </summary>
            <param name="obj">
		An AggregateOperand object to compare with the current object.


            </param>
            <returns><b>true</b> if the object specified by the parameter has the same settings as the current object; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Exists(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new AggregateOperand which determines whether or not the count of <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> elements that match the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> is greater than zero.
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.

            </param>
            <returns>An AggregateOperand object which calculates an aggregate expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Exists">
            <summary>
                <para>Creates a new AggregateOperand which determines whether or not the count of <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> elements that match the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> is greater than zero.


</para>
            </summary>
            <returns>An AggregateOperand object which calculates an aggregate expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current AggregateOperand object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.Filtering.AggregateOperand.IsTopLevel">
            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value><b>true</b> if the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> is <b>null</b> reference; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Max(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new AggregateOperand which returns the maximum of the values calculated by the given aggregate expression. This expression is evaluated against elements of the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that match the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.  This parameter may be ignored in certain circumstances.

            </param>
            <returns>An AggregateOperand object which calculates an aggregate expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Min(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new AggregateOperand which returns the minimum of the values calculated by the given aggregate expression. This expression is evaluated against elements of the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that match the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.

 
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.

            </param>
            <returns>An AggregateOperand object which calculates an aggregate expression. 
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Single(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new AggregateOperand which returns the single object from the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that matches the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>. The collection must be empty or contain exactly one object.

</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression. 

            </param>
            <returns>An AggregateOperand object which calculates an aggregate expression.
</returns>


        </member>
        <member name="M:DevExpress.Data.Filtering.AggregateOperand.Sum(DevExpress.Data.Filtering.CriteriaOperator)">
            <summary>
                <para>Creates a new AggregateOperand which returns the sum of values calculated by the given aggregate expression. This expression is evaluated against elements of the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that match the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.
</para>
            </summary>
            <param name="aggregatedExpression">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression. 

            </param>
            <returns>An AggregateOperand object which calculates an aggregate expression.
</returns>


        </member>
        <member name="T:DevExpress.Data.Filtering.UnaryOperatorType">

            <summary>
                <para>Enumerates unary operator types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.BitwiseNot">
            <summary>
                <para>Represents the bitwise NOT operator.

<para>
To create the <b>bitwise NOT</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("~Field1")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.IsNull">
            <summary>
                <para>Represents the operator which determines whether or not a given expression is NULL.

<para>
To create the is-null operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 IS NULL")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.Minus">
            <summary>
                <para>Represents the unary negation (-) operator.

<para>
To create the unary negation operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("-Field1 = -10")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.Not">
            <summary>
                <para>Represents the logical NOT.

<para>
To create the <b>logical NOT</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("NOT ((Field1 = A) OR (Field1 = B))")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.Plus">
            <summary>
                <para>Represents the unary plus (+) operator.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.FunctionOperatorType">

            <summary>
                <para>Enumerates function types that can be used by the <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> operators.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Abs">
            <summary>
                <para>Returns the absolute value of a specified numeric operand.

<para>If a specified operand is not numeric, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Abs</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Abs(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Acos">
            <summary>
                <para>Returns the angle (in radians) whose cosine is a specified numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Acos</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Acos(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddDays">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of days from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in days) from the original date. This number can be negative or positive. Its decimal part is part of a day.</para>

<para>To create the <b>AddDays</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddDays(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddHours">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of hours from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in hours) from the original date. This number can be negative or positive. Its decimal part is part of an hour.</para>

<para>To create the <b>AddHours</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddHours(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddMilliSeconds">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of milliseconds from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in milliseconds) from the original date. This number can be negative or positive. Its decimal part is part of a millisecond.</para>

<para>To create the <b>AddMilliSeconds</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddMilliseconds(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddMinutes">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of minutes from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in minutes) from the original date. This number can be negative or positive. Its decimal part is part of a minute.</para>

<para>To create the <b>AddMinutes</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddMinutes(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddMonths">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of months from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in months) from the original date. This number can be negative or positive.</para>

<para>To create the <b>AddMonths</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddMonths(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddSeconds">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of seconds from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in seconds) from the original date. This number can be negative or positive. Its decimal part is part of a second.</para>

<para>To create the <b>AddSeconds</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddSeconds(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddTicks">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of ticks from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in 100-nanosecond ticks) from the original date. This number can be negative or positive.</para>

<para>To create the <b>AddTicks</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddTicks(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddTimeSpan">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified time period from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - a <see cref="T:System.TimeSpan"/> object representing the time period from the original date.</para>

<para>To create the <b>AddTimeSpan</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddTimeSpan(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddYears">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of years from a specific date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the original date;</para>
<para>2 - the time period (in years) from the original date. This number can be negative or positive.</para>

<para>To create the <b>AddYears</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("AddYears(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Ascii">
            <summary>
                <para>Returns the ASCII code of the first character in a specified string operand.

<para>If a specified operand represents an empty string, <b>null</b> is returned.</para>

<para>To create the <b>Ascii</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Ascii(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Asin">
            <summary>
                <para>Returns the angle (in radians) whose sine is a specified numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Asin</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Asin(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Atn">
            <summary>
                <para>Returns the angle (in radians) whose tangent is a specified numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Atn</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Atn(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Atn2">
            <summary>
                <para>Returns the angle (in radians) whose tangent is the quotient of two specified numeric operands.

<para>The operator requires two operands representing the Cartesian coordinates (<i>x</i>, <i>y</i>) of a point:</para>
<para>1 - the <i>y</i> coordinate;</para>
<para>2 - the <i>x</i> coordinate.</para>

<para>If specified operands cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Atn2</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Atn2(y, x)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.BigMul">
            <summary>
                <para>Calculates the product of two specified numeric operands.
<para>The operator requires two operands representing the integer values to be multiplied.</para>

<para>If the specified operands do not represent integer values, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>BigMul</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("BigMul(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Ceiling">
            <summary>
                <para>Returns the smallest integer greater than or equal to a specified numeric operand. The rounding provided by this operator is called rounding toward positive infinity.

<para>If a specified operand is not numeric, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Ceiling</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Ceiling(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Char">
            <summary>
                <para>Converts a specified numeric operand to a Unicode character.

<para>If a specified operand cannot be converted to a decimal or integer number, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Char</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Char(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.CharIndex">
            <summary>
                <para>Returns the index of the first occurrence of a specified substring in a specified string.

<para>The operands should be defined as follows:</para>

<para>1 - a substring to search for;</para>
<para>2 - a string to be searched in;</para>
<para>3 - (optional) an integer that specifies the zero-based index at which the search starts. If this operand is not specified, the search begins from the start of the string;</para>
<para>4 - (optional) an integer that specifies the number of characters to examine, starting from the specified position. If this operand is not specified, the search continues until the end of the string.</para>

<para>This function performs a word (case-sensitive and culture-sensitive) search using the current culture. If a specified substring is found, the function returns its index. Otherwise, -1 is returned.</para>

<para>To create the <b>CharIndex</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("CharIndex(Field1, Field2)")</b>, <b>CriteriaOperator.Parse("CharIndex(Field1, Field2, Field3)")</b>, or <b>CriteriaOperator.Parse("CharIndex(Field1, Field2, Field3, Field4)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Concat">
            <summary>
                <para>Concatenates one or more strings.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Contains">
            <summary>
                <para>Returns True if one string occurs within another string; otherwise, False is returned.

<para>This function requires two string operands:</para>

<para>1 - a string to be searched;</para>
<para>2 - a substring to search.</para>

<para>
To create the <b>Contains</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("Contains(String, SubString)");</b>
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Cos">
            <summary>
                <para>Returns the cosine of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Cos</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Cos(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Cosh">
            <summary>
                <para>Returns the hyperbolic cosine of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Cosh</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Cosh(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Custom">
            <summary>
                <para><para>Identifies a custom operation. This operation is executed on the client side if its operands represent constants. A custom operation is executed on the server side only if its operands cannot be evaluated locally. To learn how to implement custom operators, refer to the How to: Implement a Custom Criteria Language Operator topic.</para>
<para>The eXpress Persistent Objects framework provides two custom function operators - <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> and <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.CustomNonDeterministic">
            <summary>
                <para>Identifies a custom nondeterministic operation.
<para>Unlike a standard custom operation, a custom nondeterministic operation is always executed on the server side, regardless of whether its operands are constants.</para>
<para>Refer to the How to: Implement a Custom Criteria Language Operator topic, to learn how to implement custom operators.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffDay">
            <summary>
                <para>Returns the count of day boundaries crossed between the specified starting date and ending date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffDay</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffDay(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffHour">
            <summary>
                <para>Returns the count of hour boundaries crossed between the specified starting date and ending date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffHour</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffHour(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffMilliSecond">
            <summary>
                <para>Returns the count of millisecond boundaries crossed between the specified starting date and ending date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffMilliSecond</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffMilliSecond(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffMinute">
            <summary>
                <para>Returns the count of minute boundaries crossed between the specified starting date and ending date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffMinute</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffMinute(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffMonth">
            <summary>
                <para>Returns the count of month boundaries crossed between the specified starting date and ending date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffMonth</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffMonth(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffSecond">
            <summary>
                <para>Returns the count of second boundaries crossed between the specified starting date and ending date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffSecond</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffSecond(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffTick">
            <summary>
                <para>Returns the count of tick boundaries crossed between the specified starting date and ending date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffTick</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffTick(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffYear">
            <summary>
                <para>Returns the count of year boundaries crossed between the specified starting date and ending date.

<para>The operands should be defined as follows:</para>

<para>1 - a <see cref="T:System.DateTime"/> object representing the starting date;</para>
<para>2 - a <see cref="T:System.DateTime"/> object representing the ending date.</para>

<para>To create the <b>DateDiffYear</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("DateDiffYear(StartDate, EndDate)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.EndsWith">
            <summary>
                <para>Returns True if the end of one string matches another string; otherwise, False is returned.

<para>This function requires two string operands:</para>

<para>1 - a string to be searched;</para>
<para>2 - a substring to search at the end of the first string.</para>

<para>
To create the <b>EndsWith</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("EndsWith(String, SubString)");</b>
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Exp">
            <summary>
                <para>Returns the number <b>e</b> raised to the power specified by a numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para><b>Exp</b> reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log"/>. Use the <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Power"/> operand to calculate powers of other bases.</para>

<para>To create the <b>Exp</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Exp(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Floor">
            <summary>
                <para>Returns the largest integer less than or equal to a specified numeric operand. The rounding provided by this operator is called rounding toward negative infinity.

<para>If a specified operand is not numeric, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Floor</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Floor(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDate">
            <summary>
                <para>Returns the date part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value represents a <see cref="T:System.DateTime"/> object with the same date part, and the time part set to 00:00:00.</para>

<para>To create the <b>GetDate</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetDate(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDay">
            <summary>
                <para>Gets the day part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 1 and 31.</para>

<para>To create the <b>GetDay</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetDay(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDayOfWeek">
            <summary>
                <para>Gets a specified date's day of the week.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value represents a <see cref="T:System.Int32"/> equivalent of a <see cref="T:System.DayOfWeek"/> enumerated constant representing a day of the week.</para>

<para>To create the <b>GetDayOfWeek</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetDayOfWeek(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDayOfYear">
            <summary>
                <para>Gets a specified date's day of the year.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 1 and 366.</para>

<para>To create the <b>GetDayOfYear</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetDayOfYear(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetHour">
            <summary>
                <para>Gets the hour part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 0 and 23.</para>

<para>To create the <b>GetHour</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetHour(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetMilliSecond">
            <summary>
                <para>Gets the milliseconds part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 0 and 999.</para>

<para>To create the <b>GetMilliSecond</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetMilliSecond(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetMinute">
            <summary>
                <para>Gets the minute part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 0 and 59.</para>

<para>To create the <b>GetMinute</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetMinute(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetMonth">
            <summary>
                <para>Gets the month part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 1 and 12.</para>

<para>To create the <b>GetMonth</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetMonth(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetSecond">
            <summary>
                <para>Gets the seconds part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 0 and 59.</para>

<para>To create the <b>GetSecond</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetSecond(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetTimeOfDay">
            <summary>
                <para>Gets the time part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value represents a <see cref="T:System.Int64"/> object that is equal to the number of 100-nanosecond ticks that have elapsed since midnight.</para>

<para>To create the <b>GetTimeOfDay</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("GetTimeOfDay(Field1)")</b>.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetYear">
            <summary>
                <para>Gets the year part of a specified date.

<para>This operator requires an operand of the <see cref="T:System.DateTime"/> type.</para>

<para>The return value ranges between 1 and 9999.</para>

<para>To create the <b>GetYear</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("GetYear(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Iif">
            <summary>
                <para>Returns one of two values depending upon the value of a logical expression.

<para>
The function requires three operands of the  <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class:
</para>

<para>
1 - determines the logical expression;
</para>
<para>
2 - specifies the value that will be returned if the logical expression evaluates to TRUE;
</para>
<para>
3 - specifies the value that  will be returned if the logical expression evaluates to FALSE.
</para>

<para>
To create the <b>Iif</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("Iif(Field1 == 100, Field1, Field2)")</b>
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Insert">
            <summary>
                <para>Inserts a specified string at a certain position within another.

<para>The operands should be defined as follows:</para>

<para>1 - a string in which the insertion is to be performed;</para>
<para>2 - an integer that specifies the zero-based index position of the insertion;</para>
<para>3 - a string to insert.</para>

<para>To create the <b>Insert</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Insert(Field1, Field2, Field3)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsApril">
            <summary>
                <para>Returns True if the specified date falls within April.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsAugust">
            <summary>
                <para>Returns True if the specified date falls within August.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsDecember">
            <summary>
                <para>Returns True if the specified date falls within December.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsFebruary">
            <summary>
                <para>Returns True if the specified date falls within February.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsJanuary">
            <summary>
                <para>Returns True if the specified date falls within January.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsJuly">
            <summary>
                <para>Returns True if the specified date falls within July.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsJune">
            <summary>
                <para>Returns True if the specified date falls within June.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsLastMonth">
            <summary>
                <para>Returns True if the specified date falls within the previous month.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsLastYear">
            <summary>
                <para>Returns True if the specified date falls within the previous year.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsMarch">
            <summary>
                <para>Returns True if the specified date falls within March.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsMay">
            <summary>
                <para>Returns True if the specified date falls within May.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNextMonth">
            <summary>
                <para>Returns True if the specified date falls within the next month.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNextYear">
            <summary>
                <para>Returns True if the specified date falls within the next year.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNovember">
            <summary>
                <para>Returns True if the specified date falls within November.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNull">
            <summary>
                <para>Compares the first operand with the NULL value.

This function requires one or two operands of the  <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class. The value returned depends upon the number of arguments.

<para>
If a single operand is passed, the function returns <b>true</b> if the operand is <b>null</b>, otherwise, <b>false</b> is returned.
</para>

<para>
If two operands are passed, the function returns the second operand if the first operand is <b>null</b>, otherwise, the first operand is returned.
</para>

<para>
To create the <b>IsNull</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("IsNull(Field1)")</b> or <b>CriteriaOperator.Parse("IsNull(Field1AndTrueResult, FalseResult)")</b>.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNullOrEmpty">
            <summary>
                <para>Indicates whether a specified operand is a null reference or an empty string.

<para>The function returns <b>true</b> if a specified operand is <b>null</b> or an empty string, otherwise, <b>false</b> is returned.</para>

<para>To create the <b>IsNullOrEmpty</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("IsNullOrEmpty(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOctober">
            <summary>
                <para>Returns True if the specified date falls within October.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalBeyondThisYear">
            <summary>
                <para>The Boolean Is Beyond This Year operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: <i>date</i> &gt;= First Day of Next Year
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisMonth">
            <summary>
                <para>The Boolean Is Earlier This Month operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of This Month &lt;= <i>date</i> &lt; First Day of Last Week
</para>


</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisWeek">
            <summary>
                <para>The Boolean Is Earlier This Week operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of This Week &lt;= <i>date</i> &lt; Yesterday
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisYear">
            <summary>
                <para>The Boolean Is Earlier This Year operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of This Year &lt;= <i>date</i> &lt; First Day of This Month
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLastWeek">
            <summary>
                <para>The Boolean Is Last Week operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of Last Week &lt;= <i>date</i> &lt; First Day of This Week
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisMonth">
            <summary>
                <para>The Boolean Is Later This Month operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: 
Last Day of Next Week &lt; <i>date</i> &lt; First Day of Next Month
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisWeek">
            <summary>
                <para>The Boolean Is Later This Week operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: 
Day After Tomorrow &lt;= <i>date</i> &lt; First Day of Next Week
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisYear">
            <summary>
                <para>The Boolean Is Later This Year operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of Next Month &lt;= <i>date</i> &lt; First Day of Next Year
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalNextWeek">
            <summary>
                <para>The Boolean Is Next Week operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: First Day of Next Week &lt;= <i>date</i> &lt;= Last Day of Next Week
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalPriorThisYear">
            <summary>
                <para>The Boolean Is Prior This Year operator for date/time values. Requires one argument.
<para>
The operator is defined as follows: <i>date</i> &lt; First Day of This Year
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalToday">
            <summary>
                <para>The Boolean Is Today operator for date/time values. Requires one argument.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalTomorrow">
            <summary>
                <para>The Boolean Is Tomorrow operator for date/time values. Requires one argument.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalYesterday">
            <summary>
                <para>The Boolean Is Yesterday operator for date/time values. Requires one argument.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsSameDay">
            <summary>
                <para>Returns True if the specified date/time values fall within the same day.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsSeptember">
            <summary>
                <para>Returns True if the specified date falls within September.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsThisMonth">
            <summary>
                <para>Returns True if the specified date falls within the current month.

<para>To create the <b>IsThisMonth</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("IsThisMonth(StartDate)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsThisWeek">
            <summary>
                <para>Returns True if the specified date falls within the current week.

<para>To create the <b>IsThisWeek</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("IsThisWeek(StartDate)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsThisYear">
            <summary>
                <para>Returns True if the specified date falls within the current year.

<para>To create the <b>IsThisYear</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("IsThisYear(StartDate)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsYearToDate">
            <summary>
                <para>Returns True if the specified date falls within the year-to-date period (starting from the first day of the current year and continuing up to the current date).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Len">
            <summary>
                <para>Returns the length of the string specified by an operand.

<para>
The operand should be an object of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> type.
</para>


<para>
To create the <b>Len</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("Len(Field1)");</b>
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeDayAfterTomorrow">
            <summary>
                <para>Returns the DateTime value corresponding to the day after Tomorrow.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeLastMonth">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the previous month. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeLastWeek">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the previous week.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeLastYear">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the previous year. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNextMonth">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of next month.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNextWeek">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the following week.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNextYear">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the following year.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNow">
            <summary>
                <para>Returns the DateTime value corresponding to the current moment in time.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeThisMonth">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the current month.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeThisWeek">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the current week.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeThisYear">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the current year.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeToday">
            <summary>
                <para>Returns the DateTime value corresponding to Today.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeTomorrow">
            <summary>
                <para>Returns the DateTime value corresponding to Tomorrow.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeTwoMonthsAway">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the month after next. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeTwoWeeksAway">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the week after next.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeTwoYearsAway">
            <summary>
                <para>Returns the DateTime value corresponding to the first day of the year after next. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeYearBeforeToday">
            <summary>
                <para>Returns the DateTime value corresponding to the day one year ago. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeYesterday">
            <summary>
                <para>Returns the DateTime value corresponding to Yesterday.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Log">
            <summary>
                <para>Returns the logarithm of a specified numeric operand. The return value depends upon the number of operands.

<para>If one operand is passed, the natural (base <b>e</b>) logarithm of a specified operand is returned.</para>

<para>If two operands are passed, the logarithm of a specified operand in a specified base is returned. The operands should be defined as follows:</para> 
<para>1 - a number whose logarithm is to be calculated;</para>
<para>2 - the base of the logarithm.</para>

<para>If specified operands cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para><b>Log</b> reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Exp"/>. To calculate the base 10 logarithm, use <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log10"/>.</para>

<para>To create the <b>Log</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Log(Field1)")</b> or <b>CriteriaOperator.Parse("Log(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Log10">
            <summary>
                <para>Returns the base 10 logarithm of a specified numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para><b>Log10</b> reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Power"/>. Use the <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log"/> operand to calculate the logarithm of other bases.</para>

<para>To create the <b>Log10</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Log10(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Lower">
            <summary>
                <para>Converts all characters in a string operand to lowercase.
<para>
The operand should be an object of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> type.
</para>
To create the <b>Lower</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Lower(Field1)");</b> 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Max">
            <summary>
                <para>Returns the larger of two numeric values. 

<para>The operands should be defined as follows:</para>

<para>1 - a numeric value A;</para>
<para>2 - a numeric value B;</para>

<para>To create the <b>Max</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Max(ValueA, ValueB)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Min">
            <summary>
                <para>Returns the smaller of two numeric values.

<para>The operands should be defined as follows:</para>

<para>1 - a numeric value A;</para>
<para>2 - a numeric value B;</para>

<para>To create the <b>Min</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Min(ValueA, ValueB)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.None">
            <summary>
                <para>The function type is not specified.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Now">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the system's current date and time.

<para>To create the <b>Now</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Now()")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.PadLeft">
            <summary>
                <para>Pads a string with spaces or a specified Unicode character on the left for a specified total length.

<para>The operands should be defined as follows:</para>
<para>1 - a string to be padded;</para>
<para>2 - the total number of characters in the resulting string, including padding characters;</para>
<para>3 - (optional) a Unicode padding character. If not specified, the space character is used for padding. If a string is passed as this operand, its first character is used for padding.</para>

<para>To create the <b>PadLeft</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("PadLeft(Field1, Field2)")</b> or <b>CriteriaOperator.Parse("PadLeft(Field1, Field2, Field3)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.PadRight">
            <summary>
                <para>Pads a string with spaces or a specified Unicode character on the right for a specified total length.

<para>The operands should be defined as follows:</para>
<para>1 - a string to be padded;</para>
<para>2 - the total number of characters in the resulting string, including padding characters;</para>
<para>3 - (optional) a Unicode padding character. If not specified, the space character is used for padding. If a string is passed as this operand, its first character is used for padding.</para>

<para>To create the <b>PadRight</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("PadRight(Field1, Field2)")</b> or <b>CriteriaOperator.Parse("PadRight(Field1, Field2, Field3)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Power">
            <summary>
                <para>Returns a specified numeric operand raised to a specific power.

<para>The <b>Power</b> operator requires two operands:</para>
<para>1 - a number to be raised to a power;</para>
<para>2 - a power.</para>

<para>If specified operands cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para><b>Power</b> reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log"/> or <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log10"/>. Use the <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Exp"/> operand to calculate powers of the number <b>e</b>.</para>

<para>To create the <b>Power</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Power(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Remove">
            <summary>
                <para>Removes all, or a certain number of characters from a specified string, starting at a specified position.

<para>The operands should be defined as follows:</para>

<para>1 - a string to be shrunk;</para>
<para>2 - an integer that specifies the zero-based index at which character removal starts;</para>
<para>3 - (optional) an integer that specifies the number of characters to remove, starting at the specified position. If this operand is not specified, all characters between the starting position and the end of the string are removed.</para>

<para>To create the <b>Remove</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Remove(Field1, Field2)")</b> or <b>CriteriaOperator.Parse("Remove(Field1, Field2, Field3)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Replace">
            <summary>
                <para>Replaces all occurrences of a certain string in a specified string, with another.

<para>The operands should be defined as follows:</para>

<para>1 - a string in which replacements are to be performed;</para>
<para>2 - a string to be replaced;</para>
<para>3 - a string to replace all occurrences found.</para>

<para>To create the <b>Replace</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Replace(Field1, Field2, Field3)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Reverse">
            <summary>
                <para>Reverses the order of characters within a specified string.

<para>To create the <b>Reverse</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Reverse(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Rnd">
            <summary>
                <para>Returns a random number greater than or equal to 0.0, and less than 1.0.

<para>To create the <b>Rnd</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Rnd()")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Round">
            <summary>
                <para>Rounds a specified numeric operand to the nearest integer or to a specified number of decimal places. The rounding provided by this operator is called rounding to nearest or banker's rounding.

<para>The operands should be defined as follows:</para>
<para>1 - a value to round;</para>
<para>2 - (optional) a value specifying the number of decimal places to round to. <b>0</b> indicates that the first operand is rounded to the nearest integer.</para>

<para>To create the <b>Round</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Round(Field1)")</b> or <b>CriteriaOperator.Parse("Round(Field1, Field2)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sign">
            <summary>
                <para>Returns a value indicating the sign of a number represented by a specified operand. The function returns one of the following values:
<para>1, for positive numbers;</para>
<para>-1, for negative numbers;</para>
<para>0, if the number is equal to zero.</para>

<para>If a specified operand is not numeric, <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Sign</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: <b>CriteriaOperator.Parse("Sign(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sin">
            <summary>
                <para>Returns the sine of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Sin</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Sin(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sinh">
            <summary>
                <para>Returns the hyperbolic sine of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Sinh</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Sinh(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sqr">
            <summary>
                <para>Returns the square root of a specified numeric operand.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Sqr</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Sqr(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.StartsWith">
            <summary>
                <para>Returns True if the beginning of one string matches another string; otherwise, False is returned.

<para>This function requires two string operands:</para>

<para>1 - a string to be searched;</para>
<para>2 - a substring to search at the beginning of the first string.</para>

<para>
To create the <b>StartsWith</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("StartsWith(String, SubString)");</b>
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Substring">
            <summary>
                <para>Returns a substring extracted from the specified string. This function requires two or three operands of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class.
<para>
If two operands are passed the substring will be extracted from the beginning of the original string. The operands should be defined as follows:
</para>
<para>
1 - an original string;
</para>
<para>
2 - an integer that specifies the zero-based index at which the substring to return begins.
</para>

<para>
If three operands are passed a substring can be subtracted starting from any position in the original string. The operands should be defined as follows:

</para>
<para>
1 - an original string;
</para>
<para>
2 - an integer that specifies the zero-based index at which the substring to return begins;
</para>
<para>
3 - an integer that specifies the length of the substring.
</para>

<para>
To create a <b>Substring</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("Substring(Field1, 1, 3)");</b>
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Tan">
            <summary>
                <para>Returns the tangent of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Tan</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Tan(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Tanh">
            <summary>
                <para>Returns the hyperbolic tangent of a specified numeric operand representing an angle, measured in radians.

<para>If a specified operand cannot be converted to <see cref="T:System.Double"/>, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>Tanh</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Tanh(Field1)")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Today">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the system's current date. The object's time part is set to 00:00:00.

<para>To create the <b>Today</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Today()")</b>.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToDecimal">
            <summary>
                <para>Converts a numeric operand to a fixed-point (exact-value) representation.

<para>To create the <b>ToDecimal</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("ToDecimal(Field2)")</b>.</para>

<para>Note that the resulting value may vary, based on the database system used as the backend.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToDouble">
            <summary>
                <para>Converts a numeric operand to a double-precision floating-point (approximate-value) representation.

<para>To create the <b>ToDouble</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("ToDouble(Field2)")</b>.</para>

<para>Note that the resulting value may vary, based on the database system used as the backend.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToFloat">
            <summary>
                <para>Converts a numeric operand to a floating-point (approximate-value) representation.

<para>To create the <b>ToFloat</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("ToFloat(Field2)")</b>.</para>

<para>Note that the resulting value may vary, based on the database system used as the backend.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToInt">
            <summary>
                <para>Converts a numeric operand to an integer representation.

<para>To create the <b>ToInt</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("ToInt(Field2)")</b>.</para>

<para>Note that the resulting value may vary, based on the database system used as the backend.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToLong">
            <summary>
                <para>Converts a numeric operand to a long integer representation.

<para>To create the <b>ToLong</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("ToLong(Field2)")</b>.</para>

<para>Note that the resulting value may vary, based on the database system used as the backend.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToStr">
            <summary>
                <para>Returns a string representation of a specified numeric operand.

<para>If a specified operand is not numeric, the <b>System.NotSupportedException</b> is thrown.</para>

<para>To create the <b>ToStr</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("ToStr(Field1)")</b>.</para>

<para>Note that the resulting string may vary, based on the format settings of the database system used as the backend.</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Trim">
            <summary>
                <para>Returns a string containing a copy of a specified string with no leading nor trailing spaces. This function requires a single operand of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class that refers to the original string.

<para>
To create the <b>Trim</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax: 
<b>CriteriaOperator.Parse("Trim(Field2)");</b>
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Upper">
            <summary>
                <para>Converts all characters in a string operand to uppercase.
<para>
The operand should be an object of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> type.
</para>
To create the <b>Upper</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("Upper(Field1)");</b> 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.UtcNow">
            <summary>
                <para>Returns a <see cref="T:System.DateTime"/> object representing the current Coordinated Universal Time (UTC) date and time.

<para>To create the <b>UtcNow</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method, use the following syntax: <b>CriteriaOperator.Parse("UtcNow()")</b>.</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.BinaryOperatorType">

            <summary>
                <para>Enumerates binary operator types.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.BitwiseAnd">
            <summary>
                <para>Represents the bitwise AND operator.

<para>
To create the <b>bitwise AND</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 &amp; 128 = 128")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.BitwiseOr">
            <summary>
                <para>Represents the bitwise OR operator.

<para>
To create the <b>bitwise OR</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 | 3")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.BitwiseXor">
            <summary>
                <para>Represents the bitwise XOR operator.

<para>
To create the <b>bitwise XOR</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("(Field1 ^ Field2) = 1")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Divide">
            <summary>
                <para>Represents the division operator.

<para>
To create the division operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>
<b>CriteriaOperator.Parse("Field1 / Field2 = 2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Equal">
            <summary>
                <para>Represents the Boolean equality operator.

<para>
To create the Boolean equality operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 = Field2")</b>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Greater">
            <summary>
                <para>Represents the Boolean greater-than operator.

<para>
To create the Boolean greater-than operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 &gt; Field2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.GreaterOrEqual">
            <summary>
                <para>Represents the Boolean greater-than-or-equal-to operator.

<para>
To create the Boolean greater-than-or-equal-to operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 &gt;= Field2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Less">
            <summary>
                <para>Represents the Boolean less-than operator.

<para>
To create the Boolean less-than operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 &lt; Field2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.LessOrEqual">
            <summary>
                <para>Represents the Boolean less-than-or-equal-to operator.

<para>
To create the Boolean less-than-or-equal-to operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 &lt;= Field2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Like">
            <summary>
                <para>The LIKE operator. This operator behavior is different, depending on current circumstances. We recommend that you use <b>StartsWith</b>, <b>Contains</b> and <b>EndsWith</b> function operators instead of <b>Like</b>, where possible. 
<!--
<para>
To create the <b>LIKE</b> operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 like '%val1%' OR Field1 like '%val2%'")</b>-->
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Minus">
            <summary>
                <para>Represents the subtraction operator.

<para>
To create the subtraction operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 - Field2 = 10")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Modulo">
            <summary>
                <para>Represents the modulus operator (computes the remainder after dividing its first operand by its second).

<para>
To create the modulus operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 % Field2 = 1")</b>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Multiply">
            <summary>
                <para>Represents the multiplication operator.

<para>
To create the multiplication operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 * Field2 = 100")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.NotEqual">
            <summary>
                <para>Represents the Boolean inequality operator.

<para>
To create the Boolean inequality operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 != Field2")</b> or <b>CriteriaOperator.Parse("Field1 &lt;&gt; Field2")</b>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Plus">
            <summary>
                <para>Represents the addition operator.

<para>
To create the addition operator using the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.Parse"/> method use the following syntax:
</para>

<b>CriteriaOperator.Parse("Field1 + Field2 = 20")</b>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.Aggregate">

            <summary>
                <para>Enumerates aggregate functions.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Avg">
            <summary>
                <para>Evaluates the average of the values in the collection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Count">
            <summary>
                <para>Returns the number of objects in the collection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Exists">
            <summary>
                <para>Determines whether the object exists in the collection. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Max">
            <summary>
                <para>Returns the maximum expression value in the collection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Min">
            <summary>
                <para>Returns the minimum expression value in the collection.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Single">
            <summary>
                <para>Returns a single object from the collection. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.Aggregate.Sum">
            <summary>
                <para>Returns the sum of all the expression values in the collection.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpo.SortProperty">

            <summary>
                <para>An element in the <see cref="T:DevExpress.Xpo.SortingCollection"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpo.SortProperty.#ctor(System.String,DevExpress.Xpo.DB.SortingDirection)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SortProperty"/> class with a property name to sort against and the sort order.
</para>
            </summary>
            <param name="propertyName">
		A <see cref="T:System.String"/> value which specifies the name of the property to sort against. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.PropertyName"/> property.

            </param>
            <param name="sorting">
		A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the property's sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.Direction"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpo.SortProperty.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SortProperty"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpo.SortProperty.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.DB.SortingDirection)">
            <summary>
                <para>Initializes a new instance of the SortProperty class.
</para>
            </summary>
            <param name="property">
		A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression used to sort values. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.Property"/> property.

            </param>
            <param name="direction">
		A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the property's sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.Direction"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Xpo.SortProperty.Direction">
            <summary>
                <para>Gets or sets the property's sort order.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the property's sort order.
</value>


        </member>
        <member name="P:DevExpress.Xpo.SortProperty.Property">
            <summary>
                <para>Gets or sets the expression used to sort values.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression used to sort values.
</value>


        </member>
        <member name="P:DevExpress.Xpo.SortProperty.PropertyName">
            <summary>
                <para>Gets or sets the name of the property to sort against.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> value which specifies the name of the property that identifies the sorted column in a data store. This value is case-sensitive.

</value>


        </member>
        <member name="T:DevExpress.Data.Browsing.Design.TypeSpecificsService">

            <summary>
                <para>For internal use.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Browsing.Design.TypeSpecificsService.#ctor">
            <summary>
                <para>Initializes a new instance of the TypeSpecificsService class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.TypeSpecificsService.GetPropertyTypeSpecifics(System.ComponentModel.PropertyDescriptor)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="property">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.TypeSpecificsService.GetTypeSpecifics(System.Type)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="type">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Data.Browsing.Design.PickManagerBase">

            <summary>
                <para>For internal use.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.AreContainDummyNode(System.Collections.IList)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="nodes">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.ContainsDummyNode(System.Collections.IList)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="list">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="P:DevExpress.Data.Browsing.Design.PickManagerBase.Executor">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FillContent(System.Collections.IList,System.Collections.ObjectModel.Collection`1,System.Boolean)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="nodes">
		 

            </param>
            <param name="dataSources">
		 

            </param>
            <param name="addNoneNode">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FillContent(System.Collections.IList,System.Collections.IList,System.Boolean)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="nodes">
		 

            </param>
            <param name="dataSources">
		 

            </param>
            <param name="addNoneNode">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FillNodes(System.Object,System.String,System.Collections.IList)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="dataSource">
		 

            </param>
            <param name="dataMember">
		 

            </param>
            <param name="nodes">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FindDataMemberNode(System.Collections.IList,System.Object,System.String)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="nodes">
		 

            </param>
            <param name="dataSource">
		 

            </param>
            <param name="dataMember">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FindDataMemberNode(System.Collections.IList,System.String)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="nodes">
		 

            </param>
            <param name="dataMember">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FindDataMemberNode(System.Collections.IList,System.String,System.Action`1)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="nodes">
		 

            </param>
            <param name="dataMember">
		 

            </param>
            <param name="callback">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FindNoneNode(System.Collections.IList)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="nodes">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FindSourceNode(System.Collections.IList,System.Object)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="nodes">
		 

            </param>
            <param name="dataSource">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.GetDataSourceName(System.Object,System.String,DevExpress.Data.Browsing.Design.IPropertiesProvider,System.EventHandler`1)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="dataSource">
		 

            </param>
            <param name="dataMember">
		 

            </param>
            <param name="provider">
		 

            </param>
            <param name="callback">
		 

            </param>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.GetDataSourceNode(DevExpress.Data.Browsing.Design.INode)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="node">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.OnNodeExpand(System.Object,DevExpress.Data.Browsing.Design.INode)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="dataSource">
		 

            </param>
            <param name="node">
		 

            </param>


        </member>
        <member name="T:DevExpress.XtraGrid.ColumnFilterMode">

            <summary>
                <para>Contains values that specify how a column's data is filtered via the <b>auto filter row</b> and <b>filter dropdown</b>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraGrid.ColumnFilterMode.DisplayText">
            <summary>
                <para>A column's data is filtered by the display text.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnFilterMode.Value">
            <summary>
                <para>A column's data is filtered by the edit values.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.ODataLinq.ODataServerModeSource">

            <summary>
                <para>The data source for the GridControl and SearchLookUpEdit controls that binds these controls to OData service in Server Mode.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.ODataLinq.ODataServerModeSource.#ctor">
            <summary>
                <para>Initializes a new instance of the ODataServerModeSource class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.ODataLinq.ODataServerModeSource.#ctor(DevExpress.Data.Helpers.ServerModeCoreExtender)">
            <summary>
                <para>This constructor is intended for internal use.
</para>
            </summary>
            <param name="extender">
		 

            </param>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.DefaultSorting">
            <summary>
                <para>Specifies how data source contents are sorted by default when the sort order is not specified by the bound control.

</para>
            </summary>
            <value>A string which contains the column name(s) against which data source contents are sorted and the sort order(s). 
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.ElementType">
            <summary>
                <para>Specifies the type of objects retrieved from a data source.
</para>
            </summary>
            <value>The type of objects retrieved from a data source.
</value>


        </member>
        <member name="E:DevExpress.Data.ODataLinq.ODataServerModeSource.ExceptionThrown">
            <summary>
                <para>Occurs when the data source exception is thrown.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.Extender">
            <summary>
                <para>This property is intended for internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.FixedFilterCriteria">
            <summary>
                <para>Specifies the criteria used to filter objects on the data store side. These criteria are never affected by bound data-aware controls.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side. 
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.FixedFilterString">
            <summary>
                <para>Specifies a string representation of an expression used to filter objects on the data store side. This filter is never affected by bound data-aware controls.
</para>
            </summary>
            <value>A string specifying the filter expression applied to data on the data store side.
</value>


        </member>
        <member name="E:DevExpress.Data.ODataLinq.ODataServerModeSource.InconsistencyDetected">
            <summary>
                <para>Occurs when an inconsistency has been detected during an operation on a data source.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.KeyExpression">
            <summary>
                <para>Specifies the name of the key property.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the key property name.
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.KeyExpressions">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.Query">
            <summary>
                <para>Specifies the query request to the OData service.
</para>
            </summary>
            <value>An <a href="https://msdn.microsoft.com/en-us/library/system.linq.iqueryable(v=vs.110).aspx">IQueryable</a> object that specifies the query request to the OData service.
</value>


        </member>
        <member name="M:DevExpress.Data.ODataLinq.ODataServerModeSource.Reload">
            <summary>
                <para>Forces the bound data-aware control to reload data from the data store.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.ODataLinq.ODataServerModeSource.UseIncludeTotalCountInsteadOfCount">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource">

            <summary>
                <para>The data source for the GridControl and SearchLookUpEdit controls that binds these controls to OData service in Instant Feedback Mode.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.#ctor(System.EventHandler`1)">
            <summary>
                <para>Initializes a new instance of the ODataInstantFeedbackSource with the specified settings.
</para>
            </summary>
            <param name="getSource">
		An <see cref="T:System.EventHandler`1[[DevExpress.Data.ODataLinq.GetSourceEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.

            </param>


        </member>
        <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.#ctor(System.Action`1)">
            <summary>
                <para>Initializes a new instance of the ODataInstantFeedbackSource with the specified settings.
</para>
            </summary>
            <param name="getSource">
		An <see cref="T:System.Action`1[[DevExpress.Data.ODataLinq.GetSourceEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.

            </param>


        </member>
        <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.#ctor">
            <summary>
                <para>Initializes a new instance of the ODataInstantFeedbackSource class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.#ctor(System.EventHandler`1,System.EventHandler`1)">
            <summary>
                <para>Initializes a new instance of the ODataInstantFeedbackSource with the specified settings.
</para>
            </summary>
            <param name="getSource">
		An <see cref="T:System.EventHandler`1[[DevExpress.Data.ODataLinq.GetSourceEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.

            </param>
            <param name="freeSource">
		An <see cref="T:System.EventHandler`1[[DevExpress.Data.ODataLinq.GetSourceEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DismissSource"/> event. The specified delegate is attached to this event.

            </param>


        </member>
        <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.#ctor(System.Action`1,System.Action`1)">
            <summary>
                <para>Initializes a new instance of the ODataInstantFeedbackSource with the specified settings.
</para>
            </summary>
            <param name="getSource">
		An <see cref="T:System.Action`1[[DevExpress.Data.ODataLinq.GetSourceEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.

            </param>
            <param name="freeSource">
		An <see cref="T:System.Action`1[[DevExpress.Data.ODataLinq.GetSourceEventArgs]]"/> delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DismissSource"/> event. The specified delegate is attached to this event.

            </param>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.AreSourceRowsThreadSafe">
            <summary>
                <para>Specifies whether elements retrieved by the ODataInstantFeedbackSource's queryable source are thread-safe.
</para>
            </summary>
            <value><b>true</b>, if elements retrieved by the queryable source are thread-safe; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DefaultSorting">
            <summary>
                <para>Specifies how data source contents are sorted by default when the sort order is not specified by the bound control.

</para>
            </summary>
            <value>The string which contains the column name(s) against which data source contents are sorted and the sort order(s). 
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DesignTimeElementType">
            <summary>
                <para>Specifies the type of objects that will be retrieved from a data source at design time.

</para>
            </summary>
            <value>A type of objects that will be retrieved from a data source.
</value>


        </member>
        <member name="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DismissSource">
            <summary>
                <para>Occurs when the ODataInstantFeedbackSource no longer needs the queryable source it used to retrieve objects from the OData service.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.FixedFilterCriteria">
            <summary>
                <para>Specifies the criteria used to filter objects on the data store side. These criteria are never affected by bound data-aware controls.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side. 
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.FixedFilterString">
            <summary>
                <para>Specifies a string representation of an expression used to filter objects on the data store side. This filter is never affected by bound data-aware controls.
</para>
            </summary>
            <value>A string specifying the filter expression applied to data on the data store side.
</value>


        </member>
        <member name="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource">
            <summary>
                <para>Occurs when the ODataInstantFeedbackSource needs a queryable source to retrieve objects from the OData service.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.KeyExpression">
            <summary>
                <para>Specifies the name of the key property.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the key property name.
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.KeyExpressions">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.Refresh">
            <summary>
                <para>Refreshes the ODataInstantFeedbackSource.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.ODataLinq.GetSourceEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource"/> and <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DismissSource"/> events.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.ODataLinq.GetSourceEventArgs.#ctor(DevExpress.Data.Helpers.ServerModeCoreExtender)">
            <summary>
                <para>This constructor is intended for internal use.
</para>
            </summary>
            <param name="extender">
		 

            </param>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.AreSourceRowsThreadSafe">
            <summary>
                <para>Specifies whether elements retrieved by the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/>'s queryable source are thread-safe.
</para>
            </summary>
            <value><b>true</b>, if elements retrieved by the queryable source are thread-safe; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.Extender">
            <summary>
                <para>This property is intended for internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.KeyExpressions">
            <summary>
                <para>Gets or sets the name of the key property.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value indicating the key property name.
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.Query">
            <summary>
                <para>Specifies the query request to the OData service.
</para>
            </summary>
            <value>An <a href="https://msdn.microsoft.com/en-us/library/system.linq.iqueryable(v=vs.110).aspx">IQueryable</a> object that specifies the query request to the OData service.
</value>


        </member>
        <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.Tag">
            <summary>
                <para>Gets or sets an arbitrary object associated with a queryable source.
</para>
            </summary>
            <value>An object associated with a queryable source.
</value>


        </member>
        <member name="T:DevExpress.Utils.OptionsLayoutGrid">

            <summary>
                <para>Contains options that specify how a control's layout is stored to and restored from storage (a stream, xml file or system registry).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutGrid.#ctor">
            <summary>
                <para>Initializes a new instance of the OptionsLayoutGrid class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutGrid.Assign(DevExpress.Utils.Controls.BaseOptions)">
            <summary>
                <para>Copies all the settings from the options object passed as the parameter.

</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.Columns">
            <summary>
                <para>Contains options that specify how the columns' and bands' settings are stored to and restored from storage (a stream, xml file or sysytem registry).
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.OptionsColumnLayout"/> object that specifies how the columns' and bands' settings are stored to and restored from storage.

</value>


        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutGrid.Reset">
            <summary>
                <para>Resets all options to their default values.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreAllOptions">
            <summary>
                <para>Gets or sets whether all the control's settings (except for the appearance settings and format rules) are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if all the control's settings are included in the layout when it's saved to storage and these settings are restored when the layout is restored from the storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreAppearance">
            <summary>
                <para>Gets or sets whether the control's appearance settings are also stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the control's appearance settings are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreDataSettings">
            <summary>
                <para>Gets or sets whether the control's grouping, sorting, filtering settings and summaries are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the control's grouping, sorting, filtering settings and summaries are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreFormatRules">
            <summary>
                <para>Gets or sets whether MS Excel-style conditional formatting rules are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if MS Excel-style conditional formatting rules are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreVisualOptions">
            <summary>
                <para>Gets or sets whether the control's visual options are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the control's visual options are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.OptionsLayoutBase">

            <summary>
                <para>Represents the base class for classes which contain the options that are responsible for how the control's layout is stored to and restored from storage (a stream, xml file or system registry).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutBase.#ctor">
            <summary>
                <para>Initializes a new instance of the OptionsLayoutBase class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutBase.Assign(DevExpress.Utils.Controls.BaseOptions)">
            <summary>
                <para>Copies settings from the specified object to the current object.
</para>
            </summary>
            <param name="source">
		An object whose settings are copied to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutBase.FullLayout">
            <summary>
                <para>Returns an <see cref="T:DevExpress.Utils.OptionsLayoutBase"/> object whose settings indicate that the full layout of the control should be stored to and restored from storage (a stream, xml file or system registry).

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.OptionsLayoutBase"/> object whose settings indicate that the full layout of the control should be stored to/restored from storage.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutBase.LayoutVersion">
            <summary>
                <para>Gets or sets the version of the layout.

</para>
            </summary>
            <value>A string representing the version of the layout.

</value>


        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutBase.ShouldSerializeCore(System.ComponentModel.IComponent)">
            <summary>
                <para>Gets whether the settings should be persisted.
</para>
            </summary>
            <param name="owner">
		The component that owns the current settings.

            </param>
            <returns><b>true</b>, if the settings should be persisted; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="T:DevExpress.Utils.OptionsColumnLayout">

            <summary>
                <para>Contains options that specify how column specific settings are stored to and restored from storage (a stream, xml file or the system registry).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.OptionsColumnLayout.#ctor">
            <summary>
                <para>Initializes a new instance of the OptionsColumnLayout class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.AddNewColumns">
            <summary>
                <para>Gets or sets whether the columns that exist in the current control but do not exist in a layout when it's restored should be retained.

</para>
            </summary>
            <value><b>true</b> to retain the columns that exist in the current control's layout but don't exist in the layout being restored; <b>false</b> to destroy such columns.

</value>


        </member>
        <member name="M:DevExpress.Utils.OptionsColumnLayout.Assign(DevExpress.Utils.Controls.BaseOptions)">
            <summary>
                <para>Copies all the settings from the options object passed as the parameter.

</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.RemoveOldColumns">
            <summary>
                <para>Gets or sets whether the columns that exist in a layout when it's restored but that don't exist in the current control should be discarded or added to the control.

</para>
            </summary>
            <value><b>true</b> to discard the columns that exist in the layout being restored but don't exist in the current control; <b>false</b> to add these columns to the control.

</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreAllOptions">
            <summary>
                <para>Gets or sets whether all the settings of a control's columns/bands (except for the appearance settings) are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if all the settings of a control's columns/bands are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreAppearance">
            <summary>
                <para>Gets or sets whether the appearance settings of the columns and bands are also stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the appearance settings of the columns and bands are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreLayout">
            <summary>
                <para>Gets or sets whether the position, width and visibility of the columns and bands are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the position, width and visibility of columns and bands are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.PrintingSystemCommand">

            <summary>
                <para>Specifies the commands which can be executed in the printing system's document preview.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Background">
            <summary>
                <para>Identifies the <b>Background</b> menu item, which is a parent for the <b>FillBackground</b> and <b>Watermark</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystemBase.SetCommandVisibility"/> method, to hide or show the Background items from the menu of the <b>Print Preview</b> form.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ClosePreview">
            <summary>
                <para> Closes the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Copy">
            <summary>
                <para>Copies the selected document content to the Clipboard.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Customize">
            <summary>
                <para> Invokes the property editor of the component which is about to be printed. Note that this component should implement the <b>IPrintable</b> interface.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.DocumentMap">
            <summary>
                <para> Shows or hides the <b>Document Map</b> pane, which displays the hierarchy of bookmarks in a report document.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.EditPageHF">
            <summary>
                <para> Invokes the <b>Header/Footer Editor</b> dialog. This dialog is used to insert standard page information into a report's headers and footers.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportCsv">
            <summary>
                <para>Exports a document to a CSV (comma-separated values) file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportDocx">
            <summary>
                <para>Exports the current document to a DOCX file.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportFile">
            <summary>
                <para> Exports the current document to a file (a report can be exported to PDF, RTF, HTML, MHT, XLS, TXT, CSV and various image formats).




</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportGraphic">
            <summary>
                <para>Exports the current document to a graphics file (BMP, EMF, GIF, JPEG, PNG, TIFF, WMF formats).

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportHtm">
            <summary>
                <para>Exports the current document to an HTML file.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportMht">
            <summary>
                <para>Exports the current document to an MHT file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportPdf">
            <summary>
                <para>Exports the current  document to a PDF file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportRtf">
            <summary>
                <para>Exports the current document to an RTF file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportTxt">
            <summary>
                <para>Exports the current document to a TXT file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportXls">
            <summary>
                <para>Exports the current document to an XLS file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportXlsx">
            <summary>
                <para>Exports the current document to an XLSX file.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportXps">
            <summary>
                <para><para>Exports the current document to an XPS file.</para>

This is supported only by the DXPrinting for WPF library.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.File">
            <summary>
                <para>Identifies the <b>File</b> menu item, which is a parent for the <b>PageSetup</b>, <b>Print</b>, <b>PrintDirect</b>, <b>ExportFile</b> and <b>SendFile</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystemBase.SetCommandVisibility"/> method, to hide or show the File items from the menu of the <b>Print Preview</b> form.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.FillBackground">
            <summary>
                <para> Invokes the <b>Color</b> dialog which allows the background color of the current document to be specified.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Find">
            <summary>
                <para> Invokes the <b>Find</b> dialog in the document's preview. This dialog provides a search dialog which allows end-users to search a report for specific text directly in the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.GoToPage">
            <summary>
                <para>Raises the <b>Go To Page</b> dialog to jump to the specified page number.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.HandTool">
            <summary>
                <para> Invokes or hides the <b>Hand Tool</b> in the document's preview. This tool is used for scrolling the pages of the document being previewed.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.HighlightEditingFields">
            <summary>
                <para>Highlights all available fields whose content can be edited. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Magnifier">
            <summary>
                <para> Invokes the preview magnifier. When the magnifier is activated the mouse cursor resembles a magnifying glass and a click on a preview page zooms in on it. There are two possible values for the magnification level. The first magnification value is always fixed and is equal to 100 %. The other value is calculated so that the entire preview page is visible at once without having to scroll it.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.MultiplePages">
            <summary>
                <para> Shows the layout of the document's preview across multiple pages. To specify a particular number of page rows and columns in a Print Control, use the <see cref="M:DevExpress.DocumentView.Controls.DocumentViewerBase.SetPageView"/> method.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.None">
            <summary>
                <para>Doesn't identify any command. This member is intended for internal use only.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Open">
            <summary>
                <para> Opens a document. This command is represented both via the menu item and toolbar button.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayout">
            <summary>
                <para>Identifies the item which is the parent to the <b>PageLayoutContinuous</b> and <b>PageLayoutFacing</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystemBase.SetCommandVisibility"/> method to hide or show the page layout items from the menu of the <b>Preview Form</b>.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayoutContinuous">
            <summary>
                <para>Changes the view of the document's preview so that the pages are arranged as a continuous vertical column.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayoutFacing">
            <summary>
                <para>Changes the view of the document's preview so that the pages are arranged side-by-side.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageMargins">
            <summary>
                <para>Selects the margin sizes for the entire document. Note that this command is in use in the Ribbon Print Preview Form only.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageOrientation">
            <summary>
                <para>Switches the pages between portrait and landscape layouts. Note that this command is in use in the Ribbon Print Preview Form only.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageSetup">
            <summary>
                <para> Invokes the <b>Page Setup</b> dialog which allows some of the page's settings to be adjusted (orientation, margins, paper size and source). 


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PaperSize">
            <summary>
                <para>Chooses the paper size of the document. Note that this command is in use in the Ribbon Print Preview Form only.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Parameters">
            <summary>
                <para> Shows or hides the <b>Parameters</b> pane, which enables end-users to enter parameter values, apply them to a report's data source and re-generate the report document.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Pointer">
            <summary>
                <para>Shows the mouse pointer, when there is no need to show either the <b>Hand Tool</b>, or the <b>Magnifier</b>.  Note that this command is in use in the Ribbon Print Preview Form only.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Print">
            <summary>
                <para> Invokes the <b>Print</b> dialog for the current document. This dialog allows the printer to be selected, its properties set, the number of copies entered and the range of pages to print to be specified.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PrintDirect">
            <summary>
                <para> Prints the document preview directly, without any dialogs. This is useful when the printer's settings don't need to be changed before a document is printed. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PrintSelection">
            <summary>
                <para>Prints the selected document content.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Save">
            <summary>
                <para> Saves a document to a file. This command is represented both via the menu item and toolbar button.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Scale">
            <summary>
                <para> Stretches or shrinks the document to a percentage of its actual size. Note that if you need to specify a particular scale factor or number of pages a document should be scaled to, the <see cref="P:DevExpress.XtraPrinting.Document.ScaleFactor"/> and <see cref="P:DevExpress.XtraPrinting.Document.AutoFitToPagesWidth"/> properties will be useful.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ScrollPageDown">
            <summary>
                <para>Scrolls one page down, as when an end-user presses the PAGE DOWN key.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ScrollPageUp">
            <summary>
                <para>Scrolls one page up, as when an end-user presses the PAGE UP key.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendCsv">
            <summary>
                <para>Exports the current document to a CSV (comma-separated values) file and sends it via e-mail.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendDocx">
            <summary>
                <para>Exports the current document to a DOCX file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendFile">
            <summary>
                <para> Exports the document in the preview window, then creates a new e-mail in the default system mailer and attaches the exported document to the e-mail. The exporting format can be specified via the drop-down list.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendGraphic">
            <summary>
                <para>Exports the current document to a graphics file (BMP, EMF, GIF, JPEG, PNG, TIFF, WMF formats) and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendMht">
            <summary>
                <para>Exports the current document to an MHT file and sends it via e-mail.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendPdf">
            <summary>
                <para>Exports the current document to a PDF file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendRtf">
            <summary>
                <para>Exports the current document to an RTF file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendTxt">
            <summary>
                <para>Exports the current document to a TXT file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendXls">
            <summary>
                <para>Exports the current document to an XLS file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendXlsx">
            <summary>
                <para>Exports the current document to an XLSX file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendXps">
            <summary>
                <para><para>Exports the current document to a XPS file and sends it via e-mail.</para>

This is supported only by the DXPrinting for WPF library.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowFirstPage">
            <summary>
                <para> Displays the first page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowLastPage">
            <summary>
                <para> Displays the last page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowNextPage">
            <summary>
                <para> Moves to the next page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowPrevPage">
            <summary>
                <para> Moves to the previous page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.StopPageBuilding">
            <summary>
                <para>Identifies the <b>Stop</b> button, which is displayed in the status bar to the right of the progress bar, and can be used to stop generating a document.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SubmitParameters">
            <summary>
                <para>For internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Thumbnails">
            <summary>
                <para>Toggles the <b>Thumbnails</b> panel visibility.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.View">
            <summary>
                <para>Identifies the <b>View</b> menu item, which is a parent for the <b>PageLayout</b>, <b>Toolbar</b>, <b>Status Bar</b> and <b>Customize</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystemBase.SetCommandVisibility"/> method, to hide or show the View items from the menu of the <b>Print Preview</b> form.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ViewWholePage">
            <summary>
                <para>Zooms a document in or out so that only one entire page of the document is shown in the preview.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Watermark">
            <summary>
                <para> Invokes the <b>Watermark</b> dialog which can be used to specify either background text or a picture as a document's watermark. Note that a document's watermark can be accessed via the <see cref="P:DevExpress.XtraPrinting.PrintingSystemBase.Watermark"/> property.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Zoom">
            <summary>
                <para> Zooms in on a document by one of the predefined zoom factors. They are as follows: 10%, 25%, 50%, 75%, 100%, 150%, 200% and 500%.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomIn">
            <summary>
                <para> Zooms the preview in. Each time this command is performed, the preview gets zoomed in by approximately 10%.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomOut">
            <summary>
                <para> Zooms the preview out.  Each time this command is performed, the preview gets zoomed out by approximately 10%.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToPageWidth">
            <summary>
                <para>Zooms a document in or out as appropriate, so that the width of the current page fits the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTextWidth">
            <summary>
                <para>Zooms a document in or out as appropriate, so that the width of the text in the current page fits the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTwoPages">
            <summary>
                <para>Zooms a document in or out as appropriate, so that only two entire pages of the document are shown in the preview.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToWholePage">
            <summary>
                <para>Zooms a document in or out as appropriate, so that only a single page of the document is shown in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomTrackBar">
            <summary>
                <para>Identifies the <b>Zoom</b> trackbar control, which is available in the bottom-right corner of the Print Preview Form with a Ribbon.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.UnboundSourcePropertyCollection">

            <summary>
                <para>A collection of the <see cref="T:DevExpress.Data.UnboundSource"/>'s list columns.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.UnboundSourcePropertyCollection.#ctor(DevExpress.Data.UnboundSource)">
            <summary>
                <para>Initializes a new instance of the UnboundSourcePropertyCollection class.
</para>
            </summary>
            <param name="owner">
		An <see cref="T:DevExpress.Data.UnboundSource"/> object which owns the UnboundSourcePropertyCollection.

            </param>


        </member>
        <member name="M:DevExpress.Data.UnboundSourcePropertyCollection.Add(DevExpress.Data.UnboundSourcePropertyCollection)">
            <summary>
                <para>Adds the specified items to the UnboundSourcePropertyCollection collection.
</para>
            </summary>
            <param name="properties">
		An <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> list of items to be added to the current UnboundSourcePropertyCollection.

            </param>


        </member>
        <member name="M:DevExpress.Data.UnboundSourcePropertyCollection.Add(DevExpress.Data.UnboundSourceProperty)">
            <summary>
                <para>Adds the specified item to the UnboundSourcePropertyCollection collection.
</para>
            </summary>
            <param name="property">
		An <see cref="T:DevExpress.Data.UnboundSourceProperty"/> item to be added to the current UnboundSourcePropertyCollection.

            </param>


        </member>
        <member name="M:DevExpress.Data.UnboundSourcePropertyCollection.AddRange(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Adds the specified items to the UnboundSourcePropertyCollection collection.
</para>
            </summary>
            <param name="properties">
		An <b>IEnumerable&lt;</b><see cref="T:DevExpress.Data.UnboundSourceProperty"/><b>&gt;</b> list of items to be added to the current UnboundSourcePropertyCollection.

            </param>


        </member>
        <member name="M:DevExpress.Data.UnboundSourcePropertyCollection.ClearAndAddRange(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Clears the UnboundSourcePropertyCollection collection and adds the specified items to it.
</para>
            </summary>
            <param name="properties">
		An <b>IEnumerable&lt;</b><see cref="T:DevExpress.Data.UnboundSourceProperty"/><b>&gt;</b> list of items to be added to the current UnboundSourcePropertyCollection.

            </param>


        </member>
        <member name="P:DevExpress.Data.UnboundSourcePropertyCollection.Item(System.Int32)">
            <summary>
                <para>Specifies an item within the UnboundSourcePropertyCollection collection at a specific index.
</para>
            </summary>
            <param name="index">
		The zero-based index of the item.

            </param>
            <value>An <see cref="UnboundSourceProperty"/> item at a specific index.
</value>


        </member>
        <member name="P:DevExpress.Data.UnboundSourcePropertyCollection.Item(System.String)">
            <summary>
                <para>Specifies an item within the UnboundSourcePropertyCollection collection with a specific name.
</para>
            </summary>
            <param name="name">
		A string which is the <see cref="P:DevExpress.Data.UnboundSourceProperty.Name"/> of the item.

            </param>
            <value>An <see cref="UnboundSourceProperty"/> item with the specific name.
</value>


        </member>
        <member name="T:DevExpress.Data.UnboundColumnType">

            <summary>
                <para>Contains values that specify the data type and binding mode of columns.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Boolean">
            <summary>
                <para>Indicates that the column is unbound and it contains Boolean values (the <see cref="T:System.Boolean"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Bound">
            <summary>
                <para>Indicates that the column is bound to a field in the control's underlying data source. The type of data this column contains is determined by the bound field.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.DateTime">
            <summary>
                <para>Indicates that the column is unbound and it contains date/time values (the <see cref="T:System.DateTime"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Decimal">
            <summary>
                <para>Indicates that the column is unbound and it contains decimal values (the <see cref="T:System.Decimal"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Integer">
            <summary>
                <para>Indicates that the column is unbound and it contains integer values (the <see cref="T:System.Int32"/> type).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.Object">
            <summary>
                <para>Indicates that the column is unbound and it contains values of any type. A <see cref="T:DevExpress.XtraEditors.TextEdit"/> editor is assigned for the in-place editing of such a column.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.UnboundColumnType.String">
            <summary>
                <para>Indicates that the column is unbound and it contains string values (the <see cref="T:System.String"/> type). 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.UnboundSourceValuePushedEventArgs">

            <summary>
                <para>Arguments, passed to the <see cref="E:DevExpress.Data.UnboundSource.ValuePushed"/> event.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.UnboundSourceValuePushedEventArgs.PropertyName">
            <summary>
                <para>Gets the name of the property whose value is being set.
</para>
            </summary>
            <value>A string that is the property name. 
</value>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceValuePushedEventArgs.RowIndex">
            <summary>
                <para>Gets the row index of the value.
</para>
            </summary>
            <value>An integer index of the row. 
</value>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceValuePushedEventArgs.Tag">
            <summary>
                <para>Gets an object that contains data associated with the value.
</para>
            </summary>
            <value>An object that contains data associated with the value.
</value>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceValuePushedEventArgs.Value">
            <summary>
                <para>Specifies the value which is being set.
</para>
            </summary>
            <value>An object specifying the value which is being set. 
</value>


        </member>
        <member name="T:DevExpress.Utils.DefaultBoolean">

            <summary>
                <para>Lists values which specify the validity of a condition (indicates whether the condition is true or false).
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.DefaultBoolean.Default">
            <summary>
                <para>The value is determined by the current object's parent object setting (e.g., a control setting).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.DefaultBoolean.False">
            <summary>
                <para>Corresponds to a Boolean value of <b>false</b>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.DefaultBoolean.True">
            <summary>
                <para>Corresponds to a Boolean value of <b>true</b>.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.SelectionChangedEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Base.ColumnView.SelectionChanged"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.SelectionChangedEventHandler.Invoke(System.Object,DevExpress.Data.SelectionChangedEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Base.ColumnView.SelectionChanged"/> event.
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.SelectionChangedEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Data.SelectionChangedEventArgs">

            <summary>
                <para>Provides data for the selection changed events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.SelectionChangedEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.SelectionChangedEventArgs"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.SelectionChangedEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Int32)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.SelectionChangedEventArgs"/> class with the specified settings.
</para>
            </summary>
            <param name="action">
		A <see cref="T:System.ComponentModel.CollectionChangeAction"/> enumeration value which specifies how the collection has been changed. This value is assigned to the <see cref="P:DevExpress.Data.SelectionChangedEventArgs.Action"/> property.

            </param>
            <param name="controllerRow">
		A zero-based integer specifying the handle of the row whose selected state has been changed. This value is assigned to the <see cref="P:DevExpress.Data.SelectionChangedEventArgs.ControllerRow"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.SelectionChangedEventArgs.Action">
            <summary>
                <para>Gets an action which describes how the collection has been changed.
</para>
            </summary>
            <value>A <see cref="T:System.ComponentModel.CollectionChangeAction"/> enumeration value which specifies how the collection has been changed.
</value>


        </member>
        <member name="P:DevExpress.Data.SelectionChangedEventArgs.ControllerRow">
            <summary>
                <para>Identifies the row whose selected state has been changed.
</para>
            </summary>
            <value>A zero-based integer identifying the row whose selected state has been changed.
</value>


        </member>
        <member name="T:DevExpress.Data.UnboundSourceValueNeededEventArgs">

            <summary>
                <para>Arguments, passed to the <see cref="E:DevExpress.Data.UnboundSource.ValueNeeded"/> event.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.UnboundSourceValueNeededEventArgs.PropertyName">
            <summary>
                <para>Gets the name of the property whose value is requested.
</para>
            </summary>
            <value>A string which is the property name. 
</value>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceValueNeededEventArgs.RowIndex">
            <summary>
                <para>Gets the row index of the value.
</para>
            </summary>
            <value>The integer index of the row. 
</value>


        </member>
        <member name="M:DevExpress.Data.UnboundSourceValueNeededEventArgs.SetValue``1(``0)">
            <summary>
                <para> </para>
            </summary>
            <param name="value">
		 
            </param>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceValueNeededEventArgs.Tag">
            <summary>
                <para>Gets an object that contains data associated with the value.
</para>
            </summary>
            <value>An object that contains data associated with the value. 
</value>


        </member>
        <member name="P:DevExpress.Data.UnboundSourceValueNeededEventArgs.Value">
            <summary>
                <para>Specifies the value which is requested.
</para>
            </summary>
            <value>An object specifying the value which is requested. 
</value>


        </member>
        <member name="T:DevExpress.XtraGrid.ColumnSortMode">

            <summary>
                <para>Lists the values that specify how a column's data should be sorted.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.Custom">
            <summary>
                <para>Enables custom sorting of a column's data. To implement custom sorting, handle the <see cref="E:DevExpress.XtraGrid.Views.Base.ColumnView.CustomColumnSort"/> event in the GridControl, and the <see cref="E:DevExpress.XtraTreeList.TreeList.CompareNodeValues"/> event in the TreeList.

<para>
In the GridControl, the <b>Custom</b> mode also enables custom grouping of rows when grouping is applied against the current column. To implement custom grouping, handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomColumnGroup"/> event.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.Default">
            <summary>
                <para>Sorts the column's data according to the type of the editor assigned to the column. 

<para>
For columns which use <see cref="T:DevExpress.XtraEditors.LookUpEdit"/> and <see cref="T:DevExpress.XtraEditors.ImageComboBoxEdit"/> in-place editors the data is sorted by the displayed values (the strings displayed within the column's cells). 
</para>

For other columns their data is sorted by the edit values (these are synchronized with the bound data source's values). For some editors (<see cref="T:DevExpress.XtraEditors.TextEdit"/>, <see cref="T:DevExpress.XtraEditors.ComboBoxEdit"/>, etc), however, the edit values match the display values.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.DisplayText">
            <summary>
                <para>Sorts the column's data by the column's display text (the strings displayed within the column's cells). 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnSortMode.Value">
            <summary>
                <para>Sorts the column's data by the column's edit values (these are synchronized with the bound data source's values). 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraGrid.ColumnGroupInterval">

            <summary>
                <para>Lists the values that specify how the data rows are combined into groups when in grouping mode.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Alphabetical">
            <summary>
                <para>Rows are grouped by the character that grouping column values start with.


Not supported in server mode for numeric and date/time columns.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Date">
            <summary>
                <para>This option is in effect only for columns that store date/time values. 
<para>
Rows are grouped by the date part of their values, the time portion is ignored in this grouping mode. </para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateMonth">
            <summary>
                <para>This option is in effect only for columns that store date/time values. 
<para>
Rows are grouped by the month part of their values. </para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateRange">
            <summary>
                <para>This option is in effect only for columns that store date/time values. 
<para>
Rows are grouped into the following groups according to their date value as compared with the current system date: "Today", "Tomorrow", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Next Week", "Two Weeks Away", "Three Weeks Away", "Next Month", "Beyond Next Month", "Yesterday", "Last Week", "Two Weeks Ago", "Three Weeks Ago", "Last Month", "Older".
</para>


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateYear">
            <summary>
                <para>This option is in effect only for columns that store date/time values. 
<para>
Rows are grouped by the year part of their values.
</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Default">
            <summary>
                <para>For columns which store date/time values, this option is the same as the <see cref="F:DevExpress.XtraGrid.ColumnGroupInterval.Date"/> option. For non date/time columns this option is the same as the <see cref="F:DevExpress.XtraGrid.ColumnGroupInterval.Value"/> option.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DisplayText">
            <summary>
                <para>Rows are grouped by display values of the grouping column.

<para>
In specific instances, column cells can have different edit values, but the same display value. To combine these rows into the same group, use the <b>DisplayText</b> group mode.
</para>


Not supported in server mode.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Value">
            <summary>
                <para>Rows are grouped by values of grouping columns. The number of groups matches the number of unique values within the grouping column.

<para>
For date/time columns, both the date and time portions are taken into account for value comparison. To specify how date/time values are presented in group rows in WinForms Data Grid, apply formatting to the grouping column (e.g., with the <see cref="P:DevExpress.XtraGrid.Columns.GridColumn.DisplayFormat"/> property).
</para>


</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.TextAlignment">

            <summary>
                <para>Specifies how the text associated with the control should be aligned.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomCenter">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally aligned at the center. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomJustify">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally justified. 
This mode is ignored in Silverlight applications.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomLeft">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally aligned on the left.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomRight">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally aligned on the right. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleCenter">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally aligned at the center.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleJustify">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally justified. 
This mode is ignored in Silverlight applications.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleLeft">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally aligned on the left. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleRight">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally aligned on the right. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopCenter">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally aligned at the center. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopJustify">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally justified. 
This mode is ignored in Silverlight applications.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopLeft">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally aligned on the left. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopRight">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally aligned on the right. 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.ImageSizeMode">

            <summary>
                <para>Specifies how an image is positioned within a Picture Box.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.AutoSize">
            <summary>
                <para>
The Picture Box size is adjusted to that of the image it contains.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.CenterImage">
            <summary>
                <para>This option is obsolete. To achieve the same result, set the <see cref="P:DevExpress.XtraReports.UI.XRPictureBox.Sizing"/> property of a Picture Box to <see cref="F:DevExpress.XtraPrinting.ImageSizeMode.Normal"/> and the <see cref="P:DevExpress.XtraReports.UI.XRPictureBox.ImageAlignment"/> property to <see cref="F:DevExpress.XtraPrinting.ImageAlignment.MiddleCenter"/>.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.Normal">
            <summary>
                <para>
The image is placed in the upper-left corner of the Picture Box. The image is clipped if it does not fit into the control's bounds.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.Squeeze">
            <summary>
                <para>
If the Picture Box dimensions exceed that of the image it contains, the image is centered and shown full-size. Otherwise, the image is resized to fit into the control's dimensions.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.StretchImage">
            <summary>
                <para>
The image is stretched or shrunk to fit into the current Picture Box dimensions.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.Tile">
            <summary>
                <para>
The image is replicated within the Picture Box starting from the upper-left corner. The image is clipped if it does not fit into the control's dimensions.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.ZoomImage">
            <summary>
                <para>
The image is sized proportionally (without clipping), so that it fits best within the Picture Box dimensions. If the height-to-width ratio of the control and the image are equal, the image will be resized to exactly fit into the control's dimensions. 
Otherwise, the closest matching image side (height or width) will be sized to the control, and the other side will be sized proportionally (possibly leaving empty space within the control). 


</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.ChooseSummaryOptionsPage`1"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView,DevExpress.Data.XtraReports.Wizard.IColumnInfoCache)">
            <summary>
                <para>Initializes a new instance of the ChooseSummaryOptionsPage&lt;TModel&gt; class with the specified settings.
</para>
            </summary>
            <param name="view">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView"/> interface. 

            </param>
            <param name="columnInfoCache">
		An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache"/> object.)

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.Begin">
            <summary>
                <para>Initializes controls of the current wizard page.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.Commit">
            <summary>
                <para>Saves settings specified by a wizard page to the report model.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.FinishEnabled">
            <summary>
                <para>Specifies whether or not the <b>Finish</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Finish</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.GetNextPageType">
            <summary>
                <para>Returns the type of the next wizard page.
</para>
            </summary>
            <returns>A <see cref="T:System.Type"/> enumeration value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.MoveNextEnabled">
            <summary>
                <para>Specifies whether or not the <b>Next</b> button is enabled on a wizard page.
</para>
            </summary>
            <value><b>true</b>, if the <b>Next</b> button is enabled; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="T:DevExpress.Utils.IoC.RegistrationFailedException">

            <summary>
                <para>Occurs if there is an error during registration of a type.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.IoC.RegistrationFailedException.#ctor">
            <summary>
                <para>Initializes a new instance of the RegistrationFailedException class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.IoC.RegistrationFailedException.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the RegistrationFailedException class with the specified error message.
</para>
            </summary>
            <param name="message">
		A <see cref="T:System.String"/> value, specifying the error message.

            </param>


        </member>
        <member name="M:DevExpress.Utils.IoC.RegistrationFailedException.#ctor(System.String,System.Exception)">
            <summary>
                <para>Initializes a new instance of the RegistrationFailedException class with the specified message and exception details.
</para>
            </summary>
            <param name="message">
		A <see cref="T:System.String"/> value, specifying the message displayed when a database connection fails.

            </param>
            <param name="inner">
		A <see cref="T:System.Exception"/> object, specifying the error details.

            </param>


        </member>
        <member name="T:DevExpress.XtraEditors.RangeControlRange">

            <summary>
                <para>Contains information on a range of data.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.RangeControlRange.#ctor(System.Object,System.Object)">
            <summary>
                <para>Initializes a new instance of the RangeControlRange class with the specified range bounds.
</para>
            </summary>
            <param name="minimum">
		The value to initialize the <see cref="P:DevExpress.XtraEditors.RangeControlRange.Minimum"/> property.

            </param>
            <param name="maximum">
		The value to initialize the <see cref="P:DevExpress.XtraEditors.RangeControlRange.Maximum"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.RangeControlRange.#ctor">
            <summary>
                <para>Initializes a new instance of the RangeControlRange class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.RangeControlRange.InternalSetMaximum(System.Object)">
            <summary>
                <para> </para>
            </summary>
            <param name="value">
		 
            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.RangeControlRange.InternalSetMinimum(System.Object)">
            <summary>
                <para> </para>
            </summary>
            <param name="value">
		 
            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.RangeControlRange.Maximum">
            <summary>
                <para>Gets or sets the end bound of a range.
</para>
            </summary>
            <value>The end bound of a range.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.RangeControlRange.Minimum">
            <summary>
                <para>Gets or sets the start bound of a range.
</para>
            </summary>
            <value>The start bound of a range.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.RangeControlRange.Owner">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.XtraEditors.RangeControlRange.Reset">
            <summary>
                <para> </para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.RangeControlRange.ShouldSerialize">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Data.TreeList.TreeListNodeBase">

            <summary>
                <para>Serves as a base for classes that represent TreeList nodes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.TreeList.TreeListNodeBase.#ctor">
            <summary>
                <para>Initializes a new instance of the TreeListNodeBase class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.TreeList.TreeListNodeBase.#ctor(System.Object)">
            <summary>
                <para>Initializes a new instance of the TreeListNodeBase class with the specified content.
</para>
            </summary>
            <param name="content">
		An object that specifies the node's content. This value is assigned to the <see cref="P:DevExpress.Data.TreeList.TreeListNodeBase.Content"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.TreeList.TreeListNodeBase.CollapseAll">
            <summary>
                <para>Collapses all child nodes.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.Content">
            <summary>
                <para>Gets or sets the node's content.
</para>
            </summary>
            <value>An object that specifies the node's content.
</value>


        </member>
        <member name="M:DevExpress.Data.TreeList.TreeListNodeBase.ExpandAll">
            <summary>
                <para>Expands all child nodes.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.HasChildren">
            <summary>
                <para>Gets whether or not the node has a child node(s).
</para>
            </summary>
            <value><b>true</b> if the node has a child node(s); otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.Id">
            <summary>
                <para>Uniquely identifies the current tree node.
</para>
            </summary>
            <value>The current node's unique identifier.
</value>


        </member>
        <member name="M:DevExpress.Data.TreeList.TreeListNodeBase.IsDescendantOf(DevExpress.Data.TreeList.TreeListNodeBase)">
            <summary>
                <para>Indicates whether the current node belongs to the specified branch node.
</para>
            </summary>
            <param name="node">
		The TreeListNodeBase object.

            </param>
            <returns><b>true</b> if the specified branch node contains the current node; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.IsExpanded">
            <summary>
                <para>Gets or sets whether or not the node is expanded.
</para>
            </summary>
            <value><b>true</b> to expand the node; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.IsFiltered">
            <summary>
                <para>Gets whether the node is filtered or not.
</para>
            </summary>
            <value><b>true</b> the node is filtered; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.IsVisible">
            <summary>
                <para>Gets whether the treelist node is visible.
</para>
            </summary>
            <value><b>true</b>, if the current node is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.Data.TreeList.TreeListNodeBase.PropertyChanged">
            <summary>
                <para>Occurs every time any of the <see cref="P:DevExpress.Data.TreeList.TreeListNodeBase.Content"/> and <see cref="P:DevExpress.Data.TreeList.TreeListNodeBase.IsExpanded"/> properties have changed their value.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.RowHandle">
            <summary>
                <para>Gets the row handle that identifies the node.
</para>
            </summary>
            <value>An integer value that specifies the row handle.
</value>


        </member>
        <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.Tag">
            <summary>
                <para>Gets or sets the data associated with the node.
</para>
            </summary>
            <value>An object that contains information associated with the current node.
</value>


        </member>
        <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.VisibleIndex">
            <summary>
                <para>Gets the node's position within a View among visible nodes. 
</para>
            </summary>
            <value>An integer value that specifies the node's position among visible nodes. -1 if the node is hidden. 
</value>


        </member>
        <member name="T:DevExpress.Data.Filtering.FilterCondition">

            <summary>
                <para>Contains enumeration values that specify comparison operation types used to create filter conditions.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.Filtering.FilterCondition.Contains">
            <summary>
                <para>Specifies the <b>Contains</b> comparison operation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FilterCondition.Default">
            <summary>
                <para>Specifies the default comparison operation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FilterCondition.Equals">
            <summary>
                <para>Specifies the <b>Equals</b> comparison operation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FilterCondition.Like">
            <summary>
                <para>Specifies the <b>Like</b> comparison operation.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.Filtering.FilterCondition.StartsWith">
            <summary>
                <para>Specifies the <b>StartsWith</b> comparison operation.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickBorderStyle">

            <summary>
                <para>Specifies the border style for a brick.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Center">
            <summary>
                <para>The borders are drawn over the contour of the brick's rectangle, so that they are partially inside and outside of the brick.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Inset">
            <summary>
                <para>The borders are drawn inside the brick's rectangle.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Outset">
            <summary>
                <para>The borders are drawn outside the brick's rectangle.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1">

            <summary>
                <para>The base class for the <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/>, <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> and <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects that are stored in a Report Wizard's model.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.DisplayName">
            <summary>
                <para>Specifies the data source display name for a WPF Report Wizard.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value, specifying the data source display name.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current EntityInfo&lt;TName&gt; instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current EntityInfo&lt;TName&gt; instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.GetHashCode">
            <summary>
                <para>Serves as the default hash function.
</para>
            </summary>
            <returns>An integer value, specifying the hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.Name">
            <summary>
                <para>Specifies the data source name.
</para>
            </summary>
            <value>A TName object that is the name of the entity.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.GraphicsDpi">

            <summary>
                <para>Enables you to calculate the DPI values associated with specific units of measure (and vice versa).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsDpi.#ctor">
            <summary>
                <para>Initializes a new instance of the GraphicsDpi class with the default settings.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.DeviceIndependentPixel">
            <summary>
                <para><b>96f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Display">
            <summary>
                <para><b>75f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Document">
            <summary>
                <para><b>300f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsDpi.DpiToUnit(System.Single)">
            <summary>
                <para>Converts the specified DPI value to a corresponding unit of measure.
</para>
            </summary>
            <param name="dpi">
		A <see cref="T:System.Single"/> value.

            </param>
            <returns>A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value.
</returns>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.EMU">
            <summary>
                <para><b>914400f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsDpi.GetGraphicsDpi(System.Drawing.Graphics)">
            <summary>
                <para>Gets the DPI value corresponding to the unit of measure of the specified Graphics object.
</para>
            </summary>
            <param name="gr">
		A <see cref="T:System.Drawing.Graphics"/> object.

            </param>
            <returns>A <see cref="T:System.Single"/> value.
</returns>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.HundredthsOfAnInch">
            <summary>
                <para><b>100f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Inch">
            <summary>
                <para><b>1f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Millimeter">
            <summary>
                <para><b>25.4f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Pixel">
            <summary>
                <para><b>96f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Point">
            <summary>
                <para><b>72f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.TenthsOfAMillimeter">
            <summary>
                <para><b>254f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Twips">
            <summary>
                <para><b>1440f</b>
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsDpi.UnitToDpi(System.Drawing.GraphicsUnit)">
            <summary>
                <para>Converts the specified unit of measure to a corresponding DPI value.
</para>
            </summary>
            <param name="unit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value.

            </param>
            <returns>A <see cref="T:System.Single"/> value.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsDpi.UnitToDpiI(System.Drawing.GraphicsUnit)">
            <summary>
                <para>Converts the specified unit of measure to a corresponding DPI value.
</para>
            </summary>
            <param name="unit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value.

            </param>
            <returns>A <see cref="T:System.Single"/> value.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsDpi.UnitToString(System.Drawing.GraphicsUnit)">
            <summary>
                <para>Returns a string value, identifying the specified unit of measure.
</para>
            </summary>
            <param name="unit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value.

            </param>
            <returns>A <see cref="T:System.String"/> value.
</returns>


        </member>
        <member name="T:DevExpress.Entity.Model.IContainerInfo">

            <summary>
                <para>If implemented, provides information about a project type containing an Entity Framework data model.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Entity.Model.IContainerInfo.ContainerType">
            <summary>
                <para>Specifies the container type.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Entity.Model.DbContainerType"/> enumeration value.
</value>


        </member>
        <member name="T:DevExpress.Entity.Model.DbContainerType">

            <summary>
                <para>Enumerates values that specify the container type.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Entity.Model.DbContainerType.EntityFramework">
            <summary>
                <para>Specifies the Entity Framework data model.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Entity.Model.DbContainerType.WCF">
            <summary>
                <para>Specifies the WCF data service.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Filtering.EnumProcessingHelper">

            <summary>
                <para>Provides helper methods used to register enumeration types whose values can be serialized in Criteria Language expressions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnum(System.Type)">
            <summary>
                <para>Enables serialization of the specified enumeration type's values in Criteria Language expressions.
</para>
            </summary>
            <param name="enumType">
		A <see cref="T:System.Type"/> object specifying the type of enumeration to be registered.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnum(System.Type,System.String)">
            <summary>
                <para>Enables serialization of the specified enumeration type values in Criteria Language expressions.
</para>
            </summary>
            <param name="enumType">
		A <see cref="T:System.Type"/> object specifying the type of enumeration to be registered.

            </param>
            <param name="toStringName">
		A string that specifies the enumeration name to be used in criteria instead of <a href="https://msdn.microsoft.com/en-us/library/system.type.fullname.aspx">FullName</a>.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnum``1">
            <summary>
                <para>Enables serialization of the specified enumeration type's values in Criteria Language expressions.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnums(System.Reflection.Assembly)">
            <summary>
                <para>Enables serializing values of all enumerations from the specified assembly in Criteria Language expressions.
</para>
            </summary>
            <param name="assembly">
		A <see cref="T:System.Reflection.Assembly"/> object that specifies the assembly containing enumerations to be registered.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnums(System.Reflection.Assembly,System.Boolean)">
            <summary>
                <para>Enables serializing values of all enumerations from the specified assembly in Criteria Language expressions.
</para>
            </summary>
            <param name="assembly">
		A <see cref="T:System.Reflection.Assembly"/> object that specifies the assembly containing enumerations to be registered.

            </param>
            <param name="suppressReferencesProcessing">
		<b>true</b>, if enumerations from referenced assemblies are ignored; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnums(System.Reflection.Assembly[])">
            <summary>
                <para>Enables serializing values of all enumerations from the specified assemblies in Criteria Language expressions.
</para>
            </summary>
            <param name="assemblies">
		A <see cref="T:System.Reflection.Assembly[]"/> array that specifies assemblies containing enumerations to be registered.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnums(System.Reflection.Assembly[],System.Boolean)">
            <summary>
                <para>Enables serializing values of all enumerations from the specified assemblies in Criteria Language expressions.
</para>
            </summary>
            <param name="assemblies">
		A <see cref="T:System.Reflection.Assembly[]"/> array that specifies assemblies containing enumerations to be registered.

            </param>
            <param name="suppressReferencesProcessing">
		<b>true</b>, if enumerations from referenced assemblies are ignored; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnums">
            <summary>
                <para>Enables serializing values of enumerations from all assembies that are loaded to the <a href="https://msdn.microsoft.com/en-us/library/system.appdomain.currentdomain(v=vs.110).aspx">current application domain</a> in Criteria Language expressions.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.GraphicsUnitConverter">

            <summary>
                <para>Enables you to convert values that are calculated in some measure units to different measure units.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.#ctor">
            <summary>
                <para>Initializes a new instance of the GraphicsUnitConverter class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
                <para>Adjusts the location and size of a rectangle calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.RectangleF"/> structure.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Adjusts the location and size of a rectangle calculated for the specified unit of measure according to a new unit of measure.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.RectangleF"/> structure.

            </param>
            <param name="fromUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.

            </param>
            <param name="toUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Adjusts the location and size of a rectangle calculated for the specified unit of measure according to a new unit of measure.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.Rectangle"/> structure.

            </param>
            <param name="fromUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.

            </param>
            <param name="toUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.

            </param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Point,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Adjusts the coordinates of a point calculated for the specified unit of measure according to a new unit of measure.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.Point"/> structure.

            </param>
            <param name="fromUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.

            </param>
            <param name="toUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.

            </param>
            <returns>A <see cref="T:System.Drawing.Point"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Size,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Adjusts the size calculated for the specified unit of measure according to a new unit of measure.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.Size"/> structure.

            </param>
            <param name="fromUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.

            </param>
            <param name="toUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(DevExpress.XtraPrinting.Native.MarginsF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Adjusts the document margins calculated for the specified unit of measure according to a new unit of measure.
</para>
            </summary>
            <param name="val">
		A DevExpress.XtraPrinting.Native.MarginsF object.

            </param>
            <param name="fromUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.

            </param>
            <param name="toUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.

            </param>
            <returns>A DevExpress.XtraPrinting.Native.MarginsF object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.PointF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Adjusts the coordinates of a point calculated for the specified unit of measure according to a new unit of measure.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.PointF"/> structure.

            </param>
            <param name="fromUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.

            </param>
            <param name="toUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.

            </param>
            <returns>A <see cref="T:System.Drawing.PointF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
                <para>Adjusts the location and size of a rectangle calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.Rectangle"/> structure.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.SizeF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Adjusts the size calculated for the specified unit of measure according to a new unit of measure.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.SizeF"/> structure.

            </param>
            <param name="fromUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.

            </param>
            <param name="toUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Size,System.Single,System.Single)">
            <summary>
                <para>Adjusts the size calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.Size"/> structure.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Printing.Margins,System.Single,System.Single)">
            <summary>
                <para>Adjusts the document margins calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.Printing.Margins"/> object.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>A <see cref="T:System.Drawing.Printing.Margins"/> object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Single,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Adjusts the floating-point value calculated for the specified unit of measure according to a new unit of measure.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Single"/> value.

            </param>
            <param name="fromUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.

            </param>
            <param name="toUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.

            </param>
            <returns>A <see cref="T:System.Single"/> value.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(DevExpress.XtraPrinting.Native.MarginsF,System.Single,System.Single)">
            <summary>
                <para>Adjusts the document margins calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		A DevExpress.XtraPrinting.Native.MarginsF object.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>A DevExpress.XtraPrinting.Native.MarginsF object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Single,System.Single,System.Single)">
            <summary>
                <para>Adjusts the floating-point value calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Single"/> value.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>A <see cref="T:System.Single"/> value.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.PointF,System.Single,System.Single)">
            <summary>
                <para>Adjusts the coordinates of a point calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.PointF"/> structure.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>A <see cref="T:System.Drawing.PointF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(DevExpress.XtraPrinting.Native.RectangleDF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Adjusts the location and size of a rectangle calculated for the specified unit of measure according to a new unit of measure.
</para>
            </summary>
            <param name="val">
		A DevExpress.XtraPrinting.Native.RectangleDF structure.

            </param>
            <param name="fromUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.

            </param>
            <param name="toUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.

            </param>
            <returns>A DevExpress.XtraPrinting.Native.RectangleDF structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.SizeF,System.Single,System.Single)">
            <summary>
                <para>Adjusts the size calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.SizeF"/> structure.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(DevExpress.XtraPrinting.Native.RectangleDF,System.Single,System.Single)">
            <summary>
                <para>Adjusts the location and size of a rectangle calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		A DevExpress.XtraPrinting.Native.RectangleDF structure.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>A DevExpress.XtraPrinting.Native.RectangleDF structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Int32,System.Single,System.Single)">
            <summary>
                <para>Adjusts the integer value calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		An integer value.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>An integer value.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Point,System.Single,System.Single)">
            <summary>
                <para>Adjusts the coordinates of a point calculated for the specified DPI according to a new DPI.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.Point"/> structure.

            </param>
            <param name="fromDpi">
		A <see cref="T:System.Single"/> value, specifying the initial DPI setting.

            </param>
            <param name="toDpi">
		A <see cref="T:System.Single"/> value, specifying the required DPI setting.

            </param>
            <returns>A <see cref="T:System.Drawing.Point"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DipToDoc(System.Drawing.SizeF)">
            <summary>
                <para>Converts the size calculated in device-independent pixels (DIP) to a size calculated in document units (measured in <b>1</b>/<b>300</b> of an inch).
</para>
            </summary>
            <param name="size">
		A <see cref="T:System.Drawing.SizeF"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DipToDoc(System.Single)">
            <summary>
                <para>Converts the floating-point value calculated in device-independent pixels (DIP) to a value calculated in document units (measured in <b>1</b>/<b>300</b> of an inch).
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Single"/> value.

            </param>
            <returns>A <see cref="T:System.Single"/> value.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DipToDoc(System.Drawing.RectangleF)">
            <summary>
                <para>Converts the location and size of a rectangle calculated in device-independent pixels (DIP) to a value calculated in document units (measured in <b>1</b>/<b>300</b> of an inch).
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToDip(System.Single)">
            <summary>
                <para>Converts the floating-point value calculated in document units (measured in <b>1</b>/<b>300</b> of an inch) to a value calculated in device-independent pixels (DIP).
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Single"/> value.

            </param>
            <returns>A <see cref="T:System.Single"/> value.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToPixel(System.Single)">
            <summary>
                <para>Converts the floating-point value calculated in document units (measured in <b>1</b>/<b>300</b> of an inch) to a value calculated in pixels.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Single"/> value.

            </param>
            <returns>A <see cref="T:System.Single"/> value.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToPixel(System.Drawing.SizeF)">
            <summary>
                <para>Converts the size calculated in document units (measured in <b>1</b>/<b>300</b> of an inch) to a size calculated in pixels.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.SizeF"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToPixel(System.Drawing.RectangleF)">
            <summary>
                <para>Converts the location and size of a rectangle calculated in document units (measured in <b>1</b>/<b>300</b> of an inch) to a value calculated in pixels.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.RectangleF"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToPixel(DevExpress.XtraPrinting.Native.MarginsF)">
            <summary>
                <para>Converts the document margins calculated in document units (measured in <b>1</b>/<b>300</b> of an inch) to a value calculated in pixels.
</para>
            </summary>
            <param name="val">
		A DevExpress.XtraPrinting.Native.MarginsF object.

            </param>
            <returns>A DevExpress.XtraPrinting.Native.MarginsF object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToPixel(System.Drawing.PointF)">
            <summary>
                <para>Converts the coordinates of a point calculated in document units (measured in <b>1</b>/<b>300</b> of an inch) to a value calculated in pixels.
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.PointF"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.PointF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.PixelToDoc(System.Drawing.PointF)">
            <summary>
                <para>Converts the coordinates of a point calculated in pixels to a value calculated in document units (measured in <b>1</b>/<b>300</b> of an inch).
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.PointF"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.PointF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.PixelToDoc(System.Drawing.SizeF)">
            <summary>
                <para>Converts the size calculated in pixels to a size calculated in document units (measured in <b>1</b>/<b>300</b> of an inch).
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.SizeF"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.PixelToDoc(System.Drawing.RectangleF)">
            <summary>
                <para>Converts the location and size of a rectangle calculated in pixels to a value calculated in document units (measured in <b>1</b>/<b>300</b> of an inch).
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Drawing.RectangleF"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.PixelToDoc(System.Single)">
            <summary>
                <para>Converts the floating-point value calculated in pixels to a value calculated in document units (measured in <b>1</b>/<b>300</b> of an inch).
</para>
            </summary>
            <param name="val">
		A <see cref="T:System.Single"/> value.

            </param>
            <returns>A <see cref="T:System.Single"/> value.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Round(System.Drawing.PointF)">
            <summary>
                <para>Adjusts the floating-point coordinates of a point to the nearest integer values.
</para>
            </summary>
            <param name="point">
		A <see cref="T:System.Drawing.PointF"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.Point"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Round(System.Drawing.RectangleF)">
            <summary>
                <para>Adjusts the floating-point dimensions of a rectangle to the nearest integer values.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.
</returns>


        </member>
        <member name="T:DevExpress.Utils.Controls.BaseOptionChangedEventHandler">

            <summary>
                <para>Represents a method that will handle the event raised after an option value change.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventHandler.Invoke(System.Object,DevExpress.Utils.Controls.BaseOptionChangedEventArgs)">
            <summary>
                <para>Represents a method that will handle the event raised after the option has been changed.
</para>
            </summary>
            <param name="sender">
		The event sender.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object that contains data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs">

            <summary>
                <para>Provides data for the events that fire after option changes .
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.#ctor(System.String,System.Object,System.Object)">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value representing the name of the option whose value has been changed. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.Name"/> property.

            </param>
            <param name="oldValue">
		A <see cref="T:System.Object"/> value representing the option's previous value. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.OldValue"/> property.

            </param>
            <param name="newValue">
		A <see cref="T:System.Object"/> value representing the option's current value. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.NewValue"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object with default values.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.Name">
            <summary>
                <para>Gets the name of the option whose value has been changed.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value representing the option's name.
</value>


        </member>
        <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.NewValue">
            <summary>
                <para>Gets or sets the option's current value. 
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> value representing the option's current value.
</value>


        </member>
        <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.OldValue">
            <summary>
                <para>Gets the option's previous value.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> value representing the option's previous value.
</value>


        </member>
        <member name="T:DevExpress.Utils.Controls.BaseOptions">

            <summary>
                <para>Serves as a base for classes representing options.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.#ctor(DevExpress.WebUtils.IViewBagOwner,System.String)">
            <summary>
                <para>Initializes a new instance of the BaseOptions class.
</para>
            </summary>
            <param name="viewBagOwner">
		An object that implements the IViewBagOwner interface.

            </param>
            <param name="objectPath">
		The string value.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
            <summary>
                <para>Copies all settings from the options object passed as a parameter.
</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object. 

            </param>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.BeginUpdate">
            <summary>
                <para>Locks the BaseOptions object by disallowing visual updates until the <b>EndUpdate</b> or <b>CancelUpdate</b> method is called.


</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.CancelUpdate">
            <summary>
                <para>Unlocks the BaseOptions object after it has been locked by the <b>BeginUpdate</b> method, without causing an immediate visual update.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.EndUpdate">
            <summary>
                <para>Unlocks the BaseOptions object after a call to the <b>BeginUpdate</b> method and causes an immediate visual update.


</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.Reset">
            <summary>
                <para>Resets all options to their default values.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.BaseOptions.ToString">
            <summary>
                <para>Returns a string representing the currently enabled options.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value representing the currently enabled options. "" (String.Empty) if no option is enabled.
</returns>


        </member>
        <member name="T:DevExpress.XtraEditors.IRangeControlClient">

            <summary>
                <para>The interface that a Range Control Client must implement to be embedded in Range Control (<see cref="T:DevExpress.XtraEditors.RangeControl"/> or <see cref="T:DevExpress.Xpf.Editors.RangeControl.RangeControl"/>).

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.Calculate(System.Drawing.Rectangle)">
            <summary>
                <para>This method is fired when the RangeControl's state, size or settings are changed.
</para>
            </summary>
            <param name="contentRect">
		A Rectangle that specifies the bounds of the Range Control's viewport.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.DrawContent(DevExpress.XtraEditors.RangeControlPaintEventArgs)">
            <summary>
                <para>Renders the Range Control's viewport.
</para>
            </summary>
            <param name="e">
		A RangeControlPaintEventArgs value that contains data to paint the viewport.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.DrawRuler(DevExpress.XtraEditors.RangeControlPaintEventArgs)">
            <summary>
                <para>This method allows you to manually draw the ruler. It returns a value indicating whether the ruler has been drawn.
</para>
            </summary>
            <param name="e">
		A RangeControlPaintEventArgs value that contains data to paint the ruler.

            </param>
            <returns><b>true</b> if the Client draws the ruler itself; <b>false</b> if the ruler is painted by the Range Control.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.GetNormalizedValue(System.Object)">
            <summary>
                <para>Converts a ruler's regular value (between the total range's Minimum and Maximum) into a normalized value (between 0 and 1).
</para>
            </summary>
            <param name="value">
		A ruler's regular value (between the total range's Minimum and Maximum)

            </param>
            <returns>A ruler's normalized value (between 0 and 1).
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.GetOptions">
            <summary>
                <para>The method should return an object that exposes the Client's customization options for the Range Control.
</para>
            </summary>
            <returns>An object that exposes the Client's customization options for the Range Control.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.GetRuler(DevExpress.XtraEditors.RulerInfoArgs)">
            <summary>
                <para>This method should return custom ruler values if these values are not equally spaced.
</para>
            </summary>
            <param name="e">
		A RulerInfoArgs object that contains the ruler related information.

            </param>
            <returns>A list of ruler values; <b>null</b> if the ruler has equally spaced increments specified by the <see cref="P:DevExpress.XtraEditors.IRangeControlClient.RulerDelta"/> property.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.GetValue(System.Double)">
            <summary>
                <para>Converts a ruler's normalized value (between 0 and 1) into a regular value (between the total range's Minimum and Maximum).
</para>
            </summary>
            <param name="normalizedValue">
		A ruler's normalized value (between 0 and 1).

            </param>
            <returns>A ruler's regular value (between the total range's Minimum and Maximum).
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.IRangeControlClient.InvalidText">
            <summary>
                <para>This property should specify the description of the Client's current invalid state.
</para>
            </summary>
            <value>A string that is the description of the Client's current invalid state.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.IRangeControlClient.IsCustomRuler">
            <summary>
                <para>This property should return a value indicating whether the Range Control must reserve space to paint the ruler.
</para>
            </summary>
            <value><b>true</b> if the Range Control must not reserve space to paint the ruler; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.IRangeControlClient.IsValid">
            <summary>
                <para>This property should indicate whether the Client's state is valid and the Client should render itself within the viewport.
</para>
            </summary>
            <value><b>true</b> if the Client's state is valid and the Client should render itself within the viewport; <b>false</b> if the <see cref="P:DevExpress.XtraEditors.IRangeControlClient.InvalidText"/> message should be painted within the viewport.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.IsValidType(System.Type)">
            <summary>
                <para>This method indicates whether the specified type of ruler values is supported.

</para>
            </summary>
            <param name="type">
		The type of ruler values being checked.

            </param>
            <returns><b>true</b> if the specified type is supported; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.IRangeControlClient.NormalizedRulerDelta">
            <summary>
                <para>This property should return the normalized distance between the ruler's adjacent tickmarks.
</para>
            </summary>
            <value>An object that identifies the normalized distance between the ruler's adjacent tickmarks.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.OnClick(DevExpress.XtraEditors.RangeControlHitInfo)">
            <summary>
                <para>This method is called when an end-user clicks within the Range Control's viewport.
</para>
            </summary>
            <param name="hitInfo">
		A RangeControlHitInfo object that allows you to identify the clicked element.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.OnRangeChanged(System.Object,System.Object)">
            <summary>
                <para>This method is called by the Range Control to notify the Client that the range has been changed.
</para>
            </summary>
            <param name="rangeMinimum">
		The minimum value of the new range.

            </param>
            <param name="rangeMaximum">
		The maximum value of the new range.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.OnRangeControlChanged(DevExpress.XtraEditors.IRangeControl)">
            <summary>
                <para> </para>
            </summary>
            <param name="rangeControl">
		 
            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.OnResize">
            <summary>
                <para>This method is called when the Range Control's size is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.IRangeControlClient.RangeBoxBottomIndent">
            <summary>
                <para>This property returns the bottom indent of the selection area within the viewport.

</para>
            </summary>
            <value>The bottom indent of the selection area within the viewport.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.IRangeControlClient.RangeBoxTopIndent">
            <summary>
                <para>This property returns the top indent of the selection area within the viewport.

</para>
            </summary>
            <value>The top indent of the selection area within the viewport.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.IRangeControlClient.RangeChanged">
            <summary>
                <para>This event must fire when the Client's range setting is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.IRangeControlClient.RulerDelta">
            <summary>
                <para>This property returns the distance between the ruler's adjacent tickmarks.

</para>
            </summary>
            <value>An object that identifies the distance between the ruler's adjacent tickmarks.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.RulerToString(System.Int32)">
            <summary>
                <para>Returns the text representation of ruler values

</para>
            </summary>
            <param name="ruleIndex">
		The zero-based index of a specific ruler value.

            </param>
            <returns>A string that is the text representation of the specified ruler value.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.SupportOrientation(System.Windows.Forms.Orientation)">
            <summary>
                <para>This method returns a value indicating whether the Client supports the horizontal and/or vertical orientations.

</para>
            </summary>
            <param name="orientation">
		An orientation to be checked.

            </param>
            <returns><b>true</b> if the Client supports the specified orientation; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.UpdateHotInfo(DevExpress.XtraEditors.RangeControlHitInfo)">
            <summary>
                <para>This method is fired when you move the mouse cursor over the viewport.
</para>
            </summary>
            <param name="hitInfo">
		A RangeControlHitInfo object that contains information on the point being hovered over.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.UpdatePressedInfo(DevExpress.XtraEditors.RangeControlHitInfo)">
            <summary>
                <para>This method is fired when you press the mouse button within the viewport (without releasing the mouse button).

</para>
            </summary>
            <param name="hitInfo">
		A RangeControlHitInfo object that contains information on the point being pressed.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.ValidateRange(DevExpress.XtraEditors.NormalizedRangeInfo)">
            <summary>
                <para>Validates a range when it is changed.
</para>
            </summary>
            <param name="info">
		A NormalizedRangeInfo object that contains information on the current range.

            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.ValidateScale(System.Double)">
            <summary>
                <para>Validates a scale(zoom) factor.
</para>
            </summary>
            <param name="newScale">
		A double value that is the new scale factor that is about to be applied.

            </param>
            <returns>The valid scale factor.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.IRangeControlClient.ValueToString(System.Double)">
            <summary>
                <para> </para>
            </summary>
            <param name="normalizedValue">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryCalculate"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventHandler.Invoke(System.Object,DevExpress.Data.CustomSummaryEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryCalculate"/> event.
</para>
            </summary>
            <param name="sender">
		The event source.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.CustomSummaryEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryCalculate"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.#ctor(System.Int32,System.Object,System.Object,System.Int32,DevExpress.Data.CustomSummaryProcess,System.Object,System.Int32)">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.Data.CustomSummaryEventArgs"/> object.
</para>
            </summary>
            <param name="controllerRow">
		An integer value identifying the processed row by its handle. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.RowHandle"/> property.

            </param>
            <param name="totalValue">
		An object representing the custom calculated summary value. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.TotalValue"/> property.

            </param>
            <param name="fieldValue">
		An object representing the currently processed field value. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.FieldValue"/> property.

            </param>
            <param name="groupRowHandle">
		An integer value identifying the group row whose child data rows are involved in summary calculation. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.GroupRowHandle"/> property.

            </param>
            <param name="summaryProcess">
		A <see cref="T:DevExpress.Data.CustomSummaryProcess"/> enumeration value identifying the current calculation stage. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.SummaryProcess"/> property.

            </param>
            <param name="item">
		An object representing the summary item whose value is being calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.Item"/> property.

            </param>
            <param name="groupLevel">
		An integer value indicating the nested group level of the processed row. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.GroupLevel"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.CustomSummaryEventArgs"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.FieldValue">
            <summary>
                <para>Gets the processed field value.
</para>
            </summary>
            <value>An object representing the processed field value.
</value>


        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.GetGroupSummary(System.Int32,System.Object)">
            <summary>
                <para>Returns the value of the specified group summary for the specified group row.
</para>
            </summary>
            <param name="groupRowHandle">
		An integer that specifies a group row's handle.

            </param>
            <param name="summaryItem">
		An object representing the group summary item. In the GridControl, it's represented by the <see cref="T:DevExpress.XtraGrid.GridGroupSummaryItem"/> class.

            </param>
            <returns>The specified group summary's value.
</returns>


        </member>
        <member name="M:DevExpress.Data.CustomSummaryEventArgs.GetValue(System.String)">
            <summary>
                <para>Returns the value in the specified field
</para>
            </summary>
            <param name="fieldName">
		A string that identifies the field whose value must be returned.

            </param>
            <returns>An object that represents the value of the specified field.
</returns>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.GroupLevel">
            <summary>
                <para>Gets the nested level of the group whose summary value is being calculated.
</para>
            </summary>
            <value>An integer value representing the zero-based nested level of the processed group.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.GroupRowHandle">
            <summary>
                <para>Gets a value identifying the group row whose child data rows are involved in summary calculation.
</para>
            </summary>
            <value>An integer value representing the handle of the group row containing the processed row as a child. <b>0</b> when calculating a total summary value.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.IsGroupSummary">
            <summary>
                <para>Gets whether a group summary value is being calculated.
</para>
            </summary>
            <value><b>true</b> if a group summary value is being calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.IsTotalSummary">
            <summary>
                <para>Gets whether a total summary value is being calculated.
</para>
            </summary>
            <value><b>true</b> if a total summary value is being calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.Item">
            <summary>
                <para>Gets a summary item whose value is being calculated.
</para>
            </summary>
            <value>An object representing a summary item whose value is being calculated.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.Row">
            <summary>
                <para>Gets the currently processed row.
</para>
            </summary>
            <value>The currently processed row.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.RowHandle">
            <summary>
                <para>Gets the handle of the processed row.
</para>
            </summary>
            <value>An integer value identifying the processed data row by its handle.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.SummaryProcess">
            <summary>
                <para>Gets a value indicating calculation stage.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.CustomSummaryProcess"/> enumeration value indicating calculation stage.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.TotalValue">
            <summary>
                <para>Gets or sets the total summary value.
</para>
            </summary>
            <value>An object representing the total summary value.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryEventArgs.TotalValueReady">
            <summary>
                <para>Gets or sets whether the Calculation stage of the custom summary calculation process should be skipped.
</para>
            </summary>
            <value><b>true</b> if the Calculation stage of the custom summary calculation process should be skipped; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryExistEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryExists"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryExistEventHandler.Invoke(System.Object,DevExpress.Data.CustomSummaryExistEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryExists"/> event.
</para>
            </summary>
            <param name="sender">
		The event source.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Data.CustomSummaryExistEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryExistEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryExists"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.CustomSummaryExistEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Data.CustomSummaryExistEventArgs"/> class.
</para>
            </summary>
            <param name="groupRowHandle">
		An integer value specifying the handle of the group row whose summary value is about to be calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupRowHandle"/> property.

            </param>
            <param name="groupLevel">
		An integer value specifying the zero-based nesting level of the processed group. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupLevel"/> property.

            </param>
            <param name="item">
		An object which represents the summary item whose value is about to be calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.Item"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.Exists">
            <summary>
                <para>Gets or sets whether the summary value should be calculated and displayed.
</para>
            </summary>
            <value><b>true</b> to calculate and display the summary value; otherwise, <b>false</b>. 
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupLevel">
            <summary>
                <para>Gets the nesting level of the group whose summary value is being calculated.
</para>
            </summary>
            <value>An integer value representing the zero-based nesting level of the processed group.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupRowHandle">
            <summary>
                <para>Gets a value identifying the group row whose summary value is about to be calculated.
</para>
            </summary>
            <value>An integer value representing the handle of the group row whose summary value is about to be calculated. <b>0</b> when calculating a total summary value.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.IsGroupSummary">
            <summary>
                <para>Gets whether a group summary value is about to be calculated.
</para>
            </summary>
            <value><b>true</b> if a group summary value is about to be calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.IsTotalSummary">
            <summary>
                <para>Gets whether a total summary value is about to be calculated.
</para>
            </summary>
            <value><b>true</b> if a total summary value is about to be calculated; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.Item">
            <summary>
                <para>Gets a summary item whose value is about to be calculated.
</para>
            </summary>
            <value>An object representing a summary item whose value is about to be calculated.
</value>


        </member>
        <member name="T:DevExpress.Data.CustomSummaryProcess">

            <summary>
                <para>Specifies the current status of custom summary calculation.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.CustomSummaryProcess.Calculate">
            <summary>
                <para>Indicates that custom summary calculation is in progress. This means the event is raised for a specific data row containing the field value used to calculate the processed custom summary.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.CustomSummaryProcess.Finalize">
            <summary>
                <para>Indicates that the process of custom summary calculation is finished. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.CustomSummaryProcess.Start">
            <summary>
                <para>Indicates that the process of custom summary calculation is about to be started. 

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags">

            <summary>
                <para>Lists the summary functions available on the Specify Summary Options page of the Report Wizard.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Avg">
            <summary>
                <para>The <b>Average</b> summary function is calculated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Count">
            <summary>
                <para>The <b>Count</b> summary function is calculated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Max">
            <summary>
                <para>The <b>Max</b> summary function is calculated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Min">
            <summary>
                <para>The <b>Min</b> summary function is calculated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.None">
            <summary>
                <para>No summary function is calculated.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Sum">
            <summary>
                <para>The <b>Sum</b> summary function is calculated.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Data.Browsing.Design.ITypeSpecificsService">

            <summary>
                <para>For internal use.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.Browsing.Design.ITypeSpecificsService.GetPropertyTypeSpecifics(System.ComponentModel.PropertyDescriptor)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="property">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="M:DevExpress.Data.Browsing.Design.ITypeSpecificsService.GetTypeSpecifics(System.Type)">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <param name="type">
		 

            </param>
            <returns> 
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.ColumnNameSummaryOptions"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the ColumnNameSummaryOptions class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.#ctor(System.String,DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags)">
            <summary>
                <para>Initializes a new instance of the ColumnNameSummaryOptions class with the specified settings.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value, specifying the column name. This value is assigned to the <see cref="P:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.ColumnName"/> property.

            </param>
            <param name="flags">
		A <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration value. This value is assigned to the <see cref="P:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.Flags"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.#ctor(System.String)">
            <summary>
                <para>Initializes a new instance of the ColumnNameSummaryOptions class with the specified settings.
</para>
            </summary>
            <param name="columnName">
		A <see cref="T:System.String"/> value, specifying the column name. This value is assigned to the <see cref="P:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.ColumnName"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.Clone">
            <summary>
                <para>Creates a copy of the current ColumnNameSummaryOptions instance.
</para>
            </summary>
            <returns>A <see cref="T:System.Object"/> value.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.ColumnName">
            <summary>
                <para>Specifies the data column, across which a summary function is calculated.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value, specifying the column name. 

</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current ColumnNameSummaryOptions instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current ColumnNameSummaryOptions instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.Flags">
            <summary>
                <para>Specifies the summary functions to display on the Specify Summary Options page of the Report Wizard.
</para>
            </summary>
            <value>One or more <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration values.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.GetHashCode">
            <summary>
                <para>Serves as the default hash function.
</para>
            </summary>
            <returns>An integer value, specifying the hash code for the current object.
</returns>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.SummaryOptions">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.SummaryOptions"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.SummaryOptions.#ctor(DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags)">
            <summary>
                <para>Initializes a new instance of the SummaryOptions class with the specified settings.
</para>
            </summary>
            <param name="flags">
		One or more <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration values.

            </param>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Avg">
            <summary>
                <para>Specifies whether or not the Average function should be calculated across the created report.
</para>
            </summary>
            <value><b>true</b> if the Average function is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Count">
            <summary>
                <para>Specifies whether or not the Count function should be calculated across the created report.
</para>
            </summary>
            <value><b>true</b> if the Count function is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Flags">
            <summary>
                <para>Specifies the summary functions to display on the Specify Summary Options page of the Report Wizard.
</para>
            </summary>
            <value>One or more <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration values.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Max">
            <summary>
                <para>Specifies whether or not the Max function should be calculated across the created report.
</para>
            </summary>
            <value><b>true</b> if the Max function is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Min">
            <summary>
                <para>Specifies whether or not the Min function should be calculated across the created report.
</para>
            </summary>
            <value><b>true</b> if the Min function is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Sum">
            <summary>
                <para>Specifies whether or not the Sum function should be calculated across the created report.
</para>
            </summary>
            <value><b>true</b> if the Sum function is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions.#ctor(DevExpress.Data.XtraReports.DataProviders.ColumnInfo,DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags)">
            <summary>
                <para>Initializes a new instance of the ColumnInfoSummaryOptions class with the specified settings.
</para>
            </summary>
            <param name="column">
		A <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> object. This value is assigned to the <see cref="P:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions.ColumnInfo"/> property.

            </param>
            <param name="flags">
		A <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration value.

            </param>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions.ColumnInfo">
            <summary>
                <para>Specifies the data columns available in the Report Wizard.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> object.
</value>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions.Options">
            <summary>
                <para>Provides access to the summary options available on the Specify Summary Options page of the Report Wizard.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptions"/> object.
</value>


        </member>
        <member name="T:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation">

            <summary>
                <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.CustomLabelInformation"/> class instead.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.#ctor">
            <summary>
                <para>Initializes a new instance of the CustomLabelInformation class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.BottomMargin">
            <summary>
                <para>Specifies the bottom margin of a custom label.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> structure.
</value>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Clone">
            <summary>
                <para>Creates a copy of the current CustomLabelInformation instance.
</para>
            </summary>
            <returns>A <see cref="T:System.Object"/> value.
</returns>


        </member>
        <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Equals(System.Object)">
            <summary>
                <para>Determines whether or not the specified object is equal to the current CustomLabelInformation instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current CustomLabelInformation instance; otherwise <b>false</b>.
</returns>


        </member>
        <member nam                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      